{"version":3,"sources":["redux/constants/TTConstants/index.ts","redux/actions/TTActions/index.ts","containers/shared/index.ts","components/Toast/Toast.tsx","api/ApiTypes.ts","types/database/models.ts","redux/reducers/TTReducer/index.ts","redux/constants/ViewConstants/index.ts","redux/reducers/ViewReducer/index.ts","redux/constants/AuthConstants/index.ts","redux/reducers/AuthReducer/index.ts","redux/types/store.ts","api/QuickHitAPI.ts","components/Achievements/Achievements.ts","redux/actions/AuthActions/index.ts","components/QHDataLoader/QHDataLoader.tsx","components/Achievements/AchievementChecker.ts","components/Ladder/NewGame/NewGame.tsx","containers/NewGame/NewGame.ts","components/Ladder/NewEditPlayer/NewEditPlayer.tsx","util/fa-icons.ts","util/QuickHitPage.ts","components/Ladder/PlayerCard/PlayerCard.tsx","components/Home/Home.tsx","containers/Home/Home.ts","components/NotFound/NotFound.tsx","components/Footer/Footer.tsx","components/KeyPrompt/KeyPrompt.tsx","containers/KeyPrompt/KeyPrompt.ts","components/Navbar/Navbar.tsx","components/Ladder/Ladder.tsx","containers/Ladder/Ladder.ts","redux/actions/ViewActions/index.ts","components/RecentGames/RecentGames.tsx","containers/RecentGames/RecentGames.ts","components/PlayerStatistics/AchievementFeed.tsx","containers/AchievementFeed/AchievementFeed.ts","components/PlayerStatistics/PlayerStatistics.tsx","containers/PlayerStatistics/PlayerStatistics.ts","containers/QHDataLoader/QHDataLoader.ts","types/types.ts","components/Tournament/NewTournament/NewTournament.tsx","components/Tournament/EnterTournamentGame/EnterTournamentGame.tsx","components/Tournament/Tournament.tsx","containers/Tournament/Tournament.ts","App.tsx","index.tsx"],"names":["SET_MATCHES","SET_PLAYERS","SET_LOADING","SET_FORCE_REFRESH","SET_HAPPY_HOUR","SET_BADGES","SET_TOURNAMENTS","setRefresh","newRefresh","type","constants","value","mapTTDataToProps","store","loading","ttData","players","matches","happyHour","badges","tournaments","refresh","mapTTDispatchToProps","dispatch","setForceRefresh","actions","TOAST_DEFAULT_OPTS","animation","time","HttpMethod","ApiActions","makeSuccessToast","title","message","toast","description","icon","makeErrorToast","Toaster","position","className","getTodaysDate","Date","toLocaleDateString","replace","dataInitialState","date","hourStart","multiplier","SET_HIDE_ZERO_GAME_PLAYERS","SET_SHOW_CARDS","viewInitialState","hideZeroGamePlayers","showCards","SET_AUTH_KEY","SET_TOKEN","authInitialState","authKey","undefined","token","persistConfig","key","storage","blacklist","authConfig","reducers","combineReducers","viewStore","state","action","authStore","persistReducer","createStore","Achievement","QuickHitAPI","onSuccess","onFailure","makeAxiosRequest","PLAYERS","GET","then","response","Object","values","data","catch","error","MATCHES","BADGE","TOURNAMENT","badgeToAdd","PATCH","id","JSON","stringify","playerToAdd","HAPPY_HOUR","matchToAdd","winningPlayer","losingPlayer","addOrUpdatePlayer","tournamentToAdd","uri","method","this","authenticateToFirebase","axios","baseURL","process","url","replaceAll","headers","getToken","getState","Promise","resolve","POST","email","password","returnSecureToken","idToken","FATALITY_BADGE","FATALITY","text","CLUTCH_PERFORMER_BADGE","CLUTCH_PERFORMER","HEART_BREAKER_BADGE","HEART_BREAKER","ON_A_ROLL_BADGE","ON_A_ROLL","ASCENDED_BADGE","ASCENDED","UNSTOPPABLE_BADGE","UNSTOPPABLE","HELPLESS_BADGE","HELPLESS","SUPERIOR_BADGE","SUPERIOR","CELLAR_DWELLAR_BADGE","CELLAR_DWELLAR","A_LITTLE_EMBARRASSING_BADGE","A_LITTLE_EMBARRASSING","SHOULD_HAVE_PUT_MONEY_ON_IT_BADGE","SHOULD_HAVE_PUT_MONEY_ON_IT","getWinLossForPlayer","playerId","winLoss","wins","losses","forEach","match","winning_player_id","losing_player_id","getRecordAgainstPlayer","opponentId","getPlayersMap","playersMap","Map","player","set","randomIntFromInterval","min","max","Math","floor","random","QHDataLoader","props","intervalRef","useRef","useState","polling","setPolling","getMatches","receivedMatches","length","setLoading","setMatches","getData","getTodaysHappyHour","setHappyHour","newHappyHour","setHappyHourToday","getHappyHourOrSetIfNotPresent","getBadges","setBadges","getTournaments","setTournaments","getPlayers","setPlayers","useEffect","current","clearInterval","setInterval","Transition","visible","Loader","content","BADGE_CHECK_MAP","checkForFatality","checkForClutchPerformer","checkForHeartBreaker","checkForWinsInARow","checkForHelpless","checkForSuperior","checkForCellarDwellar","checkForALittleEmbarrassing","checkForShouldHavePutMoneyOnIt","matchesThatWereWonBy2PointsOrLess","filter","winning_player_score","losing_player_score","matchesThatWereLostBy2PointsOrLess","count","matchesInvolvingPlayer","sort","match1","match2","localeCompare","streak","lastMatchPlayer","matchesWonWithoutLosingAPoint","matchesLostWithoutEarningAPoint","matchesInvolving1300ELORank","winner_new_elo","matchesInvolving1100ELORank","loser_new_elo","matchesInvolvingALossToRelativeScrubOpponent","losing_player_original_elo","winning_player_original_elo","matchesInvolvingLowOddsWin","decorateAchievementForUpload","badgeDesc","earnedPlayer","involvedPlayer","uuidv4","toISOString","player_id","involved_player","getBadgeKeys","badge","flatMap","NewGame","React","open","setModalOpen","setWinningPlayer","setLosingPlayer","winningPlayerScore","setWinningPlayerScore","losingPlayerScore","setLosingPlayerScore","sendCreateRequest","addAnother","calculateAchievements","onError","errorMsg","kFactor","getHours","elo","EloRank","winnerElo","get","loserElo","winningPlayerExpectedScore","getExpected","losingPlayerExpectedScore","winnerNewElo","updateRating","loserNewElo","happy_hour","addNewMatch","winnerBadgeKeys","loserBadgeKeys","checkFn","includes","addBadge","checkForAchievementTriggers","onNewGameAdded","renderPlayerOption","Icon","name","size","Modal","closeIcon","onClose","onOpen","trigger","customModalOpenElement","Button","inverted","Header","Content","Form","Group","widths","Select","fluid","label","options","map","search","option","parse","toLowerCase","placeholder","required","onChange","event","Field","target","parseInt","onClick","disabled","connect","ownProps","iconOptions","renderIconOption","NewEditPlayer","QuickHitPage","editingPlayer","setIcon","setName","onSubmit","onRequestMade","Input","toString","startsWith","Card","circular","style","margin","color","href","rel","BASE_PATH","PlayerCard","as","to","STATISTICS","extra","renderDateString","setHours","toLocaleTimeString","Home","transitionOnMount","ButtonGroup","horizontal","LADDER","RECENT_GAMES","duration","unmountOnHide","player1","player2","getCurrentChampion","Subheader","NotFound","Footer","KeyPrompt","setKey","isOpen","setIsOpen","Menu","Item","warning","setAuthKey","location","reload","newKey","authActions","Navbar","stackable","HOME","header","Ladder","setHideZeroGamePlayers","setShowCards","playersLadder","playerCard","push","renderPlayersAsCards","playerTableRows","addPlayer","Table","Row","Cell","unstackable","celled","HeaderCell","Body","renderPlayersInTable","ttActions","viewActions","RecentGames","currentPage","setCurrentPage","sortAndFilterMatches","sortedAndFilteredMatches","focusedPlayerId","matchA","matchB","getTime","getTotalPages","Feed","events","nextPageOffset","i","meta","ReactTimeAgo","Divider","toDateString","getMatchEvents","Pagination","totalPages","defaultActivePage","onPageChange","activePage","siblingRange","AchievementFeed","relevantBadges","badgeA","badgeB","focusedBadge","attainmentPercentage","toFixed","getAchievements","PlayerStatistics","params","extraStats","minELO","maxELO","winsMap","lossesMap","victim","nemesis","has","maxWins","maxLosses","getExtraPlayerStats","Popup","tournamentWins","tournamentRunnerUps","Statistic","round","Grid","columns","Column","TournamentParticipantsType","TournamentType","newMatches","newPlayers","newLoading","newBadges","newTournaments","NewTournament","startingNewTournament","setStartingNewTournament","newTournamentName","setNewTournamentName","STANDARD","newTournamentParticipantsType","setParticipantsType","SINGLE","newTournamentType","setTournamentType","divided","sortedPlayers","REVERSE","reverse","tournamentMatches","AFL","match_number","home_player_id","away_player_id","newTournament","start_date","getISODate","participants","addUpdateTournament","startNewTournament","inline","Radio","checked","DOUBLE","ladderPlayers","tableRows","positive","negative","getLadderTableRows","EnterTournamentGame","homePlayerEnteringScore","setHomePlayerEnteringScore","awayPlayerEnteringScore","setAwayPlayerEnteringScore","confirmingMatchScore","setConfirmingMatchScore","endTournament","matchEntering","homeWon","matchWinnerId","matchLoserId","currentTournament","end_date","tournamentWinner","tournamentRunnerUp","onPlayerUpdateFailure","tournamentName","tournamentBadgeKey","TOURNAMENT_WINNER_BADGE","TOURNAMENT_RUNNER_UP_BADGE","generateTournamentAchievements","updateFutureTournamentMatch","futureMatchIndex","futurePlayerId","winnerWillBeHome","home_score","away_score","homePlayerEntering","awayPlayerEntering","startDateWrongFormat","slice","Tournament","newTournamentModalOpen","openNewTournamentModal","enterGameModalOpen","openEnterGameModal","recapModalOpen","openRecapModal","setHomePlayerEntering","setAwayPlayerEntering","setMatchEntering","viewPastModalOpen","openViewPastModal","Audio","pastTournamentsAudioSynth","pastTournamentsAudioVapour","recapAudio","arcadeAudioSynth","arcadeAudioVapour","volume","loop","tournament","secondPastModalOpen","openSecondPastModal","pastTournamentBeingViewed","setViewedPastTournament","synth","setSynth","pastTournamentView","setPastTournamentView","p1","p2","some","sortedTournaments","t1","t2","getPlayerRank","getMatchBtn","openGameEntryModal","getMatchItem","homeTbdText","awayTbdText","getWinner","finalMatch","getHeaders","getBrackets","brackets","renderTournament","getRecapMatchLabels","winnerRank","loserRank","labels","Label","abs","getMatchName","tournamentType","playPastTableAudio","pause","play","playPastArcadeAudio","currentTime","recapMatches","winnerId","loserId","winnerName","loserName","winnerScore","loserScore","getRecapMatches","toUpperCase","subheader","Message","active","Dropdown","e","selectable","getPastTournamentsTableRows","pastWinners","getPastWinners","playerPointsWon","getHighScoresTableRows","App","exact","path","component","NOT_FOUND","TimeAgo","addDefaultLocale","en","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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,KAAKkN,MAAM3N,EAAKzE,SACjEA,MAAOwF,EAAeoL,EAAmBpL,GAAcxF,MAAQ,KAEnE,eAAC0R,EAAA,EAAKgB,MAAN,WACI,wDACA,uBACI5S,KAAM,SACNwJ,IAAK,EACLiJ,UAAQ,EACRvS,MAAK,OAAE+O,QAAF,IAAEA,IAAqB,GAC5ByD,SAAU,SAACC,GAAD,OACNzD,EAC2B,KAAvByD,EAAME,OAAO3S,MAAe4S,SAASH,EAAME,OAAO3S,YAAS+C,YAM/E,cAACuO,EAAA,EAAD,CACIuB,QAAS,kBAAY5D,GAAkB,IACvC6D,WAEQvN,QACuBxC,IAAvB8L,GACArJ,QACsBzC,IAAtBgM,GAPZ,gBAaA,cAACuC,EAAA,EAAD,CACIuB,QAAS,kBAAY5D,GAAkB,IACvC6D,WAEQvN,QACuBxC,IAAvB8L,GACArJ,QACsBzC,IAAtBgM,GAPZ,yCCvOLgE,oBAZR,SACH7S,EACA8S,GAEA,MAAO,CACH3S,QAASH,EAAME,OAAOC,QACtBE,UAAWL,EAAME,OAAOG,UACxB8Q,uBAAwB2B,EAAS3B,uBACjCV,eAAgBqC,EAASrC,kBAIOhQ,EAAzBoS,CAA+CxE,I,UCJxD0E,I,OCjBmC,CACrC,sCACA,8BACA,oBACA,QACA,UACA,oBACA,4BACA,OACA,aACA,eACA,kBACA,0BACA,gBACA,MACA,mBACA,aACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,8BACA,sCACA,8BACA,sCACA,+BACA,uCACA,4BACA,oCACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,mBACA,8BACA,4BACA,aACA,aACA,cACA,oBACA,4BACA,oBACA,4BACA,qBACA,6BACA,kBACA,0BACA,WACA,kBACA,aACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,iBACA,eACA,WACA,WACA,0BACA,qBACA,4BACA,kBACA,0BACA,kBACA,0BACA,mBACA,2BACA,gBACA,wBACA,eACA,uBACA,UACA,uBACA,qBACA,iBACA,4BACA,4BACA,6BACA,0BACA,gBACA,OACA,SACA,UACA,OACA,iBACA,QACA,YACA,UACA,QACA,eACA,uBACA,UACA,WACA,oBACA,qBACA,OACA,qBACA,mBACA,mBACA,iBACA,YACA,oBACA,kBACA,UACA,OACA,iBACA,cACA,aACA,OACA,iBACA,SACA,UACA,WACA,oBACA,WACA,SACA,iBACA,oBACA,4BACA,WACA,QACA,SACA,0BACA,gBACA,eACA,aACA,qBACA,aACA,qBACA,OACA,UACA,aACA,aACA,mBACA,QACA,QACA,eACA,uBACA,eACA,OACA,cACA,sBACA,UACA,SACA,OACA,iBACA,MACA,aACA,gBACA,eACA,OACA,cACA,sBACA,OACA,iBACA,OACA,iBACA,QACA,cACA,aACA,YACA,eACA,uBACA,eACA,uBACA,UACA,gBACA,gBACA,OACA,YACA,WACA,mBACA,WACA,WACA,aACA,WACA,mBACA,qBACA,6BACA,cACA,aACA,YACA,oBACA,aACA,YACA,YACA,oBACA,SACA,UACA,UACA,kBACA,OACA,eACA,YACA,oBACA,MACA,OACA,eACA,WACA,mBACA,gBACA,wBACA,kBACA,SACA,MACA,OACA,eACA,iBACA,yBACA,SACA,iBACA,cACA,sBACA,QACA,WACA,YACA,QACA,aACA,mBACA,UACA,QACA,eACA,eACA,aACA,qBACA,OACA,eACA,UACA,cACA,sBACA,WACA,QACA,MACA,OACA,QACA,YACA,YACA,QACA,eACA,cACA,aACA,eACA,aACA,cACA,aACA,cACA,UACA,UACA,OACA,MACA,OACA,cACA,SACA,OACA,eACA,iBACA,yBACA,YACA,oBACA,SACA,oBACA,SACA,iBACA,cACA,sBACA,WACA,mBACA,YACA,SACA,mBACA,UACA,WACA,cACA,eACA,uBACA,kBACA,0BACA,kBACA,0BACA,iBACA,yBACA,eACA,uBACA,eACA,uBACA,sCACA,8BACA,KACA,OACA,eACA,aACA,qBACA,WACA,UACA,kBACA,oBACA,4BACA,WACA,mBACA,WACA,mBACA,gBACA,wBACA,kBACA,MACA,QACA,WACA,aACA,mBACA,SACA,mBACA,cACA,sBACA,QACA,eACA,eACA,MACA,aACA,MACA,OACA,UACA,WACA,MACA,cACA,aACA,WACA,mBACA,SACA,YACA,SACA,mBACA,OACA,YACA,QACA,OACA,eACA,SACA,SACA,mBACA,KACA,SACA,cACA,YACA,YACA,uBACA,+BACA,aACA,aACA,aACA,cACA,WACA,WACA,OACA,eACA,aACA,qBACA,WACA,mBACA,qBACA,6BACA,iBACA,yBACA,iBACA,yBACA,gBACA,wBACA,iBACA,yBACA,QACA,gBACA,YACA,oBACA,gBACA,iBACA,kBACA,YACA,SACA,QACA,gBACA,OACA,eACA,OACA,aACA,MACA,OACA,eACA,SACA,MACA,cACA,YACA,oBACA,eACA,uBACA,iBACA,yBACA,cACA,QACA,mBACA,OACA,eACA,OACA,eACA,gBACA,aACA,cACA,OACA,YACA,oBACA,QACA,gBACA,UACA,OACA,eACA,MACA,OACA,eACA,SACA,OACA,eACA,iBACA,yBACA,OACA,UACA,WACA,SACA,SACA,UACA,OACA,iBACA,yBACA,UACA,UACA,UACA,cACA,sBACA,YACA,YACA,QACA,mBACA,QACA,aACA,cACA,OACA,iBACA,QACA,YACA,QACA,gBACA,YACA,cACA,OACA,iBACA,QACA,QACA,cACA,aACA,KACA,WACA,UACA,QACA,kBACA,0BACA,YACA,OACA,iBACA,SACA,UACA,QACA,gBACA,OACA,eACA,MACA,OACA,eACA,iBACA,yBACA,eACA,uBACA,aACA,qBACA,YACA,oBACA,aACA,qBACA,aACA,qBACA,WACA,mBACA,kBACA,0BACA,aACA,qBACA,YACA,oBACA,SACA,iBACA,cACA,sBACA,QACA,OACA,eACA,cACA,sBACA,aACA,OACA,cACA,cACA,yBACA,uBACA,UACA,SACA,cACA,wBACA,QACA,eACA,aACA,cACA,sBACA,aACA,qBACA,aACA,qBACA,kBACA,0BACA,kBACA,0BACA,mBACA,2BACA,gBACA,wBACA,eACA,uBACA,YACA,oBACA,gBACA,wBACA,aACA,qBACA,YACA,oBACA,cACA,sBACA,YACA,oBACA,YACA,WACA,QACA,gBACA,YACA,WACA,mBACA,SACA,cACA,sBACA,cACA,UACA,aACA,SACA,OACA,SACA,eACA,QACA,gBACA,WACA,SACA,MACA,cACA,YACA,oBACA,aACA,qBACA,OACA,WACA,mBACA,UACA,kBACA,QACA,gBACA,SACA,iBACA,qBACA,OACA,MACA,UACA,OACA,OACA,OACA,eACA,aACA,qBACA,MACA,WACA,WACA,aACA,WACA,mBACA,qBACA,6BACA,iBACA,yBACA,iBACA,yBACA,gBACA,wBACA,iBACA,yBACA,cACA,QACA,eACA,uBACA,eACA,uBACA,SACA,iBACA,YACA,oBACA,QACA,gBACA,QACA,iBACA,eACA,SACA,MACA,OACA,OACA,eACA,MACA,WACA,aACA,qBACA,WACA,OACA,eACA,sBACA,oBACA,WACA,mBACA,gBACA,wBACA,SACA,cACA,qBACA,uBACA,qBACA,4BACA,MACA,YACA,oBACA,OACA,eACA,iBACA,yBACA,SACA,OACA,eACA,iBACA,SACA,iBACA,cACA,sBACA,QACA,gBACA,UACA,QACA,gBACA,UACA,OACA,WACA,OACA,cACA,WACA,QACA,MACA,cACA,aACA,mBACA,QACA,eACA,eACA,uBACA,QACA,mBACA,OACA,cACA,cACA,sBACA,SACA,WACA,kBACA,0BACA,aACA,cACA,OACA,iBACA,QACA,YACA,MACA,aACA,OACA,eACA,SACA,eACA,cACA,QACA,kBACA,yBACA,eACA,uBACA,mBACA,UACA,WACA,SACA,UACA,qBACA,QACA,gBACA,OACA,qBACA,mBACA,mBACA,iBACA,YACA,oBACA,kBACA,UACA,OACA,eACA,YACA,oBACA,OACA,iBACA,cACA,sBACA,YACA,oBACA,QACA,eACA,uBACA,aACA,YACA,QACA,kBACA,0BACA,SACA,OACA,iBACA,SACA,OACA,eACA,cACA,sBACA,OACA,MACA,QACA,kBACA,iBACA,QACA,gBACA,SACA,gBACA,QACA,YACA,YACA,SACA,gBACA,OACA,MACA,OACA,OACA,eACA,aACA,qBACA,UACA,aACA,gBACA,QACA,OACA,OACA,WACA,mBACA,YACA,WACA,mBACA,MACA,SACA,aACA,cACA,MACA,YACA,oBACA,cACA,OACA,oBACA,OACA,eACA,iBACA,QACA,UACA,QACA,OACA,gBACA,QACA,iBACA,WACA,QACA,gBACA,YACA,OACA,WACA,mBACA,QACA,gBACA,SACA,iBACA,WACA,OACA,cACA,MACA,OACA,QACA,gBACA,YACA,oBACA,YACA,oBACA,iBACA,aACA,SACA,OACA,MACA,cACA,aACA,uBACA,UACA,YACA,SACA,uBACA,+BACA,aACA,QACA,YACA,oBACA,MACA,QACA,eACA,eACA,QACA,OACA,OACA,cACA,sBACA,QACA,UACA,OACA,SACA,SACA,eACA,cACA,OACA,eACA,kBACA,gBACA,SACA,cACA,SACA,WACA,MACA,OACA,OACA,YACA,mBACA,OACA,QACA,OACA,SACA,QACA,MACA,WACA,aACA,gBACA,WACA,aACA,OACA,SACA,YACA,WACA,MACA,YACA,QACA,gBACA,YACA,WACA,mBACA,kBACA,QACA,OACA,cACA,UACA,cACA,UACA,SACA,YACA,SACA,UACA,gBACA,OACA,MACA,OACA,OACA,eACA,UACA,aACA,gBACA,OACA,OACA,WACA,mBACA,YACA,MACA,WACA,mBACA,WACA,WACA,MACA,aACA,WACA,mBACA,qBACA,6BACA,SACA,eACA,MACA,YACA,oBACA,QACA,SACA,MACA,OACA,UACA,kBACA,OACA,eACA,OACA,QACA,MACA,WACA,mBACA,gBACA,wBACA,SACA,MACA,cACA,MACA,cACA,OACA,eACA,iBACA,yBACA,OACA,OACA,oBACA,OACA,eACA,iBACA,QACA,SACA,iBACA,UACA,QACA,MACA,cACA,OACA,gBACA,QACA,iBACA,MACA,cACA,aACA,QACA,gBACA,OACA,WACA,mBACA,YACA,oBACA,QACA,gBACA,SACA,iBACA,WACA,MACA,WACA,mBACA,SACA,OACA,QACA,gBACA,YACA,oBACA,YACA,oBACA,OACA,YACA,QACA,SACA,MACA,cACA,aACA,uBACA,UACA,YACA,SACA,YACA,aACA,SACA,mBACA,uBACA,+BACA,OACA,eACA,aACA,YACA,oBACA,cACA,cACA,sBACA,YACA,QACA,MACA,mBACA,QACA,QACA,OACA,QACA,eACA,OACA,SACA,OACA,eACA,SACA,mBACA,eACA,kBACA,gBACA,SACA,YACA,oBACA,gBACA,OACA,eACA,cACA,sBACA,YACA,SACA,WACA,MACA,cACA,SACA,mBACA,uBACA,MACA,OACA,OACA,YACA,mBACA,QACA,QACA,kBACA,0BACA,OACA,SACA,QACA,KACA,WACA,aACA,SACA,mBACA,gBACA,WACA,aACA,SACA,OACA,eACA,WACA,mBACA,WACA,SACA,eACA,kBACA,YACA,cACA,cACA,sBACA,MACA,cACA,OACA,YACA,oBACA,QACA,gBACA,MACA,eACA,kBACA,gBACA,OACA,eACA,MACA,OACA,cACA,sBACA,YACA,oBACA,SACA,WACA,mBACA,WACA,mBACA,cACA,SACA,iBACA,QACA,UACA,kBACA,OACA,eACA,SACA,iBACA,QACA,gBACA,aACA,OACA,SACA,iBACA,OACA,eACA,WACA,cACA,eACA,MACA,UACA,kBACA,aACA,YACA,oBACA,YACA,oBACA,UACA,MACA,cACA,OACA,gBACA,kBACA,eACA,gBACA,SACA,iBACA,YACA,cACA,YACA,eACA,kBACA,MACA,gBACA,eACA,eACA,kBACA,yBACA,OACA,eACA,aACA,qBACA,WACA,mBACA,qBACA,6BACA,iBACA,yBACA,iBACA,yBACA,gBACA,wBACA,iBACA,yBACA,kBACA,YACA,cACA,qBACA,uBACA,MACA,YACA,oBACA,OACA,eACA,iBACA,yBACA,SACA,iBACA,cACA,sBACA,OACA,cACA,OACA,YACA,QACA,eACA,eACA,uBACA,OACA,cACA,cACA,sBACA,WACA,kBACA,0BACA,mBACA,gBACA,oBACA,qBACA,oBACA,mBACA,mBACA,sBACA,6BACA,cACA,sBACA,YACA,oBACA,aACA,YACA,SACA,mBACA,eACA,uBACA,eACA,uBACA,MACA,QACA,QACA,SACA,QACA,gBACA,WACA,mBACA,UACA,kBACA,OACA,MACA,cACA,YACA,QACA,gBACA,cACA,OACA,eACA,cACA,sBACA,UACA,YACA,cACA,aACA,QACA,aACA,YACA,UACA,MACA,MACA,cACA,aACA,cACA,sBACA,QACA,SACA,OACA,gBACA,gBACA,SACA,OACA,QACA,QACA,aACA,UACA,OACA,WACA,mBACA,OACA,eACA,WACA,mBACA,gBACA,wBACA,SACA,OACA,eACA,iBACA,yBACA,SACA,iBACA,cACA,sBACA,WACA,mBACA,YACA,oBACA,cACA,sBACA,YACA,YACA,aACA,mBACA,aACA,cACA,cACA,sBACA,YACA,QACA,aACA,WACA,MACA,WACA,iBACA,UACA,SACA,aACA,SACA,UACA,YACA,gBACA,UACA,YACA,gBACA,QACA,QACA,YACA,aACA,UACA,eACA,UACA,SACA,MACA,WACA,UACA,iBACA,YACA,YACA,UACA,OACA,YACA,aACA,UACA,YACA,YACA,cACA,MACA,mBACA,aACA,gBACA,UACA,eACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,aACA,SACA,aACA,aACA,eACA,UACA,WACA,iBACA,SACA,SACA,mBACA,OACA,iBACA,aACA,UACA,WACA,YACA,YACA,UACA,aACA,OACA,gBACA,UACA,YACA,SACA,SACA,gBACA,WACA,kBACA,UACA,SACA,SACA,aACA,OACA,YACA,QACA,SACA,SACA,SACA,WACA,OACA,eACA,WACA,aACA,qBACA,kBACA,UACA,cACA,aACA,SACA,YACA,MACA,eACA,yBACA,oBACA,YACA,eACA,eACA,yBACA,WACA,aACA,iBACA,UACA,aACA,KACA,YACA,MACA,aACA,SACA,mBACA,gBACA,YACA,SACA,SACA,QACA,UACA,SACA,YACA,cACA,SACA,eACA,cACA,cACA,gBACA,qBACA,gBACA,WACA,OACA,WACA,QACA,OACA,cACA,qBACA,OACA,gBACA,QACA,SACA,QACA,QACA,UACA,OACA,YACA,oBACA,UACA,SACA,cACA,UACA,QACA,SACA,KACA,YACA,WACA,SACA,cACA,gBACA,SACA,UACA,SACA,gBACA,UACA,OACA,WACA,WACA,qBACA,SACA,QACA,OACA,UACA,SACA,UACA,SACA,WACA,QACA,SACA,YACA,MACA,WACA,SACA,OACA,SACA,UACA,kBACA,OACA,UACA,MACA,MACA,cACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,MACA,QACA,YACA,SACA,UACA,SACA,YACA,cACA,oBACA,MACA,aACA,uBACA,gBACA,YACA,cACA,mBACA,cACA,eACA,SACA,SACA,KACA,YACA,QACA,UACA,QACA,QACA,WACA,SACA,eACA,gBACA,UACA,SACA,SACA,YACA,aACA,UACA,SACA,OACA,SACA,SACA,cACA,WACA,SACA,eACA,eACA,cACA,UACA,WACA,QACA,QACA,aACA,aACA,WACA,iBACA,kBACA,aACA,UACA,UACA,iBACA,iBACA,aACA,QACA,eACA,eACA,eACA,SACA,SACA,WACA,eACA,cACA,qBACA,cACA,SACA,WACA,iBACA,gBACA,YACA,SACA,cACA,SACA,gBACA,SACA,UACA,iBACA,QACA,OACA,QACA,cACA,UACA,MACA,WACA,SACA,UACA,SACA,gBACA,QACA,QACA,eACA,UACA,OACA,KACA,MACA,QACA,SACA,QACA,SACA,WACA,kBACA,QACA,cACA,UACA,YACA,mBACA,aACA,aACA,UACA,OACA,OACA,cACA,eACA,QACA,SACA,uBACA,OACA,QACA,UACA,iBACA,aACA,eACA,iBACA,cACA,SACA,SACA,aACA,aACA,kBACA,cACA,WACA,MACA,aACA,QACA,MACA,MACA,eACA,aACA,aACA,kBACA,UACA,mBACA,MACA,8BACA,SACA,YACA,UACA,MACA,UACA,eACA,eACA,cACA,cACA,gBACA,cACA,eACA,WACA,eACA,wBACA,eACA,UACA,cACA,OACA,SACA,OACA,KACA,QACA,OACA,mBACA,YACA,iBACA,QACA,MACA,WACA,aACA,WACA,YACA,UACA,WACA,kBACA,SACA,YACA,cACA,SACA,SACA,OACA,kBACA,WACA,YACA,iBACA,QACA,MACA,OACA,aACA,UACA,WACA,OACA,oBACA,YACA,oBACA,OACA,YACA,OACA,OACA,MACA,MACA,qBACA,uBACA,OACA,aACA,cACA,QACA,IACA,eACA,WACA,kBACA,SACA,cACA,OACA,eACA,OACA,QACA,iBACA,iBACA,gBACA,kBACA,gBACA,OACA,MACA,UACA,MACA,cACA,WACA,MACA,MACA,MACA,MACA,QACA,UACA,YACA,OACA,aACA,kBACA,UACA,OACA,cACA,UACA,eACA,eACA,cACA,OACA,kBACA,MACA,SACA,iBACA,kBACA,gBACA,iBACA,WACA,UACA,OACA,iBACA,yBACA,gBACA,UACA,0BACA,wBACA,eACA,UACA,cACA,gBACA,QACA,UACA,YACA,YACA,iBACA,MACA,YACA,QACA,gBACA,gBACA,iBACA,cACA,QACA,aACA,QACA,UACA,WACA,OACA,SACA,UACA,gBACA,uBACA,cACA,SACA,SACA,MACA,SACA,MACA,QACA,QACA,MACA,iBACA,OACA,UACA,WACA,SACA,SACA,WACA,OACA,UACA,WACA,UACA,UACA,SACA,UACA,SACA,0BACA,2BACA,iBACA,yBACA,0BACA,kBACA,yBACA,0BACA,QACA,MACA,cACA,UACA,OACA,SACA,WACA,aACA,cACA,iBACA,QACA,cACA,aACA,OACA,KACA,cACA,cACA,eACA,YACA,YACA,SACA,YACA,gBACA,gBACA,iBACA,cACA,MACA,SACA,YACA,SACA,MACA,cACA,aACA,cACA,SACA,QACA,eACA,aACA,uBACA,OACA,iBACA,eACA,UACA,QACA,SACA,SACA,QACA,MACA,qBACA,kB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","file":"static/js/main.169b4a14.chunk.js","sourcesContent":["export const SET_MATCHES = \"SET_MATCHES\";\nexport type SET_MATCHES_TYPE = typeof SET_MATCHES;\n\nexport const SET_PLAYERS = \"SET_PLAYERS\";\nexport type SET_PLAYERS_TYPE = typeof SET_PLAYERS;\n\nexport const SET_LOADING = \"SET_LOADING\";\nexport type SET_LOADING_TYPE = typeof SET_LOADING;\n\nexport const SET_FORCE_REFRESH = \"SET_FORCE_REFRESH\";\nexport type SET_FORCE_REFRESH_TYPE = typeof SET_FORCE_REFRESH;\n\nexport const SET_HAPPY_HOUR = \"SET_HAPPY_HOUR\";\nexport type SET_HAPPY_HOUR_TYPE = typeof SET_HAPPY_HOUR;\n\nexport const SET_BADGES = \"SET_BADGES\";\nexport type SET_BADGES_TYPE = typeof SET_BADGES;\n\nexport const SET_TOURNAMENTS = \"SET_TOURNAMENTS\";\nexport type SET_TOURNAMENTS_TYPE = typeof SET_TOURNAMENTS;\n","import * as constants from \"../../constants/TTConstants\";\nimport { DbBadge, DbHappyHour, DbMatch, DbPlayer, DbTournament } from \"../../../types/database/models\";\n\nexport interface SetMatchesAction {\n    type: constants.SET_MATCHES_TYPE;\n    value: DbMatch[];\n}\n\nexport interface SetPlayersAction {\n    type: constants.SET_PLAYERS_TYPE;\n    value: DbPlayer[];\n}\n\nexport interface SetLoadingAction {\n    type: constants.SET_LOADING_TYPE;\n    value: boolean;\n}\n\nexport interface SetForceRefreshAction {\n    type: constants.SET_FORCE_REFRESH_TYPE;\n    value: boolean;\n}\n\nexport interface SetHappyHourAction {\n    type: constants.SET_HAPPY_HOUR_TYPE;\n    value: DbHappyHour;\n}\n\nexport interface SetBadgesAction {\n    type: constants.SET_BADGES_TYPE;\n    value: DbBadge[];\n}\n\nexport interface SetTournamentsAction {\n    type: constants.SET_TOURNAMENTS_TYPE;\n    value: DbTournament[];\n}\n\nexport function setMatches(newMatches: DbMatch[]): SetMatchesAction {\n    return {\n        type: constants.SET_MATCHES,\n        value: newMatches,\n    };\n}\n\nexport function setPlayers(newPlayers: DbPlayer[]): SetPlayersAction {\n    return {\n        type: constants.SET_PLAYERS,\n        value: newPlayers,\n    };\n}\n\nexport function setLoading(newLoading: boolean): SetLoadingAction {\n    return {\n        type: constants.SET_LOADING,\n        value: newLoading,\n    };\n}\n\nexport function setRefresh(newRefresh: boolean): SetForceRefreshAction {\n    return {\n        type: constants.SET_FORCE_REFRESH,\n        value: newRefresh,\n    };\n}\n\nexport function setHappyHour(newHappyHour: DbHappyHour): SetHappyHourAction {\n    return {\n        type: constants.SET_HAPPY_HOUR,\n        value: newHappyHour,\n    };\n}\n\nexport function setBadges(newBadges: DbBadge[]): SetBadgesAction {\n    return {\n        type: constants.SET_BADGES,\n        value: newBadges,\n    };\n}\n\nexport function setTournaments(newTournaments: DbTournament[]): SetTournamentsAction {\n    return {\n        type: constants.SET_TOURNAMENTS,\n        value: newTournaments,\n    };\n}\n","import { TTStoreState } from \"../../redux/types/TTTypes\";\nimport { Dispatch } from \"redux\";\nimport * as actions from \"../../redux/actions/TTActions\";\nimport { QuickHitReduxStores } from \"../../redux/types/store\";\n\nexport type TTDataPropsTypeCombined = TTStoreState & TTRefreshDispatchType;\n\nexport interface TTRefreshDispatchType {\n    setForceRefresh: (newRefresh: boolean) => void;\n}\n\nexport function mapTTDataToProps(store: QuickHitReduxStores): TTStoreState {\n    return {\n        loading: store.ttData.loading,\n        players: store.ttData.players,\n        matches: store.ttData.matches,\n        happyHour: store.ttData.happyHour,\n        badges: store.ttData.badges,\n        tournaments: store.ttData.tournaments,\n        refresh: store.ttData.refresh,\n    };\n}\n\nexport function mapTTDispatchToProps(dispatch: Dispatch<actions.SetForceRefreshAction>): TTRefreshDispatchType {\n    return {\n        setForceRefresh: (newRefresh: boolean): actions.SetForceRefreshAction =>\n            dispatch(actions.setRefresh(newRefresh)),\n    };\n}\n","import React from \"react\";\nimport \"./Toast.css\";\nimport { SemanticToastContainer, toast, ToastOptions } from \"react-semantic-toasts\";\n\nconst TOAST_DEFAULT_OPTS = {\n    animation: \"bounce\",\n    time: 30000,\n} as ToastOptions;\n\n/**\n * QuickHit Toast\n */\nfunction Toaster(): JSX.Element {\n    return <SemanticToastContainer position=\"bottom-center\" className={\"quick-hit-toasts\"} />;\n}\n\nexport const makeSuccessToast = (title: string, message: string): void => {\n    toast({\n        ...TOAST_DEFAULT_OPTS,\n        title: title,\n        description: message,\n        type: \"success\",\n        icon: \"checkmark\",\n    });\n};\n\nexport const makeErrorToast = (title: string, message: string): void => {\n    toast({\n        ...TOAST_DEFAULT_OPTS,\n        title: title,\n        description: message,\n        type: \"error\",\n        icon: \"warning\",\n    });\n};\n\nexport const makeRefreshToast = (): void => {\n    toast({\n        time: 0,\n        title: \"New matches have been added\",\n        description: \"Please refresh the application.\",\n        type: \"error\",\n        icon: \"warning\",\n    });\n};\n\nexport default Toaster;\n","export enum HttpMethod {\n    GET = \"get\",\n    POST = \"post\",\n    PUT = \"put\",\n    PATCH = \"patch\",\n}\n\nexport enum ApiActions {\n    PLAYERS = \"player.json\",\n    MATCHES = \"match.json\",\n    HAPPY_HOUR = \"happyhour.json\",\n    BADGE = \"badge.json\",\n    TOURNAMENT = \"tournament.json\",\n}\n","import { SemanticICONS } from \"semantic-ui-react\";\nimport { TournamentParticipantsType, TournamentType } from \"../types\";\n\nexport interface DbMatch {\n    id: string;\n    date: string;\n    winning_player_id: string;\n    losing_player_id: string;\n    winning_player_score: number;\n    losing_player_score: number;\n    winning_player_original_elo: number;\n    losing_player_original_elo: number;\n    winner_new_elo: number;\n    loser_new_elo: number;\n    happy_hour: boolean;\n}\n\nexport interface DbPlayer {\n    icon: SemanticICONS;\n    id: string;\n    name: string;\n    elo: number;\n    tournamentWins?: number;\n    tournamentRunnerUps?: number;\n}\n\nexport interface DbHappyHour {\n    /* yyyy-mm-dd */\n    date: string;\n    /* In 24 hour time */\n    hourStart: number;\n    /* how much the ELO will be worth in this time period */\n    multiplier: number;\n}\n\nexport interface BadgeDesc {\n    icon: string;\n    text: string;\n    title: string;\n    key: string;\n}\n\nexport interface DbBadge extends BadgeDesc {\n    id: string;\n    date: string;\n    player_id: string;\n    /* Any non-earning player that helped trigger this achievement */\n    involved_player: string;\n}\n\nexport interface DbTournament {\n    id: string;\n    name: string;\n    start_date: string;\n    end_date?: string;\n    matches: DbTournamentMatch[];\n    participants?: TournamentParticipantsType;\n    type?: TournamentType;\n}\n\nexport interface DbTournamentMatch {\n    match_number: number;\n    home_player_id: string;\n    away_player_id: string;\n    // Games that haven't been played yet won't have scores.\n    home_score?: number;\n    away_score?: number;\n}\n\nexport function getTodaysDate(): string {\n    // yyyy-mm-dd\n    return new Date().toLocaleDateString().replace(/\\//g, \"-\");\n}\n","import { TTStoreState } from \"../../types/TTTypes\";\nimport {\n    SET_BADGES,\n    SET_FORCE_REFRESH,\n    SET_HAPPY_HOUR,\n    SET_LOADING,\n    SET_MATCHES,\n    SET_PLAYERS,\n    SET_TOURNAMENTS,\n} from \"../../constants/TTConstants\";\nimport {\n    SetBadgesAction,\n    SetForceRefreshAction,\n    SetHappyHourAction,\n    SetLoadingAction,\n    SetMatchesAction,\n    SetPlayersAction,\n    SetTournamentsAction,\n} from \"../../actions/TTActions\";\n\nexport const dataInitialState: TTStoreState = {\n    players: [],\n    matches: [],\n    loading: true,\n    happyHour: {\n        date: \"\",\n        hourStart: 0,\n        multiplier: 0,\n    },\n    badges: [],\n    tournaments: [],\n    refresh: false,\n};\n\nexport function ttReducer(\n    state: TTStoreState = dataInitialState,\n    action:\n        | SetMatchesAction\n        | SetPlayersAction\n        | SetLoadingAction\n        | SetForceRefreshAction\n        | SetHappyHourAction\n        | SetBadgesAction\n        | SetTournamentsAction\n): TTStoreState {\n    switch (action.type) {\n        case SET_MATCHES:\n            return { ...state, matches: action.value };\n        case SET_PLAYERS:\n            return { ...state, players: action.value };\n        case SET_LOADING:\n            return { ...state, loading: action.value };\n        case SET_FORCE_REFRESH:\n            return { ...state, refresh: action.value };\n        case SET_HAPPY_HOUR:\n            return { ...state, happyHour: action.value };\n        case SET_BADGES:\n            return { ...state, badges: action.value };\n        case SET_TOURNAMENTS:\n            return { ...state, tournaments: action.value };\n        default:\n            return state;\n    }\n}\n","export const SET_HIDE_ZERO_GAME_PLAYERS = \"SET_HIDE_ZERO_GAME_PLAYERS\";\nexport type SET_HIDE_ZERO_GAME_PLAYERS_TYPE = typeof SET_HIDE_ZERO_GAME_PLAYERS;\n\nexport const SET_SHOW_CARDS = \"SET_SHOW_CARDS\";\nexport type SET_SHOW_CARDS_TYPE = typeof SET_SHOW_CARDS;\n","import { SetShowCardsAction, SetZeroGamesFilterAction } from \"../../actions/ViewActions\";\nimport { ViewStoreState } from \"../../types/ViewTypes\";\nimport { SET_HIDE_ZERO_GAME_PLAYERS, SET_SHOW_CARDS } from \"../../constants/ViewConstants\";\n\nexport const viewInitialState: ViewStoreState = {\n    hideZeroGamePlayers: true,\n    showCards: false,\n};\n\nexport function viewReducer(\n    state: ViewStoreState = viewInitialState,\n    action: SetZeroGamesFilterAction | SetShowCardsAction\n): ViewStoreState {\n    switch (action.type) {\n        case SET_HIDE_ZERO_GAME_PLAYERS:\n            return { ...state, hideZeroGamePlayers: action.value };\n        case SET_SHOW_CARDS:\n            return { ...state, showCards: action.value };\n        default:\n            return state;\n    }\n}\n","export const SET_AUTH_KEY = \"SET_AUTH_KEY\";\nexport type SET_AUTH_KEY_TYPE = typeof SET_AUTH_KEY;\n\nexport const SET_TOKEN = \"SET_TOKEN\";\nexport type SET_TOKEN_TYPE = typeof SET_TOKEN;\n","import { AuthStoreState } from \"../../types/AuthTypes\";\nimport { SetAuthKeyAction, SetTokenAction } from \"../../actions/AuthActions\";\nimport { SET_AUTH_KEY, SET_TOKEN } from \"../../constants/AuthConstants\";\n\nexport const authInitialState: AuthStoreState = {\n    authKey: undefined,\n    token: undefined,\n};\n\nexport function authReducer(\n    state: AuthStoreState = authInitialState,\n    action: SetAuthKeyAction | SetTokenAction\n): AuthStoreState {\n    switch (action.type) {\n        case SET_AUTH_KEY:\n            return { ...state, authKey: action.value };\n        case SET_TOKEN:\n            return { ...state, token: action.value };\n        default:\n            return state;\n    }\n}\n","import { TTStoreState } from \"./TTTypes\";\nimport { ViewStoreState } from \"./ViewTypes\";\nimport { AuthStoreState } from \"./AuthTypes\";\nimport { combineReducers, createStore, Reducer } from \"redux\";\nimport { dataInitialState, ttReducer } from \"../reducers/TTReducer\";\nimport { viewInitialState, viewReducer } from \"../reducers/ViewReducer\";\nimport { authInitialState, authReducer } from \"../reducers/AuthReducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\n\n// Redux-persistor config.\nconst persistConfig = {\n    key: \"root\",\n    storage,\n    // We do not want to store the tt data in persist - as it should reload anew on each application refresh.\n    blacklist: [\"ttData\", \"authStore\"],\n};\n\nconst authConfig = {\n    key: \"authStore\",\n    storage,\n    //FIXME We want to get a new token on each refresh for now.\n    blacklist: [\"token\"],\n};\n\nconst reducers = combineReducers({\n    viewStore: viewReducer as Reducer,\n    ttData: ttReducer as Reducer,\n    authStore: persistReducer(authConfig, authReducer as Reducer),\n});\n\nconst store = createStore(persistReducer(persistConfig, reducers as Reducer), {\n    ttData: dataInitialState,\n    viewStore: viewInitialState,\n    authStore: authInitialState,\n});\n\nexport interface QuickHitReduxStores {\n    ttData: TTStoreState;\n    viewStore: ViewStoreState;\n    authStore: AuthStoreState;\n}\n\nexport default store;\n","import { DbBadge, DbHappyHour, DbMatch, DbPlayer, DbTournament, getTodaysDate } from \"../types/database/models\";\nimport { ApiActions, HttpMethod } from \"./ApiTypes\";\nimport axios, { AxiosError, AxiosPromise, AxiosResponse } from \"axios\";\nimport store from \"../redux/types/store\";\nimport { setToken } from \"../redux/actions/AuthActions\";\nconst FB_URL = process.env.REACT_APP_FB_URL;\nconst FB_API_KEY = process.env.REACT_APP_FB_API_KEY;\n\nexport class QuickHitAPI {\n    public static getPlayers(onSuccess: (players: DbPlayer[]) => void, onFailure: (errorString: string) => void): void {\n        QuickHitAPI.makeAxiosRequest(ApiActions.PLAYERS, HttpMethod.GET)\n            .then((response: AxiosResponse) => {\n                onSuccess(Object.values(response.data));\n            })\n            .catch((error: AxiosError) => {\n                onFailure(error.message);\n            });\n    }\n\n    public static getMatches(onSuccess: (matches: DbMatch[]) => void, onFailure: (errorString: string) => void): void {\n        QuickHitAPI.makeAxiosRequest(ApiActions.MATCHES, HttpMethod.GET)\n            .then((response: AxiosResponse) => {\n                onSuccess(Object.values(response.data));\n            })\n            .catch((error: AxiosError) => {\n                onFailure(error.message);\n            });\n    }\n\n    public static getBadges(onSuccess: (badges: DbBadge[]) => void, onFailure: (errorString: string) => void): void {\n        QuickHitAPI.makeAxiosRequest(ApiActions.BADGE, HttpMethod.GET)\n            .then((response: AxiosResponse) => {\n                onSuccess(Object.values(response.data));\n            })\n            .catch((error: AxiosError) => {\n                onFailure(error.message);\n            });\n    }\n\n    public static getTournaments(\n        onSuccess: (tournaments: DbTournament[]) => void,\n        onFailure: (errorString: string) => void\n    ): void {\n        QuickHitAPI.makeAxiosRequest(ApiActions.TOURNAMENT, HttpMethod.GET)\n            .then((response: AxiosResponse) => {\n                onSuccess(response.data ? Object.values(response.data) : []);\n            })\n            .catch((error: AxiosError) => {\n                onFailure(error.message);\n            });\n    }\n\n    public static addBadge(badgeToAdd: DbBadge, onSuccess: () => void, onFailure: (errorString: string) => void): void {\n        QuickHitAPI.makeAxiosRequest(\n            ApiActions.BADGE,\n            HttpMethod.PATCH,\n            `{\"${badgeToAdd.id}\" : ${JSON.stringify(badgeToAdd)}}`\n        )\n            .then(() => {\n                onSuccess();\n            })\n            .catch((error: AxiosError) => {\n                onFailure(error.message);\n            });\n    }\n\n    public static addOrUpdatePlayer(\n        playerToAdd: DbPlayer,\n        onSuccess: () => void,\n        onFailure: (errorString: string) => void\n    ): void {\n        QuickHitAPI.makeAxiosRequest(\n            ApiActions.PLAYERS,\n            HttpMethod.PATCH,\n            `{\"${playerToAdd.id}\" : ${JSON.stringify(playerToAdd)}}`\n        )\n            .then(() => {\n                onSuccess();\n            })\n            .catch((error: AxiosError) => {\n                onFailure(error.message);\n            });\n    }\n\n    public static getTodaysHappyHour(\n        onSuccess: (happyHour?: DbHappyHour) => void,\n        onFailure: (errorString: string) => void\n    ): void {\n        QuickHitAPI.makeAxiosRequest(\n            `${ApiActions.HAPPY_HOUR}?orderBy=\"$key\"&startAt=\"${getTodaysDate()}\"&`,\n            HttpMethod.GET\n        )\n            .then((response: AxiosResponse) => {\n                onSuccess(response.data[getTodaysDate()]);\n            })\n            .catch((error: AxiosError) => {\n                onFailure(error.message);\n            });\n    }\n\n    public static setHappyHourToday(\n        happyHour: DbHappyHour,\n        onSuccess: () => void,\n        onFailure: (errorString: string) => void\n    ): void {\n        QuickHitAPI.makeAxiosRequest(\n            ApiActions.HAPPY_HOUR,\n            HttpMethod.PATCH,\n            `{\"${happyHour.date}\" : ${JSON.stringify(happyHour)}}`\n        )\n            .then(() => {\n                onSuccess();\n            })\n            .catch((error: AxiosError) => {\n                onFailure(error.message);\n            });\n    }\n\n    public static addNewMatch(\n        matchToAdd: DbMatch,\n        winningPlayer: DbPlayer,\n        losingPlayer: DbPlayer,\n        onSuccess: () => void,\n        onFailure: (errorString: string) => void\n    ): void {\n        QuickHitAPI.makeAxiosRequest(\n            ApiActions.MATCHES,\n            HttpMethod.PATCH,\n            `{\"${matchToAdd.id}\" : ${JSON.stringify(matchToAdd)}}`\n        )\n            .then(() => {\n                this.addOrUpdatePlayer(\n                    winningPlayer,\n                    () => {\n                        return;\n                    },\n                    onFailure\n                );\n                this.addOrUpdatePlayer(\n                    losingPlayer,\n                    () => {\n                        return;\n                    },\n                    onFailure\n                );\n                onSuccess();\n            })\n            .catch((error: AxiosError) => {\n                onFailure(error.message);\n            });\n    }\n\n    public static addUpdateTournament(\n        tournamentToAdd: DbTournament,\n        onSuccess: () => void,\n        onFailure: (errorString: string) => void\n    ): void {\n        QuickHitAPI.makeAxiosRequest(\n            ApiActions.TOURNAMENT,\n            HttpMethod.PATCH,\n            `{\"${tournamentToAdd.id}\" : ${JSON.stringify(tournamentToAdd)}}`\n        )\n            .then(() => onSuccess())\n            .catch((error: AxiosError) => onFailure(error.message));\n    }\n\n    private static makeAxiosRequest(uri: string, method: HttpMethod, data?: string): AxiosPromise {\n        return this.authenticateToFirebase().then((token: string) => {\n            return axios({\n                method: method,\n                baseURL: FB_URL,\n                url: `${uri}?auth=${token}`.replaceAll(\"&?\", \"&\"),\n                data: data,\n                headers: { \"Content-Type\": \"application/json\" },\n            });\n        });\n    }\n\n    //FIXME\n    //Because we only store a string here, we don't store the expiresIn, but currently it's an hour.\n    //It will get a new token on each refresh - so you'd have to be using QuickHit for over an hour before getting\n    //prompted to refresh.\n    private static async authenticateToFirebase(): Promise<string> {\n        const getToken = (): Promise<string> => {\n            // Check Redux store for existing token\n            const token = store.getState().authStore.token;\n            // If there wasn't one, get a new one and set it.\n            if (!token) {\n                return axios({\n                    method: HttpMethod.POST,\n                    baseURL: `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${FB_API_KEY}`,\n                    data: {\n                        email: process.env.REACT_APP_FB_SRV_ACC_NAME,\n                        password: store.getState().authStore.authKey,\n                        returnSecureToken: true,\n                    },\n                    headers: { \"Content-Type\": \"application/json\" },\n                }).then((response) => {\n                    const token = response.data.idToken;\n                    store.dispatch(setToken(token));\n                    return new Promise<string>((resolve) => {\n                        resolve(token);\n                    });\n                });\n            }\n            return new Promise<string>((resolve) => {\n                resolve(token);\n            });\n        };\n\n        return getToken();\n    }\n}\n","import { BadgeDesc } from \"../../types/database/models\";\n\nexport enum Achievement {\n    FATALITY = \"fatality\",\n    CLUTCH_PERFORMER = \"clutch_performer\",\n    HEART_BREAKER = \"heart_breaker\",\n    ON_A_ROLL = \"on_a_roll\",\n    UNSTOPPABLE = \"unstoppable\",\n    ASCENDED = \"ascended\",\n    HELPLESS = \"helpless\",\n    SUPERIOR = \"superior\",\n    CELLAR_DWELLAR = \"cellar_dwellar\",\n    A_LITTLE_EMBARRASSING = \"a_little_embarrassing\",\n    SHOULD_HAVE_PUT_MONEY_ON_IT = \"should_have_put_money_on_it\",\n}\n\nexport const FATALITY_BADGE: BadgeDesc = {\n    icon: \"tint\",\n    key: Achievement.FATALITY,\n    text: \"Win a game to 11 or more without losing a single point\",\n    title: \"FATALITY!\",\n};\n\nexport const CLUTCH_PERFORMER_BADGE: BadgeDesc = {\n    icon: \"hand victory\",\n    key: Achievement.CLUTCH_PERFORMER,\n    text: \"Win 5 games by 2 points or less\",\n    title: \"Clutch Performer\",\n};\n\nexport const HEART_BREAKER_BADGE: BadgeDesc = {\n    icon: \"heartbeat\",\n    key: Achievement.HEART_BREAKER,\n    text: \"Lose 5 games by 2 points or less\",\n    title: \"Heart Breaker\",\n};\n\nexport const ON_A_ROLL_BADGE: BadgeDesc = {\n    icon: \"smile\",\n    key: Achievement.ON_A_ROLL,\n    text: \"Win 3 games in a row\",\n    title: \"On A Roll\",\n};\n\nexport const ASCENDED_BADGE: BadgeDesc = {\n    icon: \"cloudversify\",\n    key: Achievement.ASCENDED,\n    text: \"Win 10 games in a row\",\n    title: \"Ascended\",\n};\n\nexport const UNSTOPPABLE_BADGE: BadgeDesc = {\n    icon: \"ship\",\n    key: Achievement.UNSTOPPABLE,\n    text: \"Win 5 games in a row\",\n    title: \"Unstoppable\",\n};\n\nexport const HELPLESS_BADGE: BadgeDesc = {\n    icon: \"bed\",\n    key: Achievement.HELPLESS,\n    text: \"Lose a game to 11 or more without winning a point\",\n    title: \"Helpless\",\n};\n\nexport const SUPERIOR_BADGE: BadgeDesc = {\n    icon: \"chess king\",\n    key: Achievement.SUPERIOR,\n    text: \"Reach 1300 ELO\",\n    title: \"Superior\",\n};\n\nexport const CELLAR_DWELLAR_BADGE: BadgeDesc = {\n    icon: \"spoon\",\n    key: Achievement.CELLAR_DWELLAR,\n    text: \"Fall to 1100 ELO\",\n    title: \"Cellar Dwellar\",\n};\n\nexport const A_LITTLE_EMBARRASSING_BADGE: BadgeDesc = {\n    icon: \"frown\",\n    key: Achievement.A_LITTLE_EMBARRASSING,\n    text: \"Lose to a player with an ELO of 200+ less than you\",\n    title: \"A Little Embarrassing\",\n};\n\nexport const SHOULD_HAVE_PUT_MONEY_ON_IT_BADGE: BadgeDesc = {\n    icon: \"money\",\n    key: Achievement.SHOULD_HAVE_PUT_MONEY_ON_IT,\n    text: \"Win against a player with an ELO of 200+ more than you\",\n    title: \"Should Have Put Money On It\",\n};\n","import * as constants from \"../../constants/AuthConstants\";\n\nexport interface SetAuthKeyAction {\n    type: constants.SET_AUTH_KEY_TYPE;\n    value: string;\n}\n\nexport interface SetTokenAction {\n    type: constants.SET_TOKEN_TYPE;\n    value: string;\n}\n\nexport function setAuthKey(newKey: string): SetAuthKeyAction {\n    return {\n        type: constants.SET_AUTH_KEY,\n        value: newKey,\n    };\n}\n\nexport function setToken(newToken: string): SetTokenAction {\n    return {\n        type: constants.SET_TOKEN,\n        value: newToken,\n    };\n}\n","// Since the Firebase DB is not an RDBS, and free tier - it is better to preload the contents of the DB and draw\n// associations between IDs on the clientside rather than on the serverside.\n\n// Can do an initial fetch and cache the data in Redux - or fetch on every page change for a more responsive\n// experience.\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { makeErrorToast, makeRefreshToast } from \"../Toast/Toast\";\nimport { QuickHitAPI } from \"../../api/QuickHitAPI\";\nimport { Loader, Transition } from \"semantic-ui-react\";\nimport { DbBadge, DbHappyHour, DbMatch, DbPlayer, DbTournament, getTodaysDate } from \"../../types/database/models\";\nimport { TTDataPropsTypeCombined } from \"../../containers/shared\";\nimport { DataLoaderDispatchType } from \"../../containers/QHDataLoader/QHDataLoader\";\nimport { ExtraPlayerStats, WinLoss } from \"../../types/types\";\n\ntype QHDataLoaderProps = TTDataPropsTypeCombined & DataLoaderDispatchType;\n\n// How frequently to poll the Firebase DB for new data.\nconst POLL_TIME_MS = 30000;\n\nfunction QHDataLoader(props: QHDataLoaderProps): JSX.Element {\n    const intervalRef = useRef<NodeJS.Timeout>();\n    const [polling, setPolling] = useState<boolean>(true);\n\n    const getHappyHourOrSetIfNotPresent = (): void => {\n        const onFailure = (error: string): void => {\n            makeErrorToast(\"Could not determine today's happy hour\", error);\n            props.setLoading(false);\n        };\n\n        const onSuccess = (happyHour?: DbHappyHour): void => {\n            if (happyHour?.date) {\n                props.setHappyHour(happyHour);\n            } else {\n                // No happy hour generated for today, generate one\n                const newHappyHour: DbHappyHour = {\n                    date: getTodaysDate(),\n                    // Force set the happy hour to either be 12 or 16 (lunch time or 4pm).\n                    hourStart: randomIntFromInterval(0, 1) === 0 ? 12 : 16,\n                    multiplier: randomIntFromInterval(2, 6),\n                };\n\n                QuickHitAPI.setHappyHourToday(\n                    newHappyHour,\n                    () => {\n                        return;\n                    },\n                    onFailure\n                );\n            }\n        };\n        QuickHitAPI.getTodaysHappyHour(onSuccess, onFailure);\n    };\n\n    const getMatches = (): void => {\n        const onSuccess = (receivedMatches: DbMatch[]): void => {\n            // Check for match data changes, and alert the user to manually refresh when they return, unless it was an\n            // expected/forced refresh.\n            if (!props.refresh && receivedMatches.length !== props.matches.length && props.matches.length > 0) {\n                // Match data has changed, prompt user for a refresh.\n                makeRefreshToast();\n                // Stop checking for new data.\n                setPolling(false);\n                // FIXME sets loading indefinitely to prevent actions and force a refresh.\n                props.setLoading(true);\n            } else {\n                props.setLoading(false);\n                props.setMatches(receivedMatches);\n            }\n        };\n\n        const onFailure = (error: string): void => {\n            makeErrorToast(\"Could not get matches\", error);\n            props.setLoading(false);\n        };\n\n        QuickHitAPI.getMatches(onSuccess, onFailure);\n    };\n\n    const getPlayers = (): void => {\n        const onSuccess = (players: DbPlayer[]): void => {\n            props.setPlayers(players);\n        };\n\n        const onFailure = (error: string): void => {\n            makeErrorToast(\"Could not get players\", error);\n            props.setLoading(false);\n        };\n\n        QuickHitAPI.getPlayers(onSuccess, onFailure);\n    };\n\n    const getBadges = (): void => {\n        const onSuccess = (badges: DbBadge[]): void => {\n            props.setBadges(badges);\n        };\n\n        const onFailure = (error: string): void => {\n            makeErrorToast(\"Could not get badges\", error);\n            props.setLoading(false);\n        };\n\n        QuickHitAPI.getBadges(onSuccess, onFailure);\n    };\n\n    const getTournaments = (): void => {\n        const onSuccess = (tournaments: DbTournament[]): void => {\n            props.setTournaments(tournaments);\n        };\n\n        const onFailure = (error: string): void => {\n            makeErrorToast(\"Could not get tournaments\", error);\n            props.setLoading(false);\n        };\n\n        QuickHitAPI.getTournaments(onSuccess, onFailure);\n    };\n\n    const getData = (): void => {\n        getHappyHourOrSetIfNotPresent();\n        getBadges();\n        getMatches();\n        getTournaments();\n        getPlayers();\n    };\n\n    useEffect(() => {\n        if (intervalRef.current) {\n            props.setLoading(false);\n        }\n    }, [props.players, props.matches, props.badges, props.happyHour]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    // On component mount.\n    useEffect(() => {\n        getData();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    // Set the data loop, and on prop change, reset the loop as the Interval function will retain the props\n    // present at the time of invocation.\n    useEffect(() => {\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current);\n        }\n\n        if (polling) {\n            intervalRef.current = setInterval(getData, POLL_TIME_MS);\n        }\n\n        // If we were forced to refresh\n        if (props.refresh) {\n            getData();\n            props.setForceRefresh(false);\n        }\n    }, [props, polling]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <div className={\"data-loader\"}>\n            <Transition visible={props.loading}>\n                <Loader content={\"Loading data...\"} />\n            </Transition>\n        </div>\n    );\n}\n\nexport const getWinLossForPlayer = (playerId: string, matches: DbMatch[]): WinLoss => {\n    const winLoss: WinLoss = {\n        wins: 0,\n        losses: 0,\n    };\n\n    matches.forEach((match) => {\n        if (match.winning_player_id === playerId) {\n            winLoss.wins++;\n        } else if (match.losing_player_id === playerId) {\n            winLoss.losses++;\n        }\n    });\n\n    return winLoss;\n};\n\nexport const getRecordAgainstPlayer = (playerId: string, opponentId: string, matches: DbMatch[]): WinLoss => {\n    let wins = 0;\n    let losses = 0;\n\n    matches.forEach((match) => {\n        if (match.winning_player_id === playerId && match.losing_player_id === opponentId) {\n            ++wins;\n        } else if (match.losing_player_id === playerId && match.winning_player_id === opponentId) {\n            ++losses;\n        }\n    });\n\n    return { wins, losses };\n};\n\nexport const getExtraPlayerStats = (playerId: string, matches: DbMatch[]): ExtraPlayerStats => {\n    let minELO = 1200;\n    let maxELO = 1200;\n    let wins = 0;\n    let losses = 0;\n    const winsMap = new Map<string, number>();\n    const lossesMap = new Map<string, number>();\n    let victim: string | undefined = undefined;\n    let nemesis: string | undefined = undefined;\n\n    matches.forEach((match) => {\n        if (match.winning_player_id === playerId) {\n            ++wins;\n            if (match.winning_player_original_elo < minELO) {\n                minELO = match.winning_player_original_elo;\n            }\n            if (match.winner_new_elo > maxELO) {\n                maxELO = match.winner_new_elo;\n            }\n            if (winsMap.has(match.losing_player_id)) {\n                // Have to use a non-null assertion here because the compiler apparently isn't smart enough to realise that\n                // if the map has the key, a get call for the key won't be undefined.\n                // eslint-disable-next-line\n                winsMap.set(match.losing_player_id, winsMap.get(match.losing_player_id)! + 1);\n            } else {\n                winsMap.set(match.losing_player_id, 1);\n            }\n        } else if (match.losing_player_id === playerId) {\n            ++losses;\n            if (match.loser_new_elo < minELO) {\n                minELO = match.loser_new_elo;\n            }\n            if (match.losing_player_original_elo > maxELO) {\n                maxELO = match.losing_player_original_elo;\n            }\n            if (lossesMap.has(match.winning_player_id)) {\n                // Same here with the non-null assertion.\n                // eslint-disable-next-line\n                lossesMap.set(match.winning_player_id, lossesMap.get(match.winning_player_id)! + 1);\n            } else {\n                lossesMap.set(match.winning_player_id, 1);\n            }\n        }\n    });\n\n    if (wins > 0) {\n        let maxWins = 0;\n        for (const [player, wins] of winsMap) {\n            if (wins > maxWins) {\n                victim = player;\n                maxWins = wins;\n            } else if (wins === maxWins) {\n                if (victim) {\n                    // Get the first player alphabetically, because we can't guarantee map iteration order.\n                    const alphabeticalResult = victim.localeCompare(player);\n                    if (alphabeticalResult === 1) {\n                        victim = player;\n                    }\n                } else {\n                    victim = player;\n                }\n            }\n        }\n    }\n    if (losses > 0) {\n        let maxLosses = 0;\n        for (const [player, losses] of lossesMap) {\n            if (losses > maxLosses) {\n                nemesis = player;\n                maxLosses = losses;\n            } else if (losses === maxLosses) {\n                if (nemesis) {\n                    // Get the first player alphabetically, because we can't guarantee map iteration order.\n                    const alphabeticalResult = nemesis.localeCompare(player);\n                    if (alphabeticalResult === 1) {\n                        nemesis = player;\n                    }\n                } else {\n                    nemesis = player;\n                }\n            }\n        }\n    }\n\n    return { wins, losses, minELO, maxELO, victim, nemesis };\n};\n\nexport const getPlayersMap = (players: DbPlayer[]): Map<string, DbPlayer> => {\n    const playersMap: Map<string, DbPlayer> = new Map();\n\n    if (players) {\n        players.forEach((player) => {\n            playersMap.set(player.id, player);\n        });\n    }\n\n    return playersMap;\n};\n\nconst randomIntFromInterval = (min: number, max: number): number => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport default QHDataLoader;\n","import { BadgeDesc, DbBadge, DbMatch, DbPlayer } from \"../../types/database/models\";\nimport { QuickHitAPI } from \"../../api/QuickHitAPI\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n    A_LITTLE_EMBARRASSING_BADGE,\n    ASCENDED_BADGE,\n    CELLAR_DWELLAR_BADGE,\n    CLUTCH_PERFORMER_BADGE,\n    FATALITY_BADGE,\n    HEART_BREAKER_BADGE,\n    HELPLESS_BADGE,\n    ON_A_ROLL_BADGE,\n    SHOULD_HAVE_PUT_MONEY_ON_IT_BADGE,\n    SUPERIOR_BADGE,\n    UNSTOPPABLE_BADGE,\n} from \"./Achievements\";\nimport { getPlayersMap } from \"../QHDataLoader/QHDataLoader\";\n\ntype badgeCheckFn = (matches: DbMatch[], player: DbPlayer) => string;\n\nexport const BADGE_CHECK_MAP: Map<BadgeDesc, badgeCheckFn> = new Map([\n    [FATALITY_BADGE, (matches: DbMatch[], player: DbPlayer): string => checkForFatality(matches, player)],\n    [\n        CLUTCH_PERFORMER_BADGE,\n        (matches: DbMatch[], player: DbPlayer): string => checkForClutchPerformer(matches, player),\n    ],\n    [HEART_BREAKER_BADGE, (matches: DbMatch[], player: DbPlayer): string => checkForHeartBreaker(matches, player)],\n    [ON_A_ROLL_BADGE, (matches: DbMatch[], player: DbPlayer): string => checkForWinsInARow(matches, player, 3)],\n    [UNSTOPPABLE_BADGE, (matches: DbMatch[], player: DbPlayer): string => checkForWinsInARow(matches, player, 5)],\n    [ASCENDED_BADGE, (matches: DbMatch[], player: DbPlayer): string => checkForWinsInARow(matches, player, 10)],\n    [HELPLESS_BADGE, (matches: DbMatch[], player: DbPlayer): string => checkForHelpless(matches, player)],\n    [SUPERIOR_BADGE, (matches: DbMatch[], player: DbPlayer): string => checkForSuperior(matches, player)],\n    [CELLAR_DWELLAR_BADGE, (matches: DbMatch[], player: DbPlayer): string => checkForCellarDwellar(matches, player)],\n    [\n        A_LITTLE_EMBARRASSING_BADGE,\n        (matches: DbMatch[], player: DbPlayer): string => checkForALittleEmbarrassing(matches, player),\n    ],\n    [\n        SHOULD_HAVE_PUT_MONEY_ON_IT_BADGE,\n        (matches: DbMatch[], player: DbPlayer): string => checkForShouldHavePutMoneyOnIt(matches, player),\n    ],\n]);\n\nexport const checkForClutchPerformer = (matches: DbMatch[], player: DbPlayer): string => {\n    // Filter only to be the matches where the winner is this player\n    const matchesInvolvingPlayerAsWinner = matches.filter((match) => {\n        return match.winning_player_id === player.id;\n    });\n    const matchesThatWereWonBy2PointsOrLess = matchesInvolvingPlayerAsWinner.filter((match) => {\n        return match.winning_player_score - match.losing_player_score <= 2;\n    });\n\n    // If the player has won 5 or more games by 2 points or less, they earn this achievement.\n    return matchesThatWereWonBy2PointsOrLess.length >= 5 ? matchesThatWereWonBy2PointsOrLess[0].losing_player_id : \"\";\n};\n\nexport const checkForHeartBreaker = (matches: DbMatch[], player: DbPlayer): string => {\n    // Filter only to be the matches where the loser is this player\n    const matchesInvolvingPlayerAsLoser = matches.filter((match) => {\n        return match.losing_player_id === player.id;\n    });\n    const matchesThatWereLostBy2PointsOrLess = matchesInvolvingPlayerAsLoser.filter((match) => {\n        return match.winning_player_score - match.losing_player_score <= 2;\n    });\n\n    // If the player has lost 5 or more games by 2 points or less, ya blew it schmuck! They earn this achievement.\n    return matchesThatWereLostBy2PointsOrLess.length >= 5\n        ? matchesThatWereLostBy2PointsOrLess[0].winning_player_id\n        : \"\";\n};\n\nexport const checkForWinsInARow = (matches: DbMatch[], player: DbPlayer, count: number): string => {\n    const matchesInvolvingPlayer = matches\n        .filter((match) => {\n            return match.winning_player_id === player.id || match.losing_player_id === player.id;\n        })\n        .sort((match1, match2) => {\n            return match1.date.localeCompare(match2.date);\n        });\n\n    let streak = 0;\n    let lastMatchPlayer = \"\";\n    matchesInvolvingPlayer.forEach((match: DbMatch) => {\n        if (match.winning_player_id === player.id) {\n            streak += 1;\n        } else {\n            streak = 0;\n        }\n\n        // If the player has won enough games in a row, award this achievement.\n        if (streak >= count) {\n            lastMatchPlayer = match.losing_player_id;\n            return;\n        }\n    });\n\n    return lastMatchPlayer;\n};\n\nexport const checkForFatality = (matches: DbMatch[], player: DbPlayer): string => {\n    // Filter only to be the matches where the winner is this player\n    const matchesInvolvingPlayerAsWinner = matches.filter((match) => {\n        return match.winning_player_id === player.id;\n    });\n    const matchesWonWithoutLosingAPoint = matchesInvolvingPlayerAsWinner.filter((match) => {\n        return match.losing_player_score === 0 && match.winning_player_score >= 11;\n    });\n\n    // If they have any matches won without losing a point, award achievement.\n    return matchesWonWithoutLosingAPoint.length > 0 ? matchesWonWithoutLosingAPoint[0].losing_player_id : \"\";\n};\n\nexport const checkForHelpless = (matches: DbMatch[], player: DbPlayer): string => {\n    // Filter only to be the matches where the loser is this player\n    const matchesInvolvingPlayerAsLoser = matches.filter((match) => {\n        return match.losing_player_id === player.id;\n    });\n\n    const matchesLostWithoutEarningAPoint = matchesInvolvingPlayerAsLoser.filter((match) => {\n        return match.losing_player_score === 0 && match.winning_player_score >= 11;\n    });\n\n    // If they have any matches lost without winning a point, award achievement.\n    return matchesLostWithoutEarningAPoint.length > 0 ? matchesLostWithoutEarningAPoint[0].winning_player_id : \"\";\n};\n\nexport const checkForSuperior = (matches: DbMatch[], player: DbPlayer): string => {\n    // Filter only to be the matches where the winner is this player\n    const matchesInvolvingPlayerAsWinner = matches.filter((match) => {\n        return match.winning_player_id === player.id;\n    });\n    const matchesInvolving1300ELORank = matchesInvolvingPlayerAsWinner.filter((match) => {\n        return match.winner_new_elo >= 1300;\n    });\n\n    return matchesInvolving1300ELORank.length > 0 ? matchesInvolving1300ELORank[0].losing_player_id : \"\";\n};\n\nexport const checkForCellarDwellar = (matches: DbMatch[], player: DbPlayer): string => {\n    // Filter only to be the matches where the loser is this player\n    const matchesInvolvingPlayerAsLoser = matches.filter((match) => {\n        return match.losing_player_id === player.id;\n    });\n    const matchesInvolving1100ELORank = matchesInvolvingPlayerAsLoser.filter((match) => {\n        return match.loser_new_elo <= 1100;\n    });\n\n    return matchesInvolving1100ELORank.length > 0 ? matchesInvolving1100ELORank[0].winning_player_id : \"\";\n};\n\nexport const checkForALittleEmbarrassing = (matches: DbMatch[], player: DbPlayer): string => {\n    // Filter only to be the matches where the loser is this player\n    const matchesInvolvingPlayerAsLoser = matches.filter((match) => {\n        return match.losing_player_id === player.id;\n    });\n    const matchesInvolvingALossToRelativeScrubOpponent = matchesInvolvingPlayerAsLoser.filter((match) => {\n        return match.losing_player_original_elo - match.winning_player_original_elo >= 200;\n    });\n\n    return matchesInvolvingALossToRelativeScrubOpponent.length > 0\n        ? matchesInvolvingALossToRelativeScrubOpponent[0].winning_player_id\n        : \"\";\n};\n\nexport const checkForShouldHavePutMoneyOnIt = (matches: DbMatch[], player: DbPlayer): string => {\n    // Filter only to be the matches where the winner is this player\n    const matchesInvolvingPlayerAsWinner = matches.filter((match) => {\n        return match.winning_player_id === player.id;\n    });\n    const matchesInvolvingLowOddsWin = matchesInvolvingPlayerAsWinner.filter((match) => {\n        return match.losing_player_original_elo - match.winning_player_original_elo >= 200;\n    });\n\n    return matchesInvolvingLowOddsWin.length > 0 ? matchesInvolvingLowOddsWin[0].losing_player_id : \"\";\n};\n\nexport const decorateAchievementForUpload = (\n    badgeDesc: BadgeDesc,\n    earnedPlayer: DbPlayer,\n    involvedPlayer: DbPlayer\n): DbBadge => {\n    return {\n        ...badgeDesc,\n        id: uuidv4(),\n        date: new Date().toISOString(),\n        player_id: earnedPlayer.id,\n        involved_player: involvedPlayer.id,\n    };\n};\n\nexport const checkForAchievementTriggers = (\n    winningPlayer: DbPlayer,\n    losingPlayer: DbPlayer,\n    badges: DbBadge[],\n    matches: DbMatch[],\n    players: DbPlayer[],\n    onError: (errorMsg: string) => void\n): void => {\n    const winnerBadgeKeys = getBadgeKeys(winningPlayer, badges);\n    const loserBadgeKeys = getBadgeKeys(losingPlayer, badges);\n    const playersMap = getPlayersMap(players);\n\n    BADGE_CHECK_MAP.forEach((checkFn, badge) => {\n        let involvedPlayer;\n        // Check achievement criteria for the winning player\n        if (!winnerBadgeKeys.includes(badge.key) && (involvedPlayer = checkFn(matches, winningPlayer)) !== \"\") {\n            QuickHitAPI.addBadge(\n                decorateAchievementForUpload(badge, winningPlayer, playersMap.get(involvedPlayer) as DbPlayer),\n                () => {\n                    return;\n                },\n                onError\n            );\n        }\n        // Check achievement criteria for the losing player\n        if (!loserBadgeKeys.includes(badge.key) && (involvedPlayer = checkFn(matches, losingPlayer)) !== \"\") {\n            QuickHitAPI.addBadge(\n                decorateAchievementForUpload(badge, losingPlayer, playersMap.get(involvedPlayer) as DbPlayer),\n                () => {\n                    return;\n                },\n                onError\n            );\n        }\n    });\n};\n\nexport const generateTournamentAchievements = (\n    tournamentName: string,\n    earnedPlayer: DbPlayer,\n    involvedPlayer: DbPlayer,\n    onError: (errorMsg: string) => void\n): void => {\n    // Create the badge key based off the tournament name\n    // e.g. \"Flipped Transparent Muscle\" becomes \"flipped_transparent_muscle\"\n    const tournamentBadgeKey = tournamentName.toLowerCase().replace(\" \", \"_\");\n\n    const TOURNAMENT_WINNER_BADGE: BadgeDesc = {\n        icon: \"trophy\",\n        key: tournamentBadgeKey,\n        text: \"Get first place in the tournament\",\n        title: `Winner of the \"${tournamentName}\" tournament`,\n    };\n\n    const TOURNAMENT_RUNNER_UP_BADGE: BadgeDesc = {\n        icon: \"certificate\",\n        key: tournamentBadgeKey,\n        text: \"Get second place in the tournament\",\n        title: `Runner-up of the \"${tournamentName}\" tournament`,\n    };\n\n    QuickHitAPI.getBadges((badges: DbBadge[]) => {\n        if (!getBadgeKeys(earnedPlayer, badges).includes(tournamentBadgeKey)) {\n            QuickHitAPI.addBadge(\n                decorateAchievementForUpload(TOURNAMENT_WINNER_BADGE, earnedPlayer, involvedPlayer),\n                () => {\n                    return;\n                },\n                onError\n            );\n\n            QuickHitAPI.addBadge(\n                decorateAchievementForUpload(TOURNAMENT_RUNNER_UP_BADGE, involvedPlayer, earnedPlayer),\n                () => {\n                    return;\n                },\n                onError\n            );\n        }\n    }, onError);\n};\n\nexport const getBadgeKeys = (player: DbPlayer, badges: DbBadge[]): string[] =>\n    badges\n        .filter((badge: DbBadge) => {\n            return badge.player_id === player.id;\n        })\n        .flatMap((badge) => badge.key);\n","import { Button, DropdownItemProps, Form, Icon, Modal } from \"semantic-ui-react\";\nimport React from \"react\";\nimport \"./NewGame.css\";\nimport { DbBadge, DbMatch, DbPlayer } from \"../../../types/database/models\";\nimport { makeErrorToast, makeSuccessToast } from \"../../Toast/Toast\";\nimport EloRank from \"elo-rank\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { QuickHitAPI } from \"../../../api/QuickHitAPI\";\nimport { checkForAchievementTriggers } from \"../../Achievements/AchievementChecker\";\nimport { getPlayersMap } from \"../../QHDataLoader/QHDataLoader\";\nimport { NewGameStoreProps } from \"../../../containers/NewGame/NewGame\";\nimport { TTRefreshDispatchType } from \"../../../containers/shared\";\n\nexport interface NewGameOwnProps {\n    customModalOpenElement?: JSX.Element;\n    // Callback for when a new game is added.\n    onNewGameAdded?: () => void;\n}\n\n/**\n * QuickHit NewGame component.\n */\nfunction NewGame(props: NewGameStoreProps & NewGameOwnProps & TTRefreshDispatchType): JSX.Element {\n    const [open, setModalOpen] = React.useState<boolean>(false);\n    const [winningPlayer, setWinningPlayer] = React.useState<DbPlayer>();\n    const [losingPlayer, setLosingPlayer] = React.useState<DbPlayer>();\n    const [winningPlayerScore, setWinningPlayerScore] = React.useState<number>();\n    const [losingPlayerScore, setLosingPlayerScore] = React.useState<number>();\n\n    const sendCreateRequest = (addAnother: boolean): void => {\n        const onSuccess = (): void => {\n            makeSuccessToast(\"Game added!\", \"Back to work?\");\n            calculateAchievements(addAnother);\n        };\n\n        const onError = (errorMsg: string): void => {\n            makeErrorToast(\"Game not added!\", errorMsg);\n        };\n\n        if (!(winningPlayer && losingPlayer) || winningPlayerScore === undefined || losingPlayerScore === undefined) {\n            return;\n        }\n\n        if (winningPlayer?.id === losingPlayer?.id) {\n            makeErrorToast(\"Get outta here\", \"Players cannot beat themselves on QuickHit\");\n            return;\n        }\n\n        if (winningPlayerScore <= losingPlayerScore) {\n            makeErrorToast(\"Come on man\", \"Winning player score must be higher than losing player score\");\n            return;\n        }\n\n        // Getting the latest players from the DB to ensure up to date ELO.\n        QuickHitAPI.getPlayers((players: DbPlayer[]) => {\n            const playersMap = getPlayersMap(players);\n\n            let kFactor = 15;\n            let happyHour = false;\n\n            // If it is currently a happy hour.\n            if (\n                new Date().getHours() >= props.happyHour.hourStart &&\n                new Date().getHours() <= props.happyHour.hourStart + 1\n            ) {\n                kFactor = 15 * props.happyHour.multiplier;\n                happyHour = true;\n            }\n\n            const elo = new EloRank(kFactor);\n            const winnerElo = playersMap.get(winningPlayer.id)?.elo;\n            const loserElo = playersMap.get(losingPlayer.id)?.elo;\n\n            if (!(winnerElo && loserElo)) {\n                onError(\"Could not get latest player data!\");\n                return;\n            }\n\n            // Gets expected score for first parameter\n            const winningPlayerExpectedScore = elo.getExpected(winnerElo, loserElo);\n            const losingPlayerExpectedScore = elo.getExpected(loserElo, winnerElo);\n\n            // update score, 1 if won 0 if lost\n            const winnerNewElo = elo.updateRating(winningPlayerExpectedScore, 1, winnerElo);\n            const loserNewElo = elo.updateRating(losingPlayerExpectedScore, 0, loserElo);\n\n            const matchToAdd: DbMatch = {\n                id: uuidv4(),\n                date: new Date().toISOString(),\n                winning_player_id: winningPlayer.id,\n                winning_player_score: winningPlayerScore,\n                winning_player_original_elo: winnerElo,\n                losing_player_id: losingPlayer.id,\n                losing_player_score: losingPlayerScore,\n                losing_player_original_elo: loserElo,\n                winner_new_elo: winnerNewElo,\n                loser_new_elo: loserNewElo,\n                happy_hour: happyHour,\n            };\n            // Assigning new elo values to player object, then PATCHING.\n            winningPlayer.elo = winnerNewElo;\n            losingPlayer.elo = loserNewElo;\n\n            QuickHitAPI.addNewMatch(matchToAdd, winningPlayer, losingPlayer, onSuccess, onError);\n        }, onError);\n    };\n\n    const calculateAchievements = (addAnother: boolean): void => {\n        if (!(winningPlayer && losingPlayer)) {\n            return;\n        }\n\n        const onError = (errorMsg: string): void => {\n            makeErrorToast(\"Could not calculate achievements!\", errorMsg);\n        };\n\n        // After new match has been added, fetch the matches and badges...\n        QuickHitAPI.getMatches((matches: DbMatch[]) => {\n            QuickHitAPI.getBadges((badges: DbBadge[]) => {\n                checkForAchievementTriggers(winningPlayer, losingPlayer, badges, matches, props.players, onError);\n\n                setModalOpen(addAnother);\n                setWinningPlayer(undefined);\n                setLosingPlayer(undefined);\n                setWinningPlayerScore(undefined);\n                setLosingPlayerScore(undefined);\n\n                if (props.onNewGameAdded) {\n                    props.onNewGameAdded();\n                }\n\n                // Force refresh the data after a match has been added.\n                props.setForceRefresh(true);\n            }, onError);\n        }, onError);\n    };\n\n    const renderPlayerOption = (player: DbPlayer): DropdownItemProps => {\n        return {\n            key: player.id,\n            text: (\n                <span>\n                    <Icon name={player.icon} size={\"small\"} />\n                    {player.name}\n                </span>\n            ),\n            value: JSON.stringify(player),\n        };\n    };\n\n    return (\n        <Modal\n            closeIcon\n            onClose={(): void => setModalOpen(false)}\n            onOpen={(): void => setModalOpen(true)}\n            open={open}\n            trigger={\n                props.customModalOpenElement ?? (\n                    <Button inverted>\n                        <Icon name={\"trophy\"} />\n                        Enter game\n                    </Button>\n                )\n            }\n        >\n            <Modal.Header>\n                <Icon name=\"plus\" />\n                New game\n            </Modal.Header>\n            <Modal.Content className={\"new-game-form\"}>\n                <Form>\n                    <Form.Group widths=\"equal\">\n                        <Form.Select\n                            fluid\n                            label={\n                                <b>\n                                    Winning player\n                                    <Icon name={\"trophy\"} />\n                                </b>\n                            }\n                            options={props.players.map((player) => renderPlayerOption(player))}\n                            search={(options, value): DropdownItemProps[] => {\n                                return options.filter((option) => {\n                                    const player = JSON.parse(option.value as string);\n                                    return player.name.toLowerCase().includes(value.toLowerCase());\n                                });\n                            }}\n                            placeholder=\"Chicken Dinner\"\n                            required\n                            onChange={(event, data): void => setWinningPlayer(JSON.parse(data.value as string))}\n                            value={winningPlayer ? renderPlayerOption(winningPlayer).value : \"\"}\n                        />\n                        <Form.Field>\n                            <label>Winning player score</label>\n                            <input\n                                type={\"number\"}\n                                min={0}\n                                required\n                                value={winningPlayerScore ?? \"\"}\n                                onChange={(event): void =>\n                                    setWinningPlayerScore(\n                                        event.target.value !== \"\" ? parseInt(event.target.value) : undefined\n                                    )\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Select\n                            fluid\n                            label={\n                                <b>\n                                    Losing player\n                                    <Icon name={\"close\"} />\n                                </b>\n                            }\n                            options={props.players.map((player) => renderPlayerOption(player))}\n                            search={(options, value): DropdownItemProps[] => {\n                                return options.filter((option) => {\n                                    const player = JSON.parse(option.value as string);\n                                    return player.name.toLowerCase().includes(value.toLowerCase());\n                                });\n                            }}\n                            placeholder=\"Big Dog\"\n                            required\n                            onChange={(event, data): void => setLosingPlayer(JSON.parse(data.value as string))}\n                            value={losingPlayer ? renderPlayerOption(losingPlayer).value : \"\"}\n                        />\n                        <Form.Field>\n                            <label>Losing player score</label>\n                            <input\n                                type={\"number\"}\n                                min={0}\n                                required\n                                value={losingPlayerScore ?? \"\"}\n                                onChange={(event): void =>\n                                    setLosingPlayerScore(\n                                        event.target.value !== \"\" ? parseInt(event.target.value) : undefined\n                                    )\n                                }\n                            />\n                        </Form.Field>\n                    </Form.Group>\n                    <Button\n                        onClick={(): void => sendCreateRequest(false)}\n                        disabled={\n                            !(\n                                winningPlayer &&\n                                winningPlayerScore !== undefined &&\n                                losingPlayer &&\n                                losingPlayerScore !== undefined\n                            )\n                        }\n                    >\n                        GG\n                    </Button>\n                    <Button\n                        onClick={(): void => sendCreateRequest(true)}\n                        disabled={\n                            !(\n                                winningPlayer &&\n                                winningPlayerScore !== undefined &&\n                                losingPlayer &&\n                                losingPlayerScore !== undefined\n                            )\n                        }\n                    >\n                        Just one more game\n                    </Button>\n                </Form>\n            </Modal.Content>\n        </Modal>\n    );\n}\n\nexport default NewGame;\n","import { connect } from \"react-redux\";\nimport { mapTTDispatchToProps } from \"../shared\";\nimport NewGame, { NewGameOwnProps } from \"../../components/Ladder/NewGame/NewGame\";\nimport { QuickHitReduxStores } from \"../../redux/types/store\";\nimport { DbHappyHour, DbPlayer } from \"../../types/database/models\";\n\nexport interface NewGameStoreProps {\n    players: DbPlayer[];\n    happyHour: DbHappyHour;\n}\n\nexport function mapStateToProps(\n    store: QuickHitReduxStores,\n    ownProps: NewGameOwnProps\n): NewGameStoreProps & NewGameOwnProps {\n    return {\n        players: store.ttData.players,\n        happyHour: store.ttData.happyHour,\n        customModalOpenElement: ownProps.customModalOpenElement,\n        onNewGameAdded: ownProps.onNewGameAdded,\n    };\n}\n\nexport default connect(mapStateToProps, mapTTDispatchToProps)(NewGame);\n","import { Button, Card, DropdownItemProps, Form, Icon, Modal, SemanticICONS } from \"semantic-ui-react\";\nimport React, { useState } from \"react\";\nimport \"./NewEditPlayer.css\";\nimport { FA_ICONS } from \"../../../util/fa-icons\";\nimport { makeErrorToast, makeSuccessToast } from \"../../Toast/Toast\";\nimport { DbPlayer } from \"../../../types/database/models\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { QuickHitAPI } from \"../../../api/QuickHitAPI\";\n\ninterface NewEditPlayerProps {\n    editingPlayer?: DbPlayer;\n    customModalOpenElement?: JSX.Element;\n    onRequestMade?: () => void;\n}\n\nconst renderIconOption = (icon: SemanticICONS): DropdownItemProps => {\n    return { key: icon, text: <Icon name={icon} size={\"big\"} />, value: icon };\n};\n\nconst iconOptions = FA_ICONS.map((icon) => renderIconOption(icon));\n\n/**\n * QuickHit NewEditPlayer component.\n */\nfunction NewEditPlayer(props: NewEditPlayerProps): JSX.Element {\n    const [open, setModalOpen] = React.useState(false);\n    const [icon, setIcon] = useState<string>(props.editingPlayer ? props.editingPlayer.icon : \"\");\n    const [name, setName] = useState<string>(props.editingPlayer ? props.editingPlayer.name : \"\");\n\n    const sendCreateRequest = (): void => {\n        const onSuccess = (): void => {\n            if (props.editingPlayer) {\n                makeSuccessToast(\"Player updated!\", `Welcome back, ${player.name}!`);\n            } else {\n                makeSuccessToast(\"Player added!\", \"Welcome to QuickHit!\");\n            }\n            setModalOpen(false);\n\n            if (props.onRequestMade) {\n                props.onRequestMade();\n            }\n        };\n\n        const onError = (errorMsg: string): void => {\n            if (props.editingPlayer) {\n                makeErrorToast(\"Player not updated!\", errorMsg);\n            } else {\n                makeErrorToast(\"Player not added!\", errorMsg);\n            }\n        };\n\n        const player: DbPlayer = {\n            id: props.editingPlayer?.id ?? uuidv4(),\n            name,\n            icon: icon as SemanticICONS,\n            /* Default ELO rank, or the updated player's ELO. */\n            elo: props.editingPlayer?.elo ?? 1200,\n        };\n\n        QuickHitAPI.addOrUpdatePlayer(player, onSuccess, onError);\n    };\n\n    return (\n        <Modal\n            closeIcon\n            onClose={(): void => setModalOpen(false)}\n            onOpen={(): void => setModalOpen(true)}\n            open={open}\n            trigger={\n                props.customModalOpenElement ?? (\n                    <Button inverted>\n                        <Icon name={\"user plus\"} />\n                        New player\n                    </Button>\n                )\n            }\n        >\n            <Modal.Header>\n                {props.editingPlayer ? (\n                    <span>\n                        <Icon name=\"pencil\" />\n                        Edit Player\n                    </span>\n                ) : (\n                    <span>\n                        <Icon name=\"plus\" />\n                        New Player\n                    </span>\n                )}\n            </Modal.Header>\n            <Modal.Content>\n                <Form onSubmit={sendCreateRequest}>\n                    <Form.Group widths=\"equal\">\n                        <Form.Input\n                            fluid\n                            label=\"Name\"\n                            required\n                            placeholder=\"Name\"\n                            onChange={(event, data): void => setName(data.value)}\n                            value={name}\n                        />\n                        <Form.Select\n                            fluid\n                            label=\"Icon\"\n                            required\n                            placeholder=\"user\"\n                            options={iconOptions}\n                            search={(options, value): DropdownItemProps[] => {\n                                return options.filter((option) => option.value?.toString().startsWith(value));\n                            }}\n                            onChange={(event, data): void => setIcon(data.value as string)}\n                            value={icon}\n                        />\n                    </Form.Group>\n                    <Card>\n                        Picture preview:{\" \"}\n                        {icon ? (\n                            <Icon\n                                name={icon as SemanticICONS}\n                                size={\"huge\"}\n                                circular\n                                style={{ margin: \"auto\", color: \"orangered\" }}\n                            />\n                        ) : (\n                            \"Select or type an icon name.\"\n                        )}\n                    </Card>\n                    <Form.Group>\n                        <a href={\"https://react.semantic-ui.com/elements/icon/\"} target=\"_blank\" rel={\"noreferrer\"}>\n                            <Icon name={\"help\"}>Icon search</Icon>\n                        </a>\n                    </Form.Group>\n                    <Form.Button>{props.editingPlayer ? <span>Update</span> : <span>Create</span>}</Form.Button>\n                </Form>\n            </Modal.Content>\n        </Modal>\n    );\n}\n\nexport default NewEditPlayer;\n","import { SemanticICONS } from \"semantic-ui-react\";\n\nexport const FA_ICONS: SemanticICONS[] = [\n    \"american sign language interpreting\",\n    \"assistive listening systems\",\n    \"audio description\",\n    \"blind\",\n    \"braille\",\n    \"closed captioning\",\n    \"closed captioning outline\",\n    \"deaf\",\n    \"low vision\",\n    \"phone volume\",\n    \"question circle\",\n    \"question circle outline\",\n    \"sign language\",\n    \"tty\",\n    \"universal access\",\n    \"wheelchair\",\n    \"angle double down\",\n    \"angle double left\",\n    \"angle double right\",\n    \"angle double up\",\n    \"angle down\",\n    \"angle left\",\n    \"angle right\",\n    \"angle up\",\n    \"arrow alternate circle down\",\n    \"arrow alternate circle down outline\",\n    \"arrow alternate circle left\",\n    \"arrow alternate circle left outline\",\n    \"arrow alternate circle right\",\n    \"arrow alternate circle right outline\",\n    \"arrow alternate circle up\",\n    \"arrow alternate circle up outline\",\n    \"arrow circle down\",\n    \"arrow circle left\",\n    \"arrow circle right\",\n    \"arrow circle up\",\n    \"arrow down\",\n    \"arrow left\",\n    \"arrow right\",\n    \"arrow up\",\n    \"arrows alternate\",\n    \"arrows alternate horizontal\",\n    \"arrows alternate vertical\",\n    \"caret down\",\n    \"caret left\",\n    \"caret right\",\n    \"caret square down\",\n    \"caret square down outline\",\n    \"caret square left\",\n    \"caret square left outline\",\n    \"caret square right\",\n    \"caret square right outline\",\n    \"caret square up\",\n    \"caret square up outline\",\n    \"caret up\",\n    \"cart arrow down\",\n    \"chart line\",\n    \"chevron circle down\",\n    \"chevron circle left\",\n    \"chevron circle right\",\n    \"chevron circle up\",\n    \"chevron down\",\n    \"chevron left\",\n    \"chevron right\",\n    \"chevron up\",\n    \"cloud download\",\n    \"cloud upload\",\n    \"download\",\n    \"exchange\",\n    \"expand arrows alternate\",\n    \"external alternate\",\n    \"external square alternate\",\n    \"hand point down\",\n    \"hand point down outline\",\n    \"hand point left\",\n    \"hand point left outline\",\n    \"hand point right\",\n    \"hand point right outline\",\n    \"hand point up\",\n    \"hand point up outline\",\n    \"hand pointer\",\n    \"hand pointer outline\",\n    \"history\",\n    \"level down alternate\",\n    \"level up alternate\",\n    \"location arrow\",\n    \"long arrow alternate down\",\n    \"long arrow alternate left\",\n    \"long arrow alternate right\",\n    \"long arrow alternate up\",\n    \"mouse pointer\",\n    \"play\",\n    \"random\",\n    \"recycle\",\n    \"redo\",\n    \"redo alternate\",\n    \"reply\",\n    \"reply all\",\n    \"retweet\",\n    \"share\",\n    \"share square\",\n    \"share square outline\",\n    \"sign-in\",\n    \"sign-out\",\n    \"sign-in alternate\",\n    \"sign-out alternate\",\n    \"sort\",\n    \"sort alphabet down\",\n    \"sort alphabet up\",\n    \"sort amount down\",\n    \"sort amount up\",\n    \"sort down\",\n    \"sort numeric down\",\n    \"sort numeric up\",\n    \"sort up\",\n    \"sync\",\n    \"sync alternate\",\n    \"text height\",\n    \"text width\",\n    \"undo\",\n    \"undo alternate\",\n    \"upload\",\n    \"zoom-in\",\n    \"zoom-out\",\n    \"audio description\",\n    \"backward\",\n    \"circle\",\n    \"circle outline\",\n    \"closed captioning\",\n    \"closed captioning outline\",\n    \"compress\",\n    \"eject\",\n    \"expand\",\n    \"expand arrows alternate\",\n    \"fast backward\",\n    \"fast forward\",\n    \"file audio\",\n    \"file audio outline\",\n    \"file video\",\n    \"file video outline\",\n    \"film\",\n    \"forward\",\n    \"headphones\",\n    \"microphone\",\n    \"microphone slash\",\n    \"music\",\n    \"pause\",\n    \"pause circle\",\n    \"pause circle outline\",\n    \"phone volume\",\n    \"play\",\n    \"play circle\",\n    \"play circle outline\",\n    \"podcast\",\n    \"random\",\n    \"redo\",\n    \"redo alternate\",\n    \"rss\",\n    \"rss square\",\n    \"step backward\",\n    \"step forward\",\n    \"stop\",\n    \"stop circle\",\n    \"stop circle outline\",\n    \"sync\",\n    \"sync alternate\",\n    \"undo\",\n    \"undo alternate\",\n    \"video\",\n    \"volume down\",\n    \"volume off\",\n    \"volume up\",\n    \"address book\",\n    \"address book outline\",\n    \"address card\",\n    \"address card outline\",\n    \"archive\",\n    \"balance scale\",\n    \"birthday cake\",\n    \"book\",\n    \"briefcase\",\n    \"building\",\n    \"building outline\",\n    \"bullhorn\",\n    \"bullseye\",\n    \"calculator\",\n    \"calendar\",\n    \"calendar outline\",\n    \"calendar alternate\",\n    \"calendar alternate outline\",\n    \"certificate\",\n    \"chart area\",\n    \"chart bar\",\n    \"chart bar outline\",\n    \"chart line\",\n    \"chart pie\",\n    \"clipboard\",\n    \"clipboard outline\",\n    \"coffee\",\n    \"columns\",\n    \"compass\",\n    \"compass outline\",\n    \"copy\",\n    \"copy outline\",\n    \"copyright\",\n    \"copyright outline\",\n    \"cut\",\n    \"edit\",\n    \"edit outline\",\n    \"envelope\",\n    \"envelope outline\",\n    \"envelope open\",\n    \"envelope open outline\",\n    \"envelope square\",\n    \"eraser\",\n    \"fax\",\n    \"file\",\n    \"file outline\",\n    \"file alternate\",\n    \"file alternate outline\",\n    \"folder\",\n    \"folder outline\",\n    \"folder open\",\n    \"folder open outline\",\n    \"globe\",\n    \"industry\",\n    \"paperclip\",\n    \"paste\",\n    \"pen square\",\n    \"pencil alternate\",\n    \"percent\",\n    \"phone\",\n    \"phone square\",\n    \"phone volume\",\n    \"registered\",\n    \"registered outline\",\n    \"save\",\n    \"save outline\",\n    \"sitemap\",\n    \"sticky note\",\n    \"sticky note outline\",\n    \"suitcase\",\n    \"table\",\n    \"tag\",\n    \"tags\",\n    \"tasks\",\n    \"thumbtack\",\n    \"trademark\",\n    \"chess\",\n    \"chess bishop\",\n    \"chess board\",\n    \"chess king\",\n    \"chess knight\",\n    \"chess pawn\",\n    \"chess queen\",\n    \"chess rook\",\n    \"square full\",\n    \"archive\",\n    \"barcode\",\n    \"bath\",\n    \"bug\",\n    \"code\",\n    \"code branch\",\n    \"coffee\",\n    \"file\",\n    \"file outline\",\n    \"file alternate\",\n    \"file alternate outline\",\n    \"file code\",\n    \"file code outline\",\n    \"filter\",\n    \"fire extinguisher\",\n    \"folder\",\n    \"folder outline\",\n    \"folder open\",\n    \"folder open outline\",\n    \"keyboard\",\n    \"keyboard outline\",\n    \"microchip\",\n    \"qrcode\",\n    \"shield alternate\",\n    \"sitemap\",\n    \"terminal\",\n    \"user secret\",\n    \"window close\",\n    \"window close outline\",\n    \"window maximize\",\n    \"window maximize outline\",\n    \"window minimize\",\n    \"window minimize outline\",\n    \"window restore\",\n    \"window restore outline\",\n    \"address book\",\n    \"address book outline\",\n    \"address card\",\n    \"address card outline\",\n    \"american sign language interpreting\",\n    \"assistive listening systems\",\n    \"at\",\n    \"bell\",\n    \"bell outline\",\n    \"bell slash\",\n    \"bell slash outline\",\n    \"bullhorn\",\n    \"comment\",\n    \"comment outline\",\n    \"comment alternate\",\n    \"comment alternate outline\",\n    \"comments\",\n    \"comments outline\",\n    \"envelope\",\n    \"envelope outline\",\n    \"envelope open\",\n    \"envelope open outline\",\n    \"envelope square\",\n    \"fax\",\n    \"inbox\",\n    \"language\",\n    \"microphone\",\n    \"microphone slash\",\n    \"mobile\",\n    \"mobile alternate\",\n    \"paper plane\",\n    \"paper plane outline\",\n    \"phone\",\n    \"phone square\",\n    \"phone volume\",\n    \"rss\",\n    \"rss square\",\n    \"tty\",\n    \"wifi\",\n    \"desktop\",\n    \"download\",\n    \"hdd\",\n    \"hdd outline\",\n    \"headphones\",\n    \"keyboard\",\n    \"keyboard outline\",\n    \"laptop\",\n    \"microchip\",\n    \"mobile\",\n    \"mobile alternate\",\n    \"plug\",\n    \"power off\",\n    \"print\",\n    \"save\",\n    \"save outline\",\n    \"server\",\n    \"tablet\",\n    \"tablet alternate\",\n    \"tv\",\n    \"upload\",\n    \"dollar sign\",\n    \"euro sign\",\n    \"lira sign\",\n    \"money bill alternate\",\n    \"money bill alternate outline\",\n    \"pound sign\",\n    \"ruble sign\",\n    \"rupee sign\",\n    \"shekel sign\",\n    \"won sign\",\n    \"yen sign\",\n    \"bell\",\n    \"bell outline\",\n    \"bell slash\",\n    \"bell slash outline\",\n    \"calendar\",\n    \"calendar outline\",\n    \"calendar alternate\",\n    \"calendar alternate outline\",\n    \"calendar check\",\n    \"calendar check outline\",\n    \"calendar minus\",\n    \"calendar minus outline\",\n    \"calendar plus\",\n    \"calendar plus outline\",\n    \"calendar times\",\n    \"calendar times outline\",\n    \"clock\",\n    \"clock outline\",\n    \"hourglass\",\n    \"hourglass outline\",\n    \"hourglass end\",\n    \"hourglass half\",\n    \"hourglass start\",\n    \"stopwatch\",\n    \"adjust\",\n    \"clone\",\n    \"clone outline\",\n    \"copy\",\n    \"copy outline\",\n    \"crop\",\n    \"crosshairs\",\n    \"cut\",\n    \"edit\",\n    \"edit outline\",\n    \"eraser\",\n    \"eye\",\n    \"eye dropper\",\n    \"eye slash\",\n    \"eye slash outline\",\n    \"object group\",\n    \"object group outline\",\n    \"object ungroup\",\n    \"object ungroup outline\",\n    \"paint brush\",\n    \"paste\",\n    \"pencil alternate\",\n    \"save\",\n    \"save outline\",\n    \"tint\",\n    \"align center\",\n    \"align justify\",\n    \"align left\",\n    \"align right\",\n    \"bold\",\n    \"clipboard\",\n    \"clipboard outline\",\n    \"clone\",\n    \"clone outline\",\n    \"columns\",\n    \"copy\",\n    \"copy outline\",\n    \"cut\",\n    \"edit\",\n    \"edit outline\",\n    \"eraser\",\n    \"file\",\n    \"file outline\",\n    \"file alternate\",\n    \"file alternate outline\",\n    \"font\",\n    \"heading\",\n    \"i cursor\",\n    \"indent\",\n    \"italic\",\n    \"linkify\",\n    \"list\",\n    \"list alternate\",\n    \"list alternate outline\",\n    \"list ol\",\n    \"list ul\",\n    \"outdent\",\n    \"paper plane\",\n    \"paper plane outline\",\n    \"paperclip\",\n    \"paragraph\",\n    \"paste\",\n    \"pencil alternate\",\n    \"print\",\n    \"quote left\",\n    \"quote right\",\n    \"redo\",\n    \"redo alternate\",\n    \"reply\",\n    \"reply all\",\n    \"share\",\n    \"strikethrough\",\n    \"subscript\",\n    \"superscript\",\n    \"sync\",\n    \"sync alternate\",\n    \"table\",\n    \"tasks\",\n    \"text height\",\n    \"text width\",\n    \"th\",\n    \"th large\",\n    \"th list\",\n    \"trash\",\n    \"trash alternate\",\n    \"trash alternate outline\",\n    \"underline\",\n    \"undo\",\n    \"undo alternate\",\n    \"unlink\",\n    \"archive\",\n    \"clone\",\n    \"clone outline\",\n    \"copy\",\n    \"copy outline\",\n    \"cut\",\n    \"file\",\n    \"file outline\",\n    \"file alternate\",\n    \"file alternate outline\",\n    \"file archive\",\n    \"file archive outline\",\n    \"file audio\",\n    \"file audio outline\",\n    \"file code\",\n    \"file code outline\",\n    \"file excel\",\n    \"file excel outline\",\n    \"file image\",\n    \"file image outline\",\n    \"file pdf\",\n    \"file pdf outline\",\n    \"file powerpoint\",\n    \"file powerpoint outline\",\n    \"file video\",\n    \"file video outline\",\n    \"file word\",\n    \"file word outline\",\n    \"folder\",\n    \"folder outline\",\n    \"folder open\",\n    \"folder open outline\",\n    \"paste\",\n    \"save\",\n    \"save outline\",\n    \"sticky note\",\n    \"sticky note outline\",\n    \"genderless\",\n    \"mars\",\n    \"mars double\",\n    \"mars stroke\",\n    \"mars stroke horizontal\",\n    \"mars stroke vertical\",\n    \"mercury\",\n    \"neuter\",\n    \"transgender\",\n    \"transgender alternate\",\n    \"venus\",\n    \"venus double\",\n    \"venus mars\",\n    \"hand lizard\",\n    \"hand lizard outline\",\n    \"hand paper\",\n    \"hand paper outline\",\n    \"hand peace\",\n    \"hand peace outline\",\n    \"hand point down\",\n    \"hand point down outline\",\n    \"hand point left\",\n    \"hand point left outline\",\n    \"hand point right\",\n    \"hand point right outline\",\n    \"hand point up\",\n    \"hand point up outline\",\n    \"hand pointer\",\n    \"hand pointer outline\",\n    \"hand rock\",\n    \"hand rock outline\",\n    \"hand scissors\",\n    \"hand scissors outline\",\n    \"hand spock\",\n    \"hand spock outline\",\n    \"handshake\",\n    \"handshake outline\",\n    \"thumbs down\",\n    \"thumbs down outline\",\n    \"thumbs up\",\n    \"thumbs up outline\",\n    \"ambulance\",\n    \"h square\",\n    \"heart\",\n    \"heart outline\",\n    \"heartbeat\",\n    \"hospital\",\n    \"hospital outline\",\n    \"medkit\",\n    \"plus square\",\n    \"plus square outline\",\n    \"stethoscope\",\n    \"user md\",\n    \"wheelchair\",\n    \"adjust\",\n    \"bolt\",\n    \"camera\",\n    \"camera retro\",\n    \"clone\",\n    \"clone outline\",\n    \"compress\",\n    \"expand\",\n    \"eye\",\n    \"eye dropper\",\n    \"eye slash\",\n    \"eye slash outline\",\n    \"file image\",\n    \"file image outline\",\n    \"film\",\n    \"id badge\",\n    \"id badge outline\",\n    \"id card\",\n    \"id card outline\",\n    \"image\",\n    \"image outline\",\n    \"images\",\n    \"images outline\",\n    \"sliders horizontal\",\n    \"tint\",\n    \"ban\",\n    \"barcode\",\n    \"bars\",\n    \"beer\",\n    \"bell\",\n    \"bell outline\",\n    \"bell slash\",\n    \"bell slash outline\",\n    \"bug\",\n    \"bullhorn\",\n    \"bullseye\",\n    \"calculator\",\n    \"calendar\",\n    \"calendar outline\",\n    \"calendar alternate\",\n    \"calendar alternate outline\",\n    \"calendar check\",\n    \"calendar check outline\",\n    \"calendar minus\",\n    \"calendar minus outline\",\n    \"calendar plus\",\n    \"calendar plus outline\",\n    \"calendar times\",\n    \"calendar times outline\",\n    \"certificate\",\n    \"check\",\n    \"check circle\",\n    \"check circle outline\",\n    \"check square\",\n    \"check square outline\",\n    \"circle\",\n    \"circle outline\",\n    \"clipboard\",\n    \"clipboard outline\",\n    \"clone\",\n    \"clone outline\",\n    \"cloud\",\n    \"cloud download\",\n    \"cloud upload\",\n    \"coffee\",\n    \"cog\",\n    \"cogs\",\n    \"copy\",\n    \"copy outline\",\n    \"cut\",\n    \"database\",\n    \"dot circle\",\n    \"dot circle outline\",\n    \"download\",\n    \"edit\",\n    \"edit outline\",\n    \"ellipsis horizontal\",\n    \"ellipsis vertical\",\n    \"envelope\",\n    \"envelope outline\",\n    \"envelope open\",\n    \"envelope open outline\",\n    \"eraser\",\n    \"exclamation\",\n    \"exclamation circle\",\n    \"exclamation triangle\",\n    \"external alternate\",\n    \"external square alternate\",\n    \"eye\",\n    \"eye slash\",\n    \"eye slash outline\",\n    \"file\",\n    \"file outline\",\n    \"file alternate\",\n    \"file alternate outline\",\n    \"filter\",\n    \"flag\",\n    \"flag outline\",\n    \"flag checkered\",\n    \"folder\",\n    \"folder outline\",\n    \"folder open\",\n    \"folder open outline\",\n    \"frown\",\n    \"frown outline\",\n    \"hashtag\",\n    \"heart\",\n    \"heart outline\",\n    \"history\",\n    \"home\",\n    \"i cursor\",\n    \"info\",\n    \"info circle\",\n    \"language\",\n    \"magic\",\n    \"meh\",\n    \"meh outline\",\n    \"microphone\",\n    \"microphone slash\",\n    \"minus\",\n    \"minus circle\",\n    \"minus square\",\n    \"minus square outline\",\n    \"paste\",\n    \"pencil alternate\",\n    \"plus\",\n    \"plus circle\",\n    \"plus square\",\n    \"plus square outline\",\n    \"qrcode\",\n    \"question\",\n    \"question circle\",\n    \"question circle outline\",\n    \"quote left\",\n    \"quote right\",\n    \"redo\",\n    \"redo alternate\",\n    \"reply\",\n    \"reply all\",\n    \"rss\",\n    \"rss square\",\n    \"save\",\n    \"save outline\",\n    \"search\",\n    \"search minus\",\n    \"search plus\",\n    \"share\",\n    \"share alternate\",\n    \"share alternate square\",\n    \"share square\",\n    \"share square outline\",\n    \"shield alternate\",\n    \"sign-in\",\n    \"sign-out\",\n    \"signal\",\n    \"sitemap\",\n    \"sliders horizontal\",\n    \"smile\",\n    \"smile outline\",\n    \"sort\",\n    \"sort alphabet down\",\n    \"sort alphabet up\",\n    \"sort amount down\",\n    \"sort amount up\",\n    \"sort down\",\n    \"sort numeric down\",\n    \"sort numeric up\",\n    \"sort up\",\n    \"star\",\n    \"star outline\",\n    \"star half\",\n    \"star half outline\",\n    \"sync\",\n    \"sync alternate\",\n    \"thumbs down\",\n    \"thumbs down outline\",\n    \"thumbs up\",\n    \"thumbs up outline\",\n    \"times\",\n    \"times circle\",\n    \"times circle outline\",\n    \"toggle off\",\n    \"toggle on\",\n    \"trash\",\n    \"trash alternate\",\n    \"trash alternate outline\",\n    \"trophy\",\n    \"undo\",\n    \"undo alternate\",\n    \"upload\",\n    \"user\",\n    \"user outline\",\n    \"user circle\",\n    \"user circle outline\",\n    \"wifi\",\n    \"box\",\n    \"boxes\",\n    \"clipboard check\",\n    \"clipboard list\",\n    \"dolly\",\n    \"dolly flatbed\",\n    \"pallet\",\n    \"shipping fast\",\n    \"truck\",\n    \"warehouse\",\n    \"ambulance\",\n    \"anchor\",\n    \"balance scale\",\n    \"bath\",\n    \"bed\",\n    \"beer\",\n    \"bell\",\n    \"bell outline\",\n    \"bell slash\",\n    \"bell slash outline\",\n    \"bicycle\",\n    \"binoculars\",\n    \"birthday cake\",\n    \"blind\",\n    \"bomb\",\n    \"book\",\n    \"bookmark\",\n    \"bookmark outline\",\n    \"briefcase\",\n    \"building\",\n    \"building outline\",\n    \"car\",\n    \"coffee\",\n    \"crosshairs\",\n    \"dollar sign\",\n    \"eye\",\n    \"eye slash\",\n    \"eye slash outline\",\n    \"fighter jet\",\n    \"fire\",\n    \"fire extinguisher\",\n    \"flag\",\n    \"flag outline\",\n    \"flag checkered\",\n    \"flask\",\n    \"gamepad\",\n    \"gavel\",\n    \"gift\",\n    \"glass martini\",\n    \"globe\",\n    \"graduation cap\",\n    \"h square\",\n    \"heart\",\n    \"heart outline\",\n    \"heartbeat\",\n    \"home\",\n    \"hospital\",\n    \"hospital outline\",\n    \"image\",\n    \"image outline\",\n    \"images\",\n    \"images outline\",\n    \"industry\",\n    \"info\",\n    \"info circle\",\n    \"key\",\n    \"leaf\",\n    \"lemon\",\n    \"lemon outline\",\n    \"life ring\",\n    \"life ring outline\",\n    \"lightbulb\",\n    \"lightbulb outline\",\n    \"location arrow\",\n    \"low vision\",\n    \"magnet\",\n    \"male\",\n    \"map\",\n    \"map outline\",\n    \"map marker\",\n    \"map marker alternate\",\n    \"map pin\",\n    \"map signs\",\n    \"medkit\",\n    \"money bill alternate\",\n    \"money bill alternate outline\",\n    \"motorcycle\",\n    \"music\",\n    \"newspaper\",\n    \"newspaper outline\",\n    \"paw\",\n    \"phone\",\n    \"phone square\",\n    \"phone volume\",\n    \"plane\",\n    \"plug\",\n    \"plus\",\n    \"plus square\",\n    \"plus square outline\",\n    \"print\",\n    \"recycle\",\n    \"road\",\n    \"rocket\",\n    \"search\",\n    \"search minus\",\n    \"search plus\",\n    \"ship\",\n    \"shopping bag\",\n    \"shopping basket\",\n    \"shopping cart\",\n    \"shower\",\n    \"street view\",\n    \"subway\",\n    \"suitcase\",\n    \"tag\",\n    \"tags\",\n    \"taxi\",\n    \"thumbtack\",\n    \"ticket alternate\",\n    \"tint\",\n    \"train\",\n    \"tree\",\n    \"trophy\",\n    \"truck\",\n    \"tty\",\n    \"umbrella\",\n    \"university\",\n    \"utensil spoon\",\n    \"utensils\",\n    \"wheelchair\",\n    \"wifi\",\n    \"wrench\",\n    \"ambulance\",\n    \"band aid\",\n    \"dna\",\n    \"first aid\",\n    \"heart\",\n    \"heart outline\",\n    \"heartbeat\",\n    \"hospital\",\n    \"hospital outline\",\n    \"hospital symbol\",\n    \"pills\",\n    \"plus\",\n    \"stethoscope\",\n    \"syringe\",\n    \"thermometer\",\n    \"user md\",\n    \"weight\",\n    \"ambulance\",\n    \"anchor\",\n    \"archive\",\n    \"balance scale\",\n    \"bath\",\n    \"bed\",\n    \"beer\",\n    \"bell\",\n    \"bell outline\",\n    \"bicycle\",\n    \"binoculars\",\n    \"birthday cake\",\n    \"bomb\",\n    \"book\",\n    \"bookmark\",\n    \"bookmark outline\",\n    \"briefcase\",\n    \"bug\",\n    \"building\",\n    \"building outline\",\n    \"bullhorn\",\n    \"bullseye\",\n    \"bus\",\n    \"calculator\",\n    \"calendar\",\n    \"calendar outline\",\n    \"calendar alternate\",\n    \"calendar alternate outline\",\n    \"camera\",\n    \"camera retro\",\n    \"car\",\n    \"clipboard\",\n    \"clipboard outline\",\n    \"cloud\",\n    \"coffee\",\n    \"cog\",\n    \"cogs\",\n    \"compass\",\n    \"compass outline\",\n    \"copy\",\n    \"copy outline\",\n    \"cube\",\n    \"cubes\",\n    \"cut\",\n    \"envelope\",\n    \"envelope outline\",\n    \"envelope open\",\n    \"envelope open outline\",\n    \"eraser\",\n    \"eye\",\n    \"eye dropper\",\n    \"fax\",\n    \"fighter jet\",\n    \"file\",\n    \"file outline\",\n    \"file alternate\",\n    \"file alternate outline\",\n    \"film\",\n    \"fire\",\n    \"fire extinguisher\",\n    \"flag\",\n    \"flag outline\",\n    \"flag checkered\",\n    \"flask\",\n    \"futbol\",\n    \"futbol outline\",\n    \"gamepad\",\n    \"gavel\",\n    \"gem\",\n    \"gem outline\",\n    \"gift\",\n    \"glass martini\",\n    \"globe\",\n    \"graduation cap\",\n    \"hdd\",\n    \"hdd outline\",\n    \"headphones\",\n    \"heart\",\n    \"heart outline\",\n    \"home\",\n    \"hospital\",\n    \"hospital outline\",\n    \"hourglass\",\n    \"hourglass outline\",\n    \"image\",\n    \"image outline\",\n    \"images\",\n    \"images outline\",\n    \"industry\",\n    \"key\",\n    \"keyboard\",\n    \"keyboard outline\",\n    \"laptop\",\n    \"leaf\",\n    \"lemon\",\n    \"lemon outline\",\n    \"life ring\",\n    \"life ring outline\",\n    \"lightbulb\",\n    \"lightbulb outline\",\n    \"lock\",\n    \"lock open\",\n    \"magic\",\n    \"magnet\",\n    \"map\",\n    \"map outline\",\n    \"map marker\",\n    \"map marker alternate\",\n    \"map pin\",\n    \"map signs\",\n    \"medkit\",\n    \"microchip\",\n    \"microphone\",\n    \"mobile\",\n    \"mobile alternate\",\n    \"money bill alternate\",\n    \"money bill alternate outline\",\n    \"moon\",\n    \"moon outline\",\n    \"motorcycle\",\n    \"newspaper\",\n    \"newspaper outline\",\n    \"paint brush\",\n    \"paper plane\",\n    \"paper plane outline\",\n    \"paperclip\",\n    \"paste\",\n    \"paw\",\n    \"pencil alternate\",\n    \"phone\",\n    \"plane\",\n    \"plug\",\n    \"print\",\n    \"puzzle piece\",\n    \"road\",\n    \"rocket\",\n    \"save\",\n    \"save outline\",\n    \"search\",\n    \"shield alternate\",\n    \"shopping bag\",\n    \"shopping basket\",\n    \"shopping cart\",\n    \"shower\",\n    \"snowflake\",\n    \"snowflake outline\",\n    \"space shuttle\",\n    \"star\",\n    \"star outline\",\n    \"sticky note\",\n    \"sticky note outline\",\n    \"stopwatch\",\n    \"subway\",\n    \"suitcase\",\n    \"sun\",\n    \"sun outline\",\n    \"tablet\",\n    \"tablet alternate\",\n    \"tachometer alternate\",\n    \"tag\",\n    \"tags\",\n    \"taxi\",\n    \"thumbtack\",\n    \"ticket alternate\",\n    \"train\",\n    \"trash\",\n    \"trash alternate\",\n    \"trash alternate outline\",\n    \"tree\",\n    \"trophy\",\n    \"truck\",\n    \"tv\",\n    \"umbrella\",\n    \"university\",\n    \"unlock\",\n    \"unlock alternate\",\n    \"utensil spoon\",\n    \"utensils\",\n    \"wheelchair\",\n    \"wrench\",\n    \"bell\",\n    \"bell outline\",\n    \"bookmark\",\n    \"bookmark outline\",\n    \"bullhorn\",\n    \"camera\",\n    \"camera retro\",\n    \"cart arrow down\",\n    \"cart plus\",\n    \"certificate\",\n    \"credit card\",\n    \"credit card outline\",\n    \"gem\",\n    \"gem outline\",\n    \"gift\",\n    \"handshake\",\n    \"handshake outline\",\n    \"heart\",\n    \"heart outline\",\n    \"key\",\n    \"shopping bag\",\n    \"shopping basket\",\n    \"shopping cart\",\n    \"star\",\n    \"star outline\",\n    \"tag\",\n    \"tags\",\n    \"thumbs down\",\n    \"thumbs down outline\",\n    \"thumbs up\",\n    \"thumbs up outline\",\n    \"trophy\",\n    \"bookmark\",\n    \"bookmark outline\",\n    \"calendar\",\n    \"calendar outline\",\n    \"certificate\",\n    \"circle\",\n    \"circle outline\",\n    \"cloud\",\n    \"comment\",\n    \"comment outline\",\n    \"file\",\n    \"file outline\",\n    \"folder\",\n    \"folder outline\",\n    \"heart\",\n    \"heart outline\",\n    \"map marker\",\n    \"play\",\n    \"square\",\n    \"square outline\",\n    \"star\",\n    \"star outline\",\n    \"asterisk\",\n    \"certificate\",\n    \"circle notch\",\n    \"cog\",\n    \"compass\",\n    \"compass outline\",\n    \"crosshairs\",\n    \"life ring\",\n    \"life ring outline\",\n    \"snowflake\",\n    \"snowflake outline\",\n    \"spinner\",\n    \"sun\",\n    \"sun outline\",\n    \"sync\",\n    \"baseball ball\",\n    \"basketball ball\",\n    \"bowling ball\",\n    \"football ball\",\n    \"futbol\",\n    \"futbol outline\",\n    \"golf ball\",\n    \"hockey puck\",\n    \"quidditch\",\n    \"table tennis\",\n    \"volleyball ball\",\n    \"ban\",\n    \"battery empty\",\n    \"battery full\",\n    \"battery half\",\n    \"battery quarter\",\n    \"battery three quarters\",\n    \"bell\",\n    \"bell outline\",\n    \"bell slash\",\n    \"bell slash outline\",\n    \"calendar\",\n    \"calendar outline\",\n    \"calendar alternate\",\n    \"calendar alternate outline\",\n    \"calendar check\",\n    \"calendar check outline\",\n    \"calendar minus\",\n    \"calendar minus outline\",\n    \"calendar plus\",\n    \"calendar plus outline\",\n    \"calendar times\",\n    \"calendar times outline\",\n    \"cart arrow down\",\n    \"cart plus\",\n    \"exclamation\",\n    \"exclamation circle\",\n    \"exclamation triangle\",\n    \"eye\",\n    \"eye slash\",\n    \"eye slash outline\",\n    \"file\",\n    \"file outline\",\n    \"file alternate\",\n    \"file alternate outline\",\n    \"folder\",\n    \"folder outline\",\n    \"folder open\",\n    \"folder open outline\",\n    \"info\",\n    \"info circle\",\n    \"lock\",\n    \"lock open\",\n    \"minus\",\n    \"minus circle\",\n    \"minus square\",\n    \"minus square outline\",\n    \"plus\",\n    \"plus circle\",\n    \"plus square\",\n    \"plus square outline\",\n    \"question\",\n    \"question circle\",\n    \"question circle outline\",\n    \"shield alternate\",\n    \"shopping cart\",\n    \"sign in alternate\",\n    \"sign out alternate\",\n    \"thermometer empty\",\n    \"thermometer full\",\n    \"thermometer half\",\n    \"thermometer quarter\",\n    \"thermometer three quarters\",\n    \"thumbs down\",\n    \"thumbs down outline\",\n    \"thumbs up\",\n    \"thumbs up outline\",\n    \"toggle off\",\n    \"toggle on\",\n    \"unlock\",\n    \"unlock alternate\",\n    \"address book\",\n    \"address book outline\",\n    \"address card\",\n    \"address card outline\",\n    \"bed\",\n    \"blind\",\n    \"child\",\n    \"female\",\n    \"frown\",\n    \"frown outline\",\n    \"id badge\",\n    \"id badge outline\",\n    \"id card\",\n    \"id card outline\",\n    \"male\",\n    \"meh\",\n    \"meh outline\",\n    \"power off\",\n    \"smile\",\n    \"smile outline\",\n    \"street view\",\n    \"user\",\n    \"user outline\",\n    \"user circle\",\n    \"user circle outline\",\n    \"user md\",\n    \"user plus\",\n    \"user secret\",\n    \"user times\",\n    \"users\",\n    \"wheelchair\",\n    \"ambulance\",\n    \"bicycle\",\n    \"bus\",\n    \"car\",\n    \"fighter jet\",\n    \"motorcycle\",\n    \"paper plane\",\n    \"paper plane outline\",\n    \"plane\",\n    \"rocket\",\n    \"ship\",\n    \"shopping cart\",\n    \"space shuttle\",\n    \"subway\",\n    \"taxi\",\n    \"train\",\n    \"truck\",\n    \"wheelchair\",\n    \"archive\",\n    \"book\",\n    \"bookmark\",\n    \"bookmark outline\",\n    \"edit\",\n    \"edit outline\",\n    \"envelope\",\n    \"envelope outline\",\n    \"envelope open\",\n    \"envelope open outline\",\n    \"eraser\",\n    \"file\",\n    \"file outline\",\n    \"file alternate\",\n    \"file alternate outline\",\n    \"folder\",\n    \"folder outline\",\n    \"folder open\",\n    \"folder open outline\",\n    \"keyboard\",\n    \"keyboard outline\",\n    \"newspaper\",\n    \"newspaper outline\",\n    \"paper plane\",\n    \"paper plane outline\",\n    \"paperclip\",\n    \"paragraph\",\n    \"pen square\",\n    \"pencil alternate\",\n    \"quote left\",\n    \"quote right\",\n    \"sticky note\",\n    \"sticky note outline\",\n    \"thumbtack\",\n    \"500px\",\n    \"accessible\",\n    \"accusoft\",\n    \"adn\",\n    \"adversal\",\n    \"affiliatetheme\",\n    \"algolia\",\n    \"amazon\",\n    \"amazon pay\",\n    \"amilia\",\n    \"android\",\n    \"angellist\",\n    \"angrycreative\",\n    \"angular\",\n    \"app store\",\n    \"app store ios\",\n    \"apper\",\n    \"apple\",\n    \"apple pay\",\n    \"asymmetrik\",\n    \"audible\",\n    \"autoprefixer\",\n    \"avianex\",\n    \"aviato\",\n    \"aws\",\n    \"bandcamp\",\n    \"behance\",\n    \"behance square\",\n    \"bimobject\",\n    \"bitbucket\",\n    \"bitcoin\",\n    \"bity\",\n    \"black tie\",\n    \"blackberry\",\n    \"blogger\",\n    \"blogger b\",\n    \"bluetooth\",\n    \"bluetooth b\",\n    \"btc\",\n    \"buromobelexperte\",\n    \"buysellads\",\n    \"cc amazon pay\",\n    \"cc amex\",\n    \"cc apple pay\",\n    \"cc diners club\",\n    \"cc discover\",\n    \"cc jcb\",\n    \"cc mastercard\",\n    \"cc paypal\",\n    \"cc stripe\",\n    \"cc visa\",\n    \"centercode\",\n    \"chrome\",\n    \"cloudscale\",\n    \"cloudsmith\",\n    \"cloudversify\",\n    \"codepen\",\n    \"codiepie\",\n    \"connectdevelop\",\n    \"contao\",\n    \"cpanel\",\n    \"creative commons\",\n    \"css3\",\n    \"css3 alternate\",\n    \"cuttlefish\",\n    \"d and d\",\n    \"dashcube\",\n    \"delicious\",\n    \"deploydog\",\n    \"deskpro\",\n    \"deviantart\",\n    \"digg\",\n    \"digital ocean\",\n    \"discord\",\n    \"discourse\",\n    \"dochub\",\n    \"docker\",\n    \"draft2digital\",\n    \"dribbble\",\n    \"dribbble square\",\n    \"dropbox\",\n    \"drupal\",\n    \"dyalog\",\n    \"earlybirds\",\n    \"edge\",\n    \"elementor\",\n    \"ember\",\n    \"empire\",\n    \"envira\",\n    \"erlang\",\n    \"ethereum\",\n    \"etsy\",\n    \"expeditedssl\",\n    \"facebook\",\n    \"facebook f\",\n    \"facebook messenger\",\n    \"facebook square\",\n    \"firefox\",\n    \"first order\",\n    \"firstdraft\",\n    \"flickr\",\n    \"flipboard\",\n    \"fly\",\n    \"font awesome\",\n    \"font awesome alternate\",\n    \"font awesome flag\",\n    \"fonticons\",\n    \"fonticons fi\",\n    \"fort awesome\",\n    \"fort awesome alternate\",\n    \"forumbee\",\n    \"foursquare\",\n    \"free code camp\",\n    \"freebsd\",\n    \"get pocket\",\n    \"gg\",\n    \"gg circle\",\n    \"git\",\n    \"git square\",\n    \"github\",\n    \"github alternate\",\n    \"github square\",\n    \"gitkraken\",\n    \"gitlab\",\n    \"gitter\",\n    \"glide\",\n    \"glide g\",\n    \"gofore\",\n    \"goodreads\",\n    \"goodreads g\",\n    \"google\",\n    \"google drive\",\n    \"google play\",\n    \"google plus\",\n    \"google plus g\",\n    \"google plus square\",\n    \"google wallet\",\n    \"gratipay\",\n    \"grav\",\n    \"gripfire\",\n    \"grunt\",\n    \"gulp\",\n    \"hacker news\",\n    \"hacker news square\",\n    \"hips\",\n    \"hire a helper\",\n    \"hooli\",\n    \"hotjar\",\n    \"houzz\",\n    \"html5\",\n    \"hubspot\",\n    \"imdb\",\n    \"instagram\",\n    \"internet explorer\",\n    \"ioxhost\",\n    \"itunes\",\n    \"itunes note\",\n    \"jenkins\",\n    \"joget\",\n    \"joomla\",\n    \"js\",\n    \"js square\",\n    \"jsfiddle\",\n    \"keycdn\",\n    \"kickstarter\",\n    \"kickstarter k\",\n    \"korvue\",\n    \"laravel\",\n    \"lastfm\",\n    \"lastfm square\",\n    \"leanpub\",\n    \"less\",\n    \"linechat\",\n    \"linkedin\",\n    \"linkedin alternate\",\n    \"linode\",\n    \"linux\",\n    \"lyft\",\n    \"magento\",\n    \"maxcdn\",\n    \"medapps\",\n    \"medium\",\n    \"medium m\",\n    \"medrt\",\n    \"meetup\",\n    \"microsoft\",\n    \"mix\",\n    \"mixcloud\",\n    \"mizuni\",\n    \"modx\",\n    \"monero\",\n    \"napster\",\n    \"nintendo switch\",\n    \"node\",\n    \"node js\",\n    \"npm\",\n    \"ns8\",\n    \"nutritionix\",\n    \"odnoklassniki\",\n    \"odnoklassniki square\",\n    \"opencart\",\n    \"openid\",\n    \"opera\",\n    \"optin monster\",\n    \"osi\",\n    \"page4\",\n    \"pagelines\",\n    \"palfed\",\n    \"patreon\",\n    \"paypal\",\n    \"periscope\",\n    \"phabricator\",\n    \"phoenix framework\",\n    \"php\",\n    \"pied piper\",\n    \"pied piper alternate\",\n    \"pied piper pp\",\n    \"pinterest\",\n    \"pinterest p\",\n    \"pinterest square\",\n    \"playstation\",\n    \"product hunt\",\n    \"pushed\",\n    \"python\",\n    \"qq\",\n    \"quinscape\",\n    \"quora\",\n    \"ravelry\",\n    \"react\",\n    \"rebel\",\n    \"redriver\",\n    \"reddit\",\n    \"reddit alien\",\n    \"reddit square\",\n    \"rendact\",\n    \"renren\",\n    \"replyd\",\n    \"resolving\",\n    \"rocketchat\",\n    \"rockrms\",\n    \"safari\",\n    \"sass\",\n    \"schlix\",\n    \"scribd\",\n    \"searchengin\",\n    \"sellcast\",\n    \"sellsy\",\n    \"servicestack\",\n    \"shirtsinbulk\",\n    \"simplybuilt\",\n    \"sistrix\",\n    \"skyatlas\",\n    \"skype\",\n    \"slack\",\n    \"slack hash\",\n    \"slideshare\",\n    \"snapchat\",\n    \"snapchat ghost\",\n    \"snapchat square\",\n    \"soundcloud\",\n    \"speakap\",\n    \"spotify\",\n    \"stack exchange\",\n    \"stack overflow\",\n    \"staylinked\",\n    \"steam\",\n    \"steam square\",\n    \"steam symbol\",\n    \"sticker mule\",\n    \"strava\",\n    \"stripe\",\n    \"stripe s\",\n    \"studiovinari\",\n    \"stumbleupon\",\n    \"stumbleupon circle\",\n    \"superpowers\",\n    \"supple\",\n    \"telegram\",\n    \"telegram plane\",\n    \"tencent weibo\",\n    \"themeisle\",\n    \"trello\",\n    \"tripadvisor\",\n    \"tumblr\",\n    \"tumblr square\",\n    \"twitch\",\n    \"twitter\",\n    \"twitter square\",\n    \"typo3\",\n    \"uber\",\n    \"uikit\",\n    \"uniregistry\",\n    \"untappd\",\n    \"usb\",\n    \"ussunnah\",\n    \"vaadin\",\n    \"viacoin\",\n    \"viadeo\",\n    \"viadeo square\",\n    \"viber\",\n    \"vimeo\",\n    \"vimeo square\",\n    \"vimeo v\",\n    \"vine\",\n    \"vk\",\n    \"vnv\",\n    \"vuejs\",\n    \"wechat\",\n    \"weibo\",\n    \"weixin\",\n    \"whatsapp\",\n    \"whatsapp square\",\n    \"whmcs\",\n    \"wikipedia w\",\n    \"windows\",\n    \"wordpress\",\n    \"wordpress simple\",\n    \"wpbeginner\",\n    \"wpexplorer\",\n    \"wpforms\",\n    \"xbox\",\n    \"xing\",\n    \"xing square\",\n    \"y combinator\",\n    \"yahoo\",\n    \"yandex\",\n    \"yandex international\",\n    \"yelp\",\n    \"yoast\",\n    \"youtube\",\n    \"youtube square\",\n    \"chess rock\",\n    \"ordered list\",\n    \"unordered list\",\n    \"user doctor\",\n    \"shield\",\n    \"puzzle\",\n    \"add circle\",\n    \"add square\",\n    \"add to calendar\",\n    \"add to cart\",\n    \"add user\",\n    \"add\",\n    \"alarm mute\",\n    \"alarm\",\n    \"ald\",\n    \"als\",\n    \"announcement\",\n    \"area chart\",\n    \"area graph\",\n    \"arrow down cart\",\n    \"asexual\",\n    \"asl interpreting\",\n    \"asl\",\n    \"assistive listening devices\",\n    \"attach\",\n    \"attention\",\n    \"balance\",\n    \"bar\",\n    \"bathtub\",\n    \"battery four\",\n    \"battery high\",\n    \"battery low\",\n    \"battery one\",\n    \"battery three\",\n    \"battery two\",\n    \"battery zero\",\n    \"birthday\",\n    \"block layout\",\n    \"bluetooth alternative\",\n    \"broken chain\",\n    \"browser\",\n    \"call square\",\n    \"call\",\n    \"cancel\",\n    \"cart\",\n    \"cc\",\n    \"chain\",\n    \"chat\",\n    \"checked calendar\",\n    \"checkmark\",\n    \"circle notched\",\n    \"close\",\n    \"cny\",\n    \"cocktail\",\n    \"commenting\",\n    \"computer\",\n    \"configure\",\n    \"content\",\n    \"deafness\",\n    \"delete calendar\",\n    \"delete\",\n    \"detective\",\n    \"discussions\",\n    \"doctor\",\n    \"dollar\",\n    \"dont\",\n    \"drivers license\",\n    \"dropdown\",\n    \"emergency\",\n    \"envira gallery\",\n    \"erase\",\n    \"eur\",\n    \"euro\",\n    \"eyedropper\",\n    \"factory\",\n    \"favorite\",\n    \"feed\",\n    \"female homosexual\",\n    \"file text\",\n    \"file text outline\",\n    \"find\",\n    \"first aid\",\n    \"fork\",\n    \"game\",\n    \"gay\",\n    \"gbp\",\n    \"google plus circle\",\n    \"google plus official\",\n    \"grab\",\n    \"graduation\",\n    \"grid layout\",\n    \"group\",\n    \"h\",\n    \"hand victory\",\n    \"handicap\",\n    \"hard of hearing\",\n    \"header\",\n    \"help circle\",\n    \"help\",\n    \"heterosexual\",\n    \"hide\",\n    \"hotel\",\n    \"hourglass four\",\n    \"hourglass full\",\n    \"hourglass one\",\n    \"hourglass three\",\n    \"hourglass two\",\n    \"idea\",\n    \"ils\",\n    \"in cart\",\n    \"inr\",\n    \"intergender\",\n    \"intersex\",\n    \"jpy\",\n    \"krw\",\n    \"lab\",\n    \"law\",\n    \"legal\",\n    \"lesbian\",\n    \"lightning\",\n    \"like\",\n    \"line graph\",\n    \"linkedin square\",\n    \"linkify\",\n    \"lira\",\n    \"list layout\",\n    \"magnify\",\n    \"mail forward\",\n    \"mail outline\",\n    \"mail square\",\n    \"mail\",\n    \"male homosexual\",\n    \"man\",\n    \"marker\",\n    \"mars alternate\",\n    \"mars horizontal\",\n    \"mars vertical\",\n    \"microsoft edge\",\n    \"military\",\n    \"ms edge\",\n    \"mute\",\n    \"new pied piper\",\n    \"non binary transgender\",\n    \"numbered list\",\n    \"options\",\n    \"other gender horizontal\",\n    \"other gender vertical\",\n    \"other gender\",\n    \"payment\",\n    \"paypal card\",\n    \"pencil square\",\n    \"photo\",\n    \"picture\",\n    \"pie chart\",\n    \"pie graph\",\n    \"pied piper hat\",\n    \"pin\",\n    \"plus cart\",\n    \"point\",\n    \"pointing down\",\n    \"pointing left\",\n    \"pointing right\",\n    \"pointing up\",\n    \"pound\",\n    \"power cord\",\n    \"power\",\n    \"privacy\",\n    \"r circle\",\n    \"rain\",\n    \"record\",\n    \"refresh\",\n    \"remove circle\",\n    \"remove from calendar\",\n    \"remove user\",\n    \"remove\",\n    \"repeat\",\n    \"rmb\",\n    \"rouble\",\n    \"rub\",\n    \"ruble\",\n    \"rupee\",\n    \"s15\",\n    \"selected radio\",\n    \"send\",\n    \"setting\",\n    \"settings\",\n    \"shekel\",\n    \"sheqel\",\n    \"shipping\",\n    \"shop\",\n    \"shuffle\",\n    \"shutdown\",\n    \"sidebar\",\n    \"signing\",\n    \"signup\",\n    \"sliders\",\n    \"soccer\",\n    \"sort alphabet ascending\",\n    \"sort alphabet descending\",\n    \"sort ascending\",\n    \"sort content ascending\",\n    \"sort content descending\",\n    \"sort descending\",\n    \"sort numeric ascending\",\n    \"sort numeric descending\",\n    \"sound\",\n    \"spy\",\n    \"stripe card\",\n    \"student\",\n    \"talk\",\n    \"target\",\n    \"teletype\",\n    \"television\",\n    \"text cursor\",\n    \"text telephone\",\n    \"theme\",\n    \"thermometer\",\n    \"thumb tack\",\n    \"time\",\n    \"tm\",\n    \"toggle down\",\n    \"toggle left\",\n    \"toggle right\",\n    \"toggle up\",\n    \"translate\",\n    \"travel\",\n    \"treatment\",\n    \"triangle down\",\n    \"triangle left\",\n    \"triangle right\",\n    \"triangle up\",\n    \"try\",\n    \"unhide\",\n    \"unlinkify\",\n    \"unmute\",\n    \"usd\",\n    \"user cancel\",\n    \"user close\",\n    \"user delete\",\n    \"user x\",\n    \"vcard\",\n    \"video camera\",\n    \"video play\",\n    \"volume control phone\",\n    \"wait\",\n    \"warning circle\",\n    \"warning sign\",\n    \"warning\",\n    \"wi-fi\",\n    \"winner\",\n    \"wizard\",\n    \"woman\",\n    \"won\",\n    \"wordpress beginner\",\n    \"wordpress forms\",\n    \"world\",\n    \"write square\",\n    \"x\",\n    \"yen\",\n    \"zip\",\n    \"zoom in\",\n    \"zoom out\",\n    \"zoom\",\n    \"bitbucket square\",\n    \"checkmark box\",\n    \"circle thin\",\n    \"cloud download\",\n    \"cloud upload\",\n    \"compose\",\n    \"conversation\",\n    \"credit card alternative\",\n    \"currency\",\n    \"dashboard\",\n    \"diamond\",\n    \"disk\",\n    \"exchange\",\n    \"external share\",\n    \"external square\",\n    \"external\",\n    \"facebook official\",\n    \"food\",\n    \"hourglass zero\",\n    \"level down\",\n    \"level up\",\n    \"log out\",\n    \"meanpath\",\n    \"money\",\n    \"move\",\n    \"pencil\",\n    \"protect\",\n    \"radio\",\n    \"remove bookmark\",\n    \"resize horizontal\",\n    \"resize vertical\",\n    \"sign in\",\n    \"sign out\",\n    \"spoon\",\n    \"star half empty\",\n    \"star half full\",\n    \"ticket\",\n    \"times rectangle\",\n    \"write\",\n    \"youtube play\",\n];\n","export function BASE_PATH(): string {\n    return process.env.REACT_APP_QH_BASE_PATH ?? \"\";\n}\n\n/**\n * Enum that represents possible pages in the QuickHit ELO application.\n */\nexport enum QuickHitPage {\n    HOME = \"/\",\n    LADDER = \"/ladder\",\n    RECENT_GAMES = \"/recent\",\n    STATISTICS = \"/player/:playerId\",\n    TOURNAMENT = \"/tournament\",\n    NOT_FOUND = \"/404\",\n}\n","import { Card, Icon } from \"semantic-ui-react\";\nimport React from \"react\";\nimport \"./PlayerCard.css\";\nimport { Link } from \"react-router-dom\";\nimport { DbPlayer } from \"../../../types/database/models\";\nimport { WinLoss } from \"../../../types/types\";\nimport { BASE_PATH, QuickHitPage } from \"../../../util/QuickHitPage\";\n\ninterface PlayerCardProps {\n    player: DbPlayer;\n    winLoss?: WinLoss;\n}\n/**\n * QuickHit PlayerCard component.\n */\nfunction PlayerCard(props: PlayerCardProps): JSX.Element {\n    return (\n        <Card as={\"span\"} className=\"player-card\">\n            <Card.Content>\n                <Link to={`${BASE_PATH()}${QuickHitPage.STATISTICS.replace(\":playerId\", props.player.id)}`}>\n                    <Card.Header className=\"player-card-header\">\n                        <div>\n                            <Icon name={props.player.icon} size={\"big\"} />\n                        </div>\n                        {props.player.name}\n                    </Card.Header>\n                </Link>\n            </Card.Content>\n            {props.winLoss && (\n                <Card.Content extra className=\"extras\">\n                    <div>{props.player.elo}</div>\n                    <span>\n                        Wins: {props.winLoss.wins} Losses: {props.winLoss.losses}\n                    </span>\n                </Card.Content>\n            )}\n        </Card>\n    );\n}\n\nexport default PlayerCard;\n","import React from \"react\";\nimport \"./Home.css\";\nimport { ButtonGroup, Header, Icon, Transition } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport NewGame from \"../../containers/NewGame\";\nimport NewEditPlayer from \"../Ladder/NewEditPlayer/NewEditPlayer\";\nimport PlayerCard from \"../Ladder/PlayerCard/PlayerCard\";\nimport { TTDataPropsTypeCombined } from \"../../containers/shared\";\nimport { DbHappyHour, DbPlayer } from \"../../types/database/models\";\nimport { BASE_PATH, QuickHitPage } from \"../../util/QuickHitPage\";\n\n/**\n * QuickHit KeyPrompt page.\n */\nfunction Home(props: TTDataPropsTypeCombined): JSX.Element {\n    const getCurrentChampion = (): DbPlayer => {\n        const players = props.players;\n        players.sort((player1, player2) => {\n            return player2.elo - player1.elo;\n        });\n\n        return players[0];\n    };\n\n    const refreshContent = (): void => {\n        // Set the store force refresh flag, alerting QHDataLoader to do a new fetch.\n        props.setForceRefresh(true);\n    };\n\n    return (\n        <div className=\"home\">\n            <Transition transitionOnMount={true}>\n                <Header as={\"h2\"} icon inverted>\n                    <Icon name=\"table tennis\" circular />\n                    Welcome to <Icon name={\"chevron right\"} size={\"tiny\"} />\n                    Quick\n                    <span className={\"header-hit\"}>HIT</span>\n                </Header>\n            </Transition>\n            <Transition transitionOnMount={true}>\n                <ButtonGroup horizontal className={\"home-menu-buttons\"}>\n                    <Header as={\"h3\"} icon>\n                        <Link to={`${BASE_PATH()}${QuickHitPage.LADDER}`}>\n                            <Icon name=\"list\" circular />\n                            <Header.Content>Ladder</Header.Content>\n                        </Link>\n                    </Header>\n                    <Header as={\"h3\"} icon>\n                        <Link to={`${BASE_PATH()}${QuickHitPage.TOURNAMENT}`}>\n                            <Icon name=\"trophy\" circular />\n                            <Header.Content>Tournament</Header.Content>\n                        </Link>\n                    </Header>\n                    <Header as={\"h3\"} icon>\n                        <Link to={`${BASE_PATH()}${QuickHitPage.RECENT_GAMES}`}>\n                            <Icon name=\"history\" circular />\n                            <Header.Content>Recent games</Header.Content>\n                        </Link>\n                    </Header>\n                    <NewGame\n                        customModalOpenElement={\n                            <Header as={\"h3\"} icon>\n                                <Icon name=\"plus\" circular />\n                                <Header.Content>Enter game</Header.Content>\n                            </Header>\n                        }\n                    />\n                    <NewEditPlayer\n                        onRequestMade={refreshContent}\n                        customModalOpenElement={\n                            <Header as={\"h3\"} icon>\n                                <Icon name=\"add user\" circular />\n                                <Header.Content>Sign up</Header.Content>\n                            </Header>\n                        }\n                    />\n                </ButtonGroup>\n            </Transition>\n            <Transition visible={!props.loading} animation={\"fly up\"} duration={2000} unmountOnHide={true}>\n                <div className={\"champion-area\"}>\n                    <Header as={\"h4\"} inverted>\n                        {props.players.length > 0 && <PlayerCard player={getCurrentChampion()} />}\n                    </Header>\n                    <Header.Subheader>\n                        is the current <span className={\"champion-text\"}> champion </span>\n                    </Header.Subheader>\n                </div>\n            </Transition>\n            <Transition visible={!props.loading} animation={\"fade\"} duration={500} unmountOnHide={true}>\n                <span className={\"happy-hour\"}>\n                    <Header>{props.happyHour?.multiplier}x happy hour!</Header>\n                    <Header.Subheader>\n                        Today's happy hour is starting at {renderDateString(props.happyHour)}\n                    </Header.Subheader>\n                </span>\n            </Transition>\n        </div>\n    );\n}\n\nconst renderDateString = (happyHour: DbHappyHour): string => {\n    const date = new Date();\n    date.setHours(happyHour.hourStart, 0, 0);\n\n    return date.toLocaleTimeString();\n};\n\nexport default Home;\n","import { connect } from \"react-redux\";\nimport Home from \"../../components/Home/Home\";\nimport { mapTTDataToProps, mapTTDispatchToProps } from \"../shared\";\n\nexport default connect(mapTTDataToProps, mapTTDispatchToProps)(Home);\n","import React from \"react\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\nfunction NotFound(): JSX.Element {\n    return (\n        <div className=\"not-found\">\n            <Header as={\"h2\"} icon>\n                <Icon name=\"warning\" circular />\n                <Header.Content>Page not found</Header.Content>\n            </Header>\n        </div>\n    );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport \"./Footer.css\";\n\n/**\n * Footer component in QuickHit.\n */\nfunction Footer(): JSX.Element {\n    return <div className=\"footer\">https://github.com/jamesgiu/quick-hit</div>;\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { Button, Form, Icon, Menu, Modal } from \"semantic-ui-react\";\n\nexport interface KeyPromptProps {\n    authKey?: string;\n    setAuthKey: (newKey: string) => void;\n}\n\n/**\n * QuickHit KeyPrompt prompt.\n */\nfunction KeyPrompt(props: KeyPromptProps): JSX.Element {\n    const [key, setKey] = useState<string>(\"\");\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n    return (\n        <Modal\n            open={props.authKey === undefined || isOpen}\n            onClose={(): void => setIsOpen(false)}\n            onOpen={(): void => setIsOpen(true)}\n            trigger={<Menu.Item as={\"a\"} icon={\"key\"} />}\n        >\n            <Modal.Header>\n                <Icon name=\"key\" />\n                Enter key\n            </Modal.Header>\n            <Modal.Content className={\"key-form\"}>\n                <Form warning>\n                    <Form.Group widths={\"equal\"}>\n                        <Form.Field>\n                            <Form.Input\n                                fluid\n                                label=\"Key required to proceed\"\n                                required\n                                placeholder=\"Key for table tennis service account\"\n                                onChange={(event, data): void => setKey(data.value)}\n                            />\n                        </Form.Field>\n                    </Form.Group>\n                </Form>\n                <Button\n                    icon={\"key\"}\n                    onClick={(): void => {\n                        props.setAuthKey(key);\n                        setIsOpen(false);\n                        location.reload();\n                    }}\n                >\n                    Proceed\n                </Button>\n            </Modal.Content>\n        </Modal>\n    );\n}\n\nexport default KeyPrompt;\n","import { connect } from \"react-redux\";\nimport KeyPrompt, { KeyPromptProps } from \"../../components/KeyPrompt/KeyPrompt\";\nimport { Dispatch } from \"redux\";\nimport * as authActions from \"../../redux/actions/AuthActions\";\nimport { SetAuthKeyAction } from \"../../redux/actions/AuthActions\";\nimport { AuthStoreState } from \"../../redux/types/AuthTypes\";\nimport { QuickHitReduxStores } from \"../../redux/types/store\";\n\nexport function mapStateToProps(store: QuickHitReduxStores): AuthStoreState {\n    return {\n        authKey: store.authStore.authKey,\n    };\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<SetAuthKeyAction>): KeyPromptProps {\n    return {\n        setAuthKey: (newKey: string): SetAuthKeyAction => dispatch(authActions.setAuthKey(newKey)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KeyPrompt);\n","import React from \"react\";\nimport \"./Navbar.css\";\nimport { Icon, Menu } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { BASE_PATH, QuickHitPage } from \"../../util/QuickHitPage\";\nimport NewEditPlayer from \"../Ladder/NewEditPlayer/NewEditPlayer\";\nimport KeyPrompt from \"../../containers/KeyPrompt\";\nimport NewGame from \"../../containers/NewGame\";\n\n/**\n * QuickHit's navbar.\n */\nfunction Navbar(): JSX.Element {\n    return (\n        <div className={\"tt-navbar\"}>\n            <Menu stackable inverted>\n                <Link to={`${BASE_PATH()}${QuickHitPage.HOME}`}>\n                    <Menu.Item as={\"a\"} header className={\"header\"}>\n                        <Icon name={\"table tennis\"} size={\"big\"} />\n                        <Icon name={\"chevron right\"} size={\"tiny\"} />\n                        Quick<span className={\"header-hit\"}>HIT</span>\n                    </Menu.Item>\n                </Link>\n                <Link to={`${BASE_PATH()}${QuickHitPage.HOME}`}>\n                    <Menu.Item as={\"a\"}>\n                        <Icon name={\"home\"} />\n                        Home\n                    </Menu.Item>\n                </Link>\n                <Link to={`${BASE_PATH()}${QuickHitPage.LADDER}`}>\n                    <Menu.Item as={\"a\"}>\n                        <Icon name={\"list\"} />\n                        Ladder\n                    </Menu.Item>\n                </Link>\n                <Link to={`${BASE_PATH()}${QuickHitPage.TOURNAMENT}`}>\n                    <Menu.Item as={\"a\"}>\n                        <Icon name={\"trophy\"} />\n                        Tournament\n                    </Menu.Item>\n                </Link>\n                <Link to={`${BASE_PATH()}${QuickHitPage.RECENT_GAMES}`}>\n                    <Menu.Item as={\"a\"}>\n                        <Icon name={\"history\"} />\n                        Recent games\n                    </Menu.Item>\n                </Link>\n                <Menu.Menu position={\"right\"}>\n                    <NewEditPlayer customModalOpenElement={<Menu.Item as={\"a\"} icon={\"user plus\"} />} />\n                    <NewGame\n                        customModalOpenElement={\n                            <Menu.Item as={\"a\"}>\n                                <span className={\"new-game-icon-navbar\"}>\n                                    <Icon name={\"game\"} />\n                                    <Icon name={\"plus\"} size={\"tiny\"} />\n                                </span>\n                            </Menu.Item>\n                        }\n                    />\n                    <KeyPrompt />\n                </Menu.Menu>\n            </Menu>\n        </div>\n    );\n}\n\nexport default Navbar;\n","import \"./Ladder.css\";\nimport { Button, Header, Icon, Table, Transition } from \"semantic-ui-react\";\nimport PlayerCard from \"./PlayerCard/PlayerCard\";\nimport NewEditPlayer from \"./NewEditPlayer/NewEditPlayer\";\nimport NewGame from \"../../containers/NewGame\";\nimport { getWinLossForPlayer } from \"../QHDataLoader/QHDataLoader\";\nimport { TTDataPropsTypeCombined } from \"../../containers/shared\";\nimport { BASE_PATH, QuickHitPage } from \"../../util/QuickHitPage\";\nimport { Link } from \"react-router-dom\";\nimport { ViewDispatchType } from \"../../containers/Ladder/Ladder\";\nimport { ViewStoreState } from \"../../redux/types/ViewTypes\";\n\nexport type LadderProps = ViewStoreState & TTDataPropsTypeCombined & ViewDispatchType;\n\n/**\n * QuickHit Ladder page.\n */\nfunction Ladder(props: LadderProps): JSX.Element {\n    const renderPlayersAsCards = (): JSX.Element[] => {\n        const playersLadder: JSX.Element[] = [];\n\n        props.players.forEach((player) => {\n            const winLoss = getWinLossForPlayer(player.id, props.matches);\n\n            const playerCard = <PlayerCard player={player} winLoss={winLoss} />;\n\n            // If we are hiding zero game players, then only push if they have played a game\n            if (props.hideZeroGamePlayers) {\n                if (winLoss.wins + winLoss.losses > 0) {\n                    playersLadder.push(playerCard);\n                }\n            } else {\n                playersLadder.push(playerCard);\n            }\n        });\n\n        // Sorting the player items by elo.\n        playersLadder.sort((player1, player2) => {\n            return player2.props.player.elo - player1.props.player.elo;\n        });\n\n        return playersLadder;\n    };\n\n    const renderPlayersInTable = (): JSX.Element[] => {\n        const playersLadder: JSX.Element[] = [];\n        const playerTableRows: JSX.Element[] = [];\n\n        const sortedPlayers = props.players.sort((player1, player2) => {\n            return player2.elo - player1.elo;\n        });\n\n        sortedPlayers.forEach((player) => {\n            const winLoss = getWinLossForPlayer(player.id, props.matches);\n            let addPlayer = true;\n            if (props.hideZeroGamePlayers && winLoss.losses + winLoss.wins == 0) {\n                addPlayer = false;\n            }\n            if (addPlayer) {\n                playerTableRows.push(\n                    <Table.Row className={\"player-row\"}>\n                        <Table.Cell className={\"player-cell\"}>\n                            <Link\n                                className={\"player-row-link\"}\n                                to={`${BASE_PATH()}${QuickHitPage.STATISTICS.replace(\":playerId\", player.id)}`}\n                            >\n                                <span>\n                                    <Icon name={player.icon} size={\"small\"} />\n                                    {player.name}\n                                </span>\n                            </Link>\n                        </Table.Cell>\n                        <Table.Cell>{player.elo}</Table.Cell>\n                        <Table.Cell>\n                            {winLoss.wins}-{winLoss.losses}\n                        </Table.Cell>\n                    </Table.Row>\n                );\n            }\n        });\n\n        playersLadder.push(\n            <Table unstackable celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Player</Table.HeaderCell>\n                        <Table.HeaderCell>ELO</Table.HeaderCell>\n                        <Table.HeaderCell>W-L</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>{playerTableRows}</Table.Body>\n            </Table>\n        );\n        return playersLadder;\n    };\n\n    const renderPlayers = (): JSX.Element[] => {\n        if (props.showCards) {\n            return renderPlayersAsCards();\n        } else {\n            return renderPlayersInTable();\n        }\n    };\n\n    const refreshContent = (): void => {\n        // Set the store force refresh flag, alerting QHDataLoader to do a new fetch.\n        props.setForceRefresh(true);\n    };\n\n    return (\n        <div className=\"players\">\n            <Header as={\"h2\"} icon>\n                <Icon name=\"trophy\" circular />\n                <Header.Content>Ladder</Header.Content>\n            </Header>\n            <div className={\"toggles\"}>\n                <Button\n                    onClick={(): void => props.setHideZeroGamePlayers(!props.hideZeroGamePlayers)}\n                    color={props.hideZeroGamePlayers ? \"green\" : \"red\"}\n                >\n                    {props.hideZeroGamePlayers ? (\n                        <span>\n                            <Icon name={\"eye\"} /> Show zero game players\n                        </span>\n                    ) : (\n                        <span>\n                            <Icon name={\"eye slash\"} /> Hide zero game players\n                        </span>\n                    )}\n                </Button>\n                <Button\n                    onClick={(): void => props.setShowCards(!props.showCards)}\n                    color={props.showCards ? \"orange\" : \"yellow\"}\n                >\n                    {props.showCards ? (\n                        <span>\n                            <Icon name={\"table\"} /> Show ladder table\n                        </span>\n                    ) : (\n                        <span>\n                            <Icon name={\"address card\"} /> Show player cards\n                        </span>\n                    )}\n                </Button>\n            </div>\n            <Transition visible={!props.loading}>\n                <span>\n                    <span className={`players-area horizontal`}>{renderPlayers()}</span>\n                    <div className={\"new-buttons\"}>\n                        <NewEditPlayer onRequestMade={refreshContent} />\n                        <NewGame />\n                    </div>\n                </span>\n            </Transition>\n        </div>\n    );\n}\n\nexport default Ladder;\n","import { connect } from \"react-redux\";\nimport Ladder from \"../../components/Ladder/Ladder\";\nimport { Dispatch } from \"redux\";\nimport * as ttActions from \"../../redux/actions/TTActions\";\nimport * as viewActions from \"../../redux/actions/ViewActions\";\nimport { TTStoreState } from \"../../redux/types/TTTypes\";\nimport { ViewStoreState } from \"../../redux/types/ViewTypes\";\nimport { TTRefreshDispatchType } from \"../shared\";\nimport { QuickHitReduxStores } from \"../../redux/types/store\";\n\nexport interface ViewDispatchType {\n    setHideZeroGamePlayers: (hideZeroGamePlayers: boolean) => void;\n    setShowCards: (showCards: boolean) => void;\n}\n\nexport function mapStateToProps(store: QuickHitReduxStores): TTStoreState & ViewStoreState {\n    return {\n        loading: store.ttData.loading,\n        players: store.ttData.players,\n        matches: store.ttData.matches,\n        refresh: store.ttData.refresh,\n        happyHour: store.ttData.happyHour,\n        badges: store.ttData.badges,\n        tournaments: store.ttData.tournaments,\n        hideZeroGamePlayers: store.viewStore.hideZeroGamePlayers,\n        showCards: store.viewStore.showCards,\n    };\n}\n\nexport function mapDispatchToProps(\n    dispatch: Dispatch<\n        ttActions.SetForceRefreshAction | viewActions.SetZeroGamesFilterAction | viewActions.SetShowCardsAction\n    >\n): TTRefreshDispatchType & ViewDispatchType {\n    return {\n        setForceRefresh: (newRefresh: boolean): ttActions.SetForceRefreshAction =>\n            dispatch(ttActions.setRefresh(newRefresh)),\n        setHideZeroGamePlayers: (hideZeroGamePlayers: boolean): viewActions.SetZeroGamesFilterAction =>\n            dispatch(viewActions.setZeroGamesFilter(hideZeroGamePlayers)),\n        setShowCards: (showCards: boolean): viewActions.SetShowCardsAction =>\n            dispatch(viewActions.setShowCards(showCards)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ladder);\n","import * as constants from \"../../constants/ViewConstants\";\n\nexport interface SetZeroGamesFilterAction {\n    type: constants.SET_HIDE_ZERO_GAME_PLAYERS_TYPE;\n    value: boolean;\n}\n\nexport interface SetShowCardsAction {\n    type: constants.SET_SHOW_CARDS_TYPE;\n    value: boolean;\n}\n\nexport function setZeroGamesFilter(hideZeroGamesPlayers: boolean): SetZeroGamesFilterAction {\n    return {\n        type: constants.SET_HIDE_ZERO_GAME_PLAYERS,\n        value: hideZeroGamesPlayers,\n    };\n}\n\nexport function setShowCards(showCards: boolean): SetShowCardsAction {\n    return {\n        type: constants.SET_SHOW_CARDS,\n        value: showCards,\n    };\n}\n","import React, {useEffect, useState} from \"react\";\nimport \"./RecentGames.css\";\nimport {Divider, Feed, Header, Icon, Pagination, PaginationProps, Transition} from \"semantic-ui-react\";\nimport { FeedEventProps } from \"semantic-ui-react/dist/commonjs/views/Feed/FeedEvent\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport { TTDataPropsTypeCombined } from \"../../containers/shared\";\nimport { getPlayersMap } from \"../QHDataLoader/QHDataLoader\";\nimport {DbMatch} from \"../../types/database/models\";\n\nexport interface RecentGamesProps {\n    focusedPlayerId?: string;\n}\n\nexport type RecentGamesCombinedProps = RecentGamesProps & TTDataPropsTypeCombined;\n\nfunction RecentGames(props: RecentGamesCombinedProps): JSX.Element {\n    const PAGE_SIZE = 5;\n    // Track this in state, as we may potentially filter the matches to only be focused ones.\n    const [matches, setMatches] = React.useState<DbMatch[]>(props.matches);\n    const [currentPage, setCurrentPage] = React.useState<number>(0);\n\n    // Runs on mount.\n    useEffect(()=> {\n       sortAndFilterMatches();\n    }, []);\n\n    // When the matches change, re-sort them.\n    useEffect(()=> {\n      sortAndFilterMatches();\n    }, [props.matches])\n\n    const sortAndFilterMatches = (): void => {\n        let sortedAndFilteredMatches : DbMatch[] = props.matches;\n        // Determine which matches will make up our Recent Games set on mount to save performance.\n        // If we are focusing on a player, do the filter now.\n        if (props.focusedPlayerId) {\n            sortedAndFilteredMatches = sortedAndFilteredMatches.filter((match) => match.winning_player_id === props.focusedPlayerId || match.losing_player_id === props.focusedPlayerId);\n        }\n\n        // Sort list from newest to oldest\n        sortedAndFilteredMatches = sortedAndFilteredMatches.sort((matchA, matchB) => {\n            return new Date(matchB.date).getTime() - new Date(matchA.date).getTime();\n        });\n\n        // Set this filtered and sorted match object in state, for later use.\n        setMatches(sortedAndFilteredMatches);\n    }\n\n    const getMatchEvents = (): FeedEventProps[] => {\n        if (matches.length === 0 || props.players.length === 0) {\n            return [];\n        }\n\n        const events: FeedEventProps[] = [];\n        const playersMap = getPlayersMap(props.players);\n\n        // Use index access for pagination, with a max result size of PAGE_SIZE and offset generated by the current page\n        // * page-size.\n        const offset = currentPage * PAGE_SIZE;\n        const nextPageOffset = (currentPage + 1) * PAGE_SIZE;\n\n        for(let i = offset; i < nextPageOffset; i++) {\n            if (i > matches.length - 1) {\n                break;\n            }\n\n            const match = matches[i];\n\n            const winningPlayer = playersMap.get(match.winning_player_id);\n            const losingPlayer = playersMap.get(match.losing_player_id);\n\n            if (!(winningPlayer && losingPlayer)) {\n                break;\n            }\n\n            events.push({\n                meta: (\n                    <div className={\"event-content\"}>\n                        {winningPlayer.name} ({match.winning_player_original_elo}\n                        <span className={\"elo-gain\"}>\n                            +{match.winner_new_elo - match.winning_player_original_elo}={match.winner_new_elo}\n                        </span>\n                        ) defeated {losingPlayer.name} ({match.losing_player_original_elo}\n                        <span className={\"elo-loss\"}>\n                            -{match.losing_player_original_elo - match.loser_new_elo}={match.loser_new_elo}\n                        </span>\n                        ) <ReactTimeAgo date={new Date(match.date)} />\n                        ...\n                        <Divider />\n                    </div>\n                ),\n                date: <div className={\"event-date\"}>{new Date(match.date).toDateString()}</div>,\n                content: (\n                    <div className={\"event-summary\"}>\n                        <Icon name={winningPlayer.icon} color={\"green\"} />\n                        <span className={\"game-winner\"}>{winningPlayer.name} </span>\n                        <span className={\"game-winner\"}>({match.winning_player_score})</span>\n                        <Icon name={\"chevron right\"} color={\"orange\"} />\n                        <Icon name={losingPlayer.icon} color={\"red\"} />\n                        <span className={\"game-loser\"}>{losingPlayer.name} </span>\n                        <span className={\"game-loser\"}>({match.losing_player_score})</span>\n                        <span className={\"happy-hour\"}>\n                            {match.happy_hour && (\n                                <span>\n                                    <Icon name={\"smile\"} />\n                                    Happy hour!\n                                </span>\n                            )}\n                        </span>\n                    </div>\n                ),\n                icon: winningPlayer.icon,\n            });\n        }\n\n        return events;\n    };\n\n    const getTotalPages = () : number => {\n        return Math.max(Math.floor( matches.length / PAGE_SIZE), 1);\n    }\n\n    const handlePageChange = (event : React.MouseEvent<HTMLAnchorElement>, data: PaginationProps): void => {\n        setCurrentPage(data.activePage as number);\n    }\n\n    return (\n        <div className=\"recent-games\">\n            <Header as={\"h2\"} icon>\n                <Icon name=\"history\" circular />\n                <Header.Content>Recent games</Header.Content>\n            </Header>\n            <Transition visible={!props.loading}>\n                <span>\n                    <Feed className={\"games-feed\"} events={getMatchEvents()} />\n                    <Pagination totalPages={getTotalPages()} defaultActivePage={1} onPageChange={handlePageChange} siblingRange={1} disabled={getTotalPages() === 1}/>\n                </span>\n            </Transition>\n        </div>\n    );\n}\n\nexport default RecentGames;\n","import { connect } from \"react-redux\";\nimport RecentGames, { RecentGamesProps } from \"../../components/RecentGames/RecentGames\";\nimport { mapTTDispatchToProps } from \"../shared\";\nimport { TTStoreState } from \"../../redux/types/TTTypes\";\nimport { QuickHitReduxStores } from \"../../redux/types/store\";\n\nexport function mapStateToProps(\n    store: QuickHitReduxStores,\n    ownProps: RecentGamesProps\n): TTStoreState & RecentGamesProps {\n    return {\n        loading: store.ttData.loading,\n        players: store.ttData.players,\n        matches: store.ttData.matches,\n        refresh: store.ttData.refresh,\n        happyHour: store.ttData.happyHour,\n        badges: store.ttData.badges,\n        tournaments: store.ttData.tournaments,\n        focusedPlayerId: ownProps.focusedPlayerId,\n    };\n}\n\nexport default connect(mapStateToProps, mapTTDispatchToProps)(RecentGames);\n","import React from \"react\";\nimport { Divider, Feed, Header, Icon } from \"semantic-ui-react\";\nimport { FeedEventProps } from \"semantic-ui-react/dist/commonjs/views/Feed/FeedEvent\";\nimport { getPlayersMap } from \"../QHDataLoader/QHDataLoader\";\nimport { DbBadge } from \"../../types/database/models\";\nimport { TTDataPropsTypeCombined } from \"../../containers/shared\";\n\nexport interface AchievementFeedProps {\n    focusedPlayerId?: string;\n}\n\nfunction AchievementFeed(props: AchievementFeedProps & TTDataPropsTypeCombined): JSX.Element {\n    // Calculate the global percentage of players who have obtained this achievement.\n    const calculateAttainmentPercentage = (focusedBadge: DbBadge): number => {\n        const badgeHolders: DbBadge[] = props.badges.filter((badge: DbBadge) => badge.key === focusedBadge.key);\n        const percentage = (badgeHolders.length / props.players.length) * 100;\n\n        return percentage;\n    };\n\n    // Obtain a feed of achievements that the focused player has obtained.\n    const getAchievements = (): FeedEventProps[] => {\n        if (props.players.length === 0) {\n            return [];\n        }\n\n        const events: FeedEventProps[] = [];\n        const playersMap = getPlayersMap(props.players);\n\n        const relevantBadges = props.badges.filter((badge: DbBadge) => badge.player_id === props.focusedPlayerId);\n\n        // Sort list from newest to oldest\n        relevantBadges.sort((badgeA, badgeB) => new Date(badgeB.date).getTime() - new Date(badgeA.date).getTime());\n\n        relevantBadges.forEach((badge) => {\n            const involvedPlayer = playersMap.get(badge.involved_player);\n            const attainmentPercentage = calculateAttainmentPercentage(badge);\n\n            events.push({\n                meta: (\n                    <div className={\"event-summary\"}>\n                        {badge.text}\n                        <div className={attainmentPercentage < 10 ? \"achievement-stats-rare\" : \"achievement-stats\"}>\n                            {attainmentPercentage.toFixed(1)}% of players have this achievement\n                        </div>\n                        <Divider />\n                    </div>\n                ),\n                date: (\n                    <div className={\"event-date\"}>\n                        {new Date(badge.date).toDateString()} during a match against:{\" \"}\n                        <Icon name={involvedPlayer?.icon} /> {involvedPlayer?.name}\n                    </div>\n                ),\n                content: <div className={\"event-content\"}>{badge.title}</div>,\n                icon: badge.icon,\n            });\n        });\n\n        return events;\n    };\n\n    return (\n        <div className=\"achievements\">\n            <Header as={\"h2\"} icon>\n                <Icon name=\"trophy\" circular />\n                <Header.Content>Achievements</Header.Content>\n            </Header>\n            <Feed className={\"achievements-feed\"} events={getAchievements()} />\n        </div>\n    );\n}\n\nexport default AchievementFeed;\n","import { connect } from \"react-redux\";\nimport { mapTTDataToProps, mapTTDispatchToProps } from \"../shared\";\nimport AchievementFeed from \"../../components/PlayerStatistics/AchievementFeed\";\nimport { QuickHitReduxStores } from \"../../redux/types/store\";\nimport { RecentGamesProps } from \"../../components/RecentGames/RecentGames\";\nimport { TTStoreState } from \"../../redux/types/TTTypes\";\n\nexport interface AchievementFeedProps {\n    focusedPlayerId?: string;\n}\n\nexport function mapStateToProps(\n    store: QuickHitReduxStores,\n    ownProps: AchievementFeedProps\n): TTStoreState & RecentGamesProps {\n    return {\n        loading: store.ttData.loading,\n        players: store.ttData.players,\n        matches: store.ttData.matches,\n        refresh: store.ttData.refresh,\n        happyHour: store.ttData.happyHour,\n        badges: store.ttData.badges,\n        tournaments: store.ttData.tournaments,\n        focusedPlayerId: ownProps.focusedPlayerId,\n    };\n}\n\nexport default connect(mapTTDataToProps, mapTTDispatchToProps)(AchievementFeed);\n","import \"./PlayerStatistics.css\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Grid, Header, Icon, Popup, Statistic, Transition } from \"semantic-ui-react\";\nimport { ExtraPlayerStats } from \"../../types/types\";\nimport { TTDataPropsTypeCombined } from \"../../containers/shared\";\nimport RecentGames from \"../../containers/RecentGames\";\nimport { getExtraPlayerStats, getPlayersMap, getRecordAgainstPlayer } from \"../QHDataLoader/QHDataLoader\";\nimport PlayerCard from \"../Ladder/PlayerCard/PlayerCard\";\nimport NewEditPlayer from \"../Ladder/NewEditPlayer/NewEditPlayer\";\nimport AchievementFeed from \"../../containers/AchievementFeed\";\n\ninterface PlayerStatisticsParams {\n    playerId: string;\n}\n\ninterface PlayerStatisticsProps extends RouteComponentProps<PlayerStatisticsParams>, TTDataPropsTypeCombined {}\n\nfunction PlayerStatistics(props: PlayerStatisticsProps): JSX.Element {\n    const playersMap = getPlayersMap(props.players);\n    const player = playersMap.get(props.match.params.playerId);\n    const extraStats: ExtraPlayerStats = player\n        ? getExtraPlayerStats(player.id, props.matches)\n        : { wins: 0, losses: 0, minELO: 0, maxELO: 0 };\n    const victim = extraStats.victim ? playersMap.get(extraStats.victim) : undefined;\n    const nemesis = extraStats.nemesis ? playersMap.get(extraStats.nemesis) : undefined;\n\n    return (\n        <div className=\"player-statistics\">\n            <Transition visible={!props.loading}>\n                {!player ? (\n                    <span className={\"error\"}>Player {props.match.params.playerId} does not exist.</span>\n                ) : (\n                    <span>\n                        <Header as={\"h2\"} icon>\n                            <Icon name={player.icon} circular />\n                            <Header.Content>\n                                <div>\n                                    {player.name}\n                                    <NewEditPlayer\n                                        editingPlayer={player}\n                                        customModalOpenElement={\n                                            <Icon name={\"pencil\"} size={\"tiny\"} className={\"edit-icon\"} />\n                                        }\n                                        onRequestMade={(): void => props.setForceRefresh(true)}\n                                    />\n                                </div>\n                            </Header.Content>\n                        </Header>\n                        <div className={\"player-stats-wrapper\"}>\n                            <div className={\"tournament-win-count\"}>\n                                <Popup\n                                    content={\"Tournament wins\"}\n                                    trigger={\n                                        <span>\n                                            <Icon name={\"trophy\"} color={\"yellow\"} /> x {player.tournamentWins ?? 0}\n                                        </span>\n                                    }\n                                    position={\"bottom center\"}\n                                />\n                                <Popup\n                                    content={\"Tournament runner ups\"}\n                                    trigger={\n                                        <span>\n                                            <Icon name={\"trophy\"} color={\"grey\"} /> x {player.tournamentRunnerUps ?? 0}\n                                        </span>\n                                    }\n                                    position={\"bottom center\"}\n                                />\n                            </div>\n                            <Statistic.Group className={\"statistics-group\"}>\n                                <Statistic label={\"Min rating\"} value={extraStats.minELO} className={\"min-elo\"} />\n                                <Statistic label={\"Rating\"} value={player.elo} />\n                                <Statistic label={\"Max rating\"} value={extraStats.maxELO} className={\"max-elo\"} />\n                            </Statistic.Group>\n                            <Statistic.Group className={\"statistics-group\"}>\n                                <Statistic label={\"Wins\"} value={extraStats.wins} className={\"wins\"} />\n                                <Statistic label={\"Losses\"} value={extraStats.losses} className={\"losses\"} />\n                                <Statistic\n                                    label={\"W/L ratio\"}\n                                    value={`${Math.round(\n                                        (extraStats.wins / (extraStats.wins + extraStats.losses)) * 100\n                                    )}%`}\n                                />\n                                <Statistic label={\"Games played\"} value={extraStats.wins + extraStats.losses} />\n                            </Statistic.Group>\n                            <Statistic.Group className={\"statistics-group\"}>\n                                <Statistic\n                                    label={\"Victim\"}\n                                    value={\n                                        victim ? (\n                                            <PlayerCard\n                                                player={victim}\n                                                winLoss={getRecordAgainstPlayer(player.id, victim.id, props.matches)}\n                                            />\n                                        ) : (\n                                            <PlayerCard\n                                                player={player}\n                                                winLoss={{ wins: extraStats.wins, losses: extraStats.losses }}\n                                            />\n                                        )\n                                    }\n                                    className={\"victim\"}\n                                />\n\n                                <Statistic\n                                    label={\"Nemesis\"}\n                                    value={\n                                        nemesis ? (\n                                            <PlayerCard\n                                                player={nemesis}\n                                                winLoss={getRecordAgainstPlayer(player.id, nemesis.id, props.matches)}\n                                            />\n                                        ) : (\n                                            <PlayerCard\n                                                player={player}\n                                                winLoss={{ wins: extraStats.wins, losses: extraStats.losses }}\n                                            />\n                                        )\n                                    }\n                                    className={\"nemesis\"}\n                                />\n                            </Statistic.Group>\n                        </div>\n                        <Grid columns={2}>\n                            <Grid.Column>\n                                <RecentGames focusedPlayerId={player.id} />\n                            </Grid.Column>\n                            <Grid.Column>\n                                <AchievementFeed focusedPlayerId={player.id} />\n                            </Grid.Column>\n                        </Grid>\n                    </span>\n                )}\n            </Transition>\n        </div>\n    );\n}\n\nexport default PlayerStatistics;\n","import { connect } from \"react-redux\";\nimport { mapTTDataToProps, mapTTDispatchToProps } from \"../shared\";\nimport PlayerStatistics from \"../../components/PlayerStatistics/PlayerStatistics\";\n\nexport default connect(mapTTDataToProps, mapTTDispatchToProps)(PlayerStatistics);\n","import { Dispatch } from \"redux\";\nimport * as actions from \"../../redux/actions/TTActions\";\nimport { connect } from \"react-redux\";\nimport QHDataLoader from \"../../components/QHDataLoader/QHDataLoader\";\nimport { DbBadge, DbHappyHour, DbMatch, DbPlayer, DbTournament } from \"../../types/database/models\";\nimport { mapTTDataToProps, TTRefreshDispatchType } from \"../shared\";\n\nexport interface DataLoaderDispatchType extends TTRefreshDispatchType {\n    setMatches: (newMatches: DbMatch[]) => void;\n    setPlayers: (newPlayers: DbPlayer[]) => void;\n    setHappyHour: (newHappyHour: DbHappyHour) => void;\n    setLoading: (newLoading: boolean) => void;\n    setBadges: (newBadges: DbBadge[]) => void;\n    setTournaments: (newTournaments: DbTournament[]) => void;\n}\n\nexport function mapDispatchToProps(\n    dispatch: Dispatch<\n        | actions.SetLoadingAction\n        | actions.SetMatchesAction\n        | actions.SetPlayersAction\n        | actions.SetForceRefreshAction\n        | actions.SetHappyHourAction\n        | actions.SetBadgesAction\n        | actions.SetTournamentsAction\n    >\n): DataLoaderDispatchType {\n    return {\n        setMatches: (newMatches: DbMatch[]): actions.SetMatchesAction => dispatch(actions.setMatches(newMatches)),\n        setPlayers: (newPlayers: DbPlayer[]): actions.SetPlayersAction => dispatch(actions.setPlayers(newPlayers)),\n        setHappyHour: (newHappyHour: DbHappyHour): actions.SetHappyHourAction =>\n            dispatch(actions.setHappyHour(newHappyHour)),\n        setLoading: (newLoading: boolean): actions.SetLoadingAction => dispatch(actions.setLoading(newLoading)),\n        setForceRefresh: (newRefresh: boolean): actions.SetForceRefreshAction =>\n            dispatch(actions.setRefresh(newRefresh)),\n        setBadges: (newBadges: DbBadge[]): actions.SetBadgesAction => dispatch(actions.setBadges(newBadges)),\n        setTournaments: (newTournaments: DbTournament[]): actions.SetTournamentsAction =>\n            dispatch(actions.setTournaments(newTournaments)),\n    };\n}\n\nexport default connect(mapTTDataToProps, mapDispatchToProps)(QHDataLoader);\n","export interface WinLoss {\n    wins: number;\n    losses: number;\n}\n\nexport interface ExtraPlayerStats {\n    wins: number;\n    losses: number;\n    minELO: number;\n    maxELO: number;\n    victim?: string;\n    nemesis?: string;\n}\n\nexport enum TournamentParticipantsType {\n    STANDARD = \"Standard\",\n    REVERSE = \"Reverse\",\n}\n\nexport enum TournamentType {\n    SINGLE = \"Single Elimination\",\n    DOUBLE = \"Double Elimination\",\n    AFL = \"AFL-style\",\n}\n","import { useState } from \"react\";\nimport { Modal, Icon, Form, Table, Grid } from \"semantic-ui-react\";\nimport { QuickHitAPI } from \"../../../api/QuickHitAPI\";\nimport { DbPlayer, DbTournamentMatch, DbTournament } from \"../../../types/database/models\";\nimport { makeSuccessToast, makeErrorToast } from \"../../Toast/Toast\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getISODate } from \"../Tournament\";\nimport \"./NewTournament.css\";\nimport { TournamentParticipantsType, TournamentType } from \"../../../types/types\";\n\ninterface NewTournamentProps {\n    onClose: () => void;\n    isOpen: boolean;\n    sortedPlayers: DbPlayer[];\n}\n\nfunction NewTournament(props: NewTournamentProps): JSX.Element {\n    const [startingNewTournament, setStartingNewTournament] = useState<boolean>(false);\n    const [newTournamentName, setNewTournamentName] = useState<string>(\"\");\n    const [newTournamentParticipantsType, setParticipantsType] = useState<TournamentParticipantsType>(\n        TournamentParticipantsType.STANDARD\n    );\n    const [newTournamentType, setTournamentType] = useState<TournamentType>(TournamentType.SINGLE);\n\n    const startNewTournament = (): void => {\n        const onSuccess = (): void => {\n            makeSuccessToast(\"Tournament started!\", `A new tournament ${name} has been started!`);\n            setStartingNewTournament(false);\n            props.onClose();\n        };\n\n        const onError = (errorMsg: string): void => {\n            makeErrorToast(\"Could not start tournament\", errorMsg);\n            setStartingNewTournament(false);\n        };\n\n        setStartingNewTournament(true);\n\n        const players: DbPlayer[] = [...props.sortedPlayers];\n        if (newTournamentParticipantsType === TournamentParticipantsType.REVERSE) {\n            players.reverse();\n        }\n\n        const tournamentMatches: DbTournamentMatch[] = [];\n        if (newTournamentType === TournamentType.AFL) {\n            tournamentMatches.push(\n                {\n                    match_number: 0,\n                    home_player_id: players[0].id,\n                    away_player_id: players[3].id,\n                },\n                {\n                    match_number: 1,\n                    home_player_id: players[4].id,\n                    away_player_id: players[7].id,\n                },\n                {\n                    match_number: 2,\n                    home_player_id: players[5].id,\n                    away_player_id: players[6].id,\n                },\n                {\n                    match_number: 3,\n                    home_player_id: players[1].id,\n                    away_player_id: players[2].id,\n                }\n            );\n        } else {\n            tournamentMatches.push(\n                {\n                    match_number: 0,\n                    home_player_id: players[0].id,\n                    away_player_id: players[7].id,\n                },\n                {\n                    match_number: 1,\n                    home_player_id: players[3].id,\n                    away_player_id: players[4].id,\n                },\n                {\n                    match_number: 2,\n                    home_player_id: players[1].id,\n                    away_player_id: players[6].id,\n                },\n                {\n                    match_number: 3,\n                    home_player_id: players[2].id,\n                    away_player_id: players[5].id,\n                }\n            );\n        }\n\n        const newTournament: DbTournament = {\n            id: uuidv4(),\n            name: newTournamentName,\n            start_date: getISODate(),\n            matches: tournamentMatches,\n            participants: newTournamentParticipantsType,\n            type: newTournamentType,\n        };\n\n        QuickHitAPI.addUpdateTournament(newTournament, onSuccess, onError);\n    };\n\n    const getLadderTableRows = (): JSX.Element[] => {\n        const ladderPlayers: DbPlayer[] = [...props.sortedPlayers];\n        if (newTournamentParticipantsType === TournamentParticipantsType.REVERSE) {\n            ladderPlayers.reverse();\n        }\n        const tableRows: JSX.Element[] = [];\n        for (let i = 0; i < ladderPlayers.length; ++i) {\n            tableRows.push(\n                <Table.Row positive={i <= 7} negative={i >= 8}>\n                    <Table.Cell>{i + 1}</Table.Cell>\n                    <Table.Cell>\n                        <Icon name={ladderPlayers[i].icon} /> {ladderPlayers[i].name}\n                    </Table.Cell>\n                    <Table.Cell>{ladderPlayers[i].elo}</Table.Cell>\n                </Table.Row>\n            );\n        }\n        return tableRows;\n    };\n\n    return (\n        <Modal closeIcon onClose={props.onClose} open={props.isOpen}>\n            <Modal.Header>\n                Start new tournament <Icon name={\"trophy\"} />\n            </Modal.Header>\n            <Modal.Content>\n                <Grid id={\"contentGrid\"} divided>\n                    <Grid.Column className={\"content-column\"}>\n                        <Form onSubmit={(): void => startNewTournament()}>\n                            <Form.Input\n                                label={\"Tournament name\"}\n                                onChange={(event, data): void => setNewTournamentName(data.value)}\n                                required\n                            />\n                            <Form.Group inline>\n                                <label>Tournament participants</label>\n                                <Form.Radio\n                                    label={\"Standard\"}\n                                    value={TournamentParticipantsType.STANDARD}\n                                    checked={newTournamentParticipantsType === TournamentParticipantsType.STANDARD}\n                                    onChange={(event, { value }): void =>\n                                        setParticipantsType(value as TournamentParticipantsType)\n                                    }\n                                />\n                                <Form.Radio\n                                    label={\"Reverse\"}\n                                    value={TournamentParticipantsType.REVERSE}\n                                    checked={newTournamentParticipantsType === TournamentParticipantsType.REVERSE}\n                                    onChange={(event, { value }): void =>\n                                        setParticipantsType(value as TournamentParticipantsType)\n                                    }\n                                />\n                            </Form.Group>\n                            <Form.Field label={\"Tournament type\"} />\n                            <Form.Radio\n                                label={\"Single elimination\"}\n                                value={TournamentType.SINGLE}\n                                checked={newTournamentType === TournamentType.SINGLE}\n                                onChange={(event, { value }): void => setTournamentType(value as TournamentType)}\n                            />\n                            <Form.Radio\n                                label={\"Double elimination\"}\n                                value={TournamentType.DOUBLE}\n                                checked={newTournamentType === TournamentType.DOUBLE}\n                                onChange={(event, { value }): void => setTournamentType(value as TournamentType)}\n                            />\n                            <Form.Radio\n                                label={\"AFL-style\"}\n                                value={TournamentType.AFL}\n                                checked={newTournamentType === TournamentType.AFL}\n                                onChange={(event, { value }): void => setTournamentType(value as TournamentType)}\n                            />\n                            <Form.Button disabled={!newTournamentName || startingNewTournament} id={\"newTournamentBtn\"}>\n                                {`Start tournament with these top 8 players  `}\n                                {startingNewTournament ? <Icon loading name={\"spinner\"} /> : <span />}\n                            </Form.Button>\n                        </Form>\n                    </Grid.Column>\n                    <Grid.Column className={\"content-column\"}>\n                        <div id={\"newTournamentLadderScroller\"}>\n                            <Table id={\"newTournamentLadderTable\"}>\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell>Ladder position</Table.HeaderCell>\n                                        <Table.HeaderCell>Player name</Table.HeaderCell>\n                                        <Table.HeaderCell>Player ELO</Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Body>{getLadderTableRows()}</Table.Body>\n                            </Table>\n                        </div>\n                    </Grid.Column>\n                </Grid>\n            </Modal.Content>\n        </Modal>\n    );\n}\n\nexport default NewTournament;\n","import { useState } from \"react\";\nimport { Modal, Form, Icon } from \"semantic-ui-react\";\nimport { QuickHitAPI } from \"../../../api/QuickHitAPI\";\nimport { DbPlayer, DbTournament, DbTournamentMatch } from \"../../../types/database/models\";\nimport { generateTournamentAchievements } from \"../../Achievements/AchievementChecker\";\nimport { TournamentType } from \"../../../types/types\";\nimport { makeSuccessToast, makeErrorToast } from \"../../Toast/Toast\";\nimport { getISODate } from \"../Tournament\";\nimport \"./EnterTournamentGame.css\";\n\ninterface EnterTournamentGameProps {\n    onClose: () => void;\n    isOpen: boolean;\n    refresh: () => void;\n    // In theory will never be undefined.\n    matchEntering: DbTournamentMatch | undefined;\n    currentTournament: DbTournament;\n    homePlayerEntering: string;\n    awayPlayerEntering: string;\n    playersMap: Map<string, DbPlayer>;\n}\n\nfunction EnterTournamentGame(props: EnterTournamentGameProps): JSX.Element {\n    const [homePlayerEnteringScore, setHomePlayerEnteringScore] = useState<number | undefined>(undefined);\n    const [awayPlayerEnteringScore, setAwayPlayerEnteringScore] = useState<number | undefined>(undefined);\n    const [confirmingMatchScore, setConfirmingMatchScore] = useState<boolean>(false);\n\n    const endTournament = (\n        matchEntering: DbTournamentMatch,\n        homeWon: boolean,\n        onError: (errorMsg: string) => void\n    ): void => {\n        const matchWinnerId = homeWon ? matchEntering.home_player_id : matchEntering.away_player_id;\n        const matchLoserId = homeWon ? matchEntering.away_player_id : matchEntering.home_player_id;\n\n        props.currentTournament.end_date = getISODate();\n        const tournamentWinner = props.playersMap.get(matchWinnerId);\n        const tournamentRunnerUp = props.playersMap.get(matchLoserId);\n        if (tournamentWinner && tournamentRunnerUp) {\n            if (tournamentWinner.tournamentWins) {\n                ++tournamentWinner.tournamentWins;\n            } else {\n                tournamentWinner.tournamentWins = 1;\n            }\n\n            if (tournamentRunnerUp.tournamentRunnerUps) {\n                ++tournamentRunnerUp.tournamentRunnerUps;\n            } else {\n                tournamentRunnerUp.tournamentRunnerUps = 1;\n            }\n\n            const onPlayerUpdateFailure = (errorMsg: string): void => {\n                onError(errorMsg);\n                return;\n            };\n\n            QuickHitAPI.addOrUpdatePlayer(\n                tournamentWinner,\n                () => {\n                    /* Do nothing on success. */\n                },\n                onPlayerUpdateFailure\n            );\n\n            QuickHitAPI.addOrUpdatePlayer(\n                tournamentRunnerUp,\n                () => {\n                    /* Do nothing on success. */\n                },\n                onPlayerUpdateFailure\n            );\n\n            generateTournamentAchievements(props.currentTournament.name, tournamentWinner, tournamentRunnerUp, onError);\n        }\n    };\n\n    const updateMatchAndTournament = (): void => {\n        const onSuccess = (): void => {\n            setHomePlayerEnteringScore(undefined);\n            setAwayPlayerEnteringScore(undefined);\n            makeSuccessToast(\"Game entered!\", \"The tournament marches on!\");\n            props.onClose();\n            setConfirmingMatchScore(false);\n            props.refresh();\n        };\n\n        const onError = (errorMsg: string): void => {\n            makeErrorToast(\"Game not entered!\", errorMsg);\n            setConfirmingMatchScore(false);\n            props.refresh();\n        };\n\n        setConfirmingMatchScore(true);\n\n        // Should never be true.\n        if (!props.matchEntering) {\n            makeErrorToast(\"Come on man\", \"You've got to be entering a score\");\n            setConfirmingMatchScore(false);\n            return;\n        }\n\n        // Also should never be true.\n        if (homePlayerEnteringScore === undefined || awayPlayerEnteringScore === undefined) {\n            makeErrorToast(\"Come on man\", \"You've got to enter a score\");\n            setConfirmingMatchScore(false);\n            props.refresh();\n            return;\n        }\n\n        if (homePlayerEnteringScore === awayPlayerEnteringScore) {\n            makeErrorToast(\"Come on man\", \"Winning player score must be higher than losing player score\");\n            setConfirmingMatchScore(false);\n            props.refresh();\n            return;\n        }\n\n        props.matchEntering.home_score = homePlayerEnteringScore;\n        props.matchEntering.away_score = awayPlayerEnteringScore;\n\n        const homeWon = homePlayerEnteringScore > awayPlayerEnteringScore;\n        const matchWinnerId = homeWon ? props.matchEntering.home_player_id : props.matchEntering.away_player_id;\n        const matchLoserId = homeWon ? props.matchEntering.away_player_id : props.matchEntering.home_player_id;\n\n        if (props.currentTournament.type && props.currentTournament.type === TournamentType.DOUBLE) {\n            // Add the winner's ID (and loser's ID, if it's their first loss) to their next match.\n            switch (props.matchEntering.match_number) {\n                case 0:\n                    updateFutureTournamentMatch(6, matchWinnerId, true);\n                    updateFutureTournamentMatch(4, matchLoserId, true);\n                    break;\n                case 1:\n                    updateFutureTournamentMatch(6, matchWinnerId, false);\n                    updateFutureTournamentMatch(4, matchLoserId, false);\n                    break;\n                case 2:\n                    updateFutureTournamentMatch(7, matchWinnerId, true);\n                    updateFutureTournamentMatch(5, matchLoserId, true);\n                    break;\n                case 3:\n                    updateFutureTournamentMatch(7, matchWinnerId, false);\n                    updateFutureTournamentMatch(5, matchLoserId, false);\n                    break;\n                case 4:\n                    updateFutureTournamentMatch(9, matchWinnerId, false);\n                    break;\n                case 5:\n                    updateFutureTournamentMatch(8, matchWinnerId, false);\n                    break;\n                case 6:\n                    updateFutureTournamentMatch(11, matchWinnerId, true);\n                    updateFutureTournamentMatch(8, matchLoserId, true);\n                    break;\n                case 7:\n                    updateFutureTournamentMatch(11, matchWinnerId, false);\n                    updateFutureTournamentMatch(9, matchLoserId, true);\n                    break;\n                case 8:\n                    updateFutureTournamentMatch(10, matchWinnerId, false);\n                    break;\n                case 9:\n                    updateFutureTournamentMatch(10, matchWinnerId, true);\n                    break;\n                case 10:\n                    updateFutureTournamentMatch(12, matchWinnerId, false);\n                    break;\n                case 11:\n                    updateFutureTournamentMatch(13, matchWinnerId, true);\n                    updateFutureTournamentMatch(12, matchLoserId, true);\n                    break;\n                case 12:\n                    updateFutureTournamentMatch(13, matchWinnerId, false);\n                    break;\n                case 13:\n                    // If the last game is being entered, then the tournament is over, and we can add its end date.\n                    endTournament(props.matchEntering, homeWon, onError);\n                    break;\n            }\n        } else if (props.currentTournament.type && props.currentTournament.type === TournamentType.AFL) {\n            // Add the winner's ID (and loser's ID, if it's they have the double chance) to their next match.\n            switch (props.matchEntering.match_number) {\n                case 0:\n                    updateFutureTournamentMatch(6, matchWinnerId, true);\n                    updateFutureTournamentMatch(4, matchLoserId, true);\n                    break;\n                case 1:\n                    updateFutureTournamentMatch(4, matchWinnerId, false);\n                    break;\n                case 2:\n                    updateFutureTournamentMatch(5, matchWinnerId, false);\n                    break;\n                case 3:\n                    updateFutureTournamentMatch(7, matchWinnerId, true);\n                    updateFutureTournamentMatch(5, matchLoserId, true);\n                    break;\n                case 4:\n                    updateFutureTournamentMatch(7, matchWinnerId, false);\n                    break;\n                case 5:\n                    updateFutureTournamentMatch(6, matchWinnerId, false);\n                    break;\n                case 6:\n                    updateFutureTournamentMatch(8, matchWinnerId, true);\n                    break;\n                case 7:\n                    updateFutureTournamentMatch(8, matchWinnerId, false);\n                    break;\n                case 8:\n                    // If the grand final is being entered, then the tournament is over, and we can add its end date.\n                    endTournament(props.matchEntering, homeWon, onError);\n                    break;\n            }\n        } else {\n            // Add the winner's ID to their next match.\n            switch (props.matchEntering.match_number) {\n                case 0:\n                    updateFutureTournamentMatch(4, matchWinnerId, true);\n                    break;\n                case 1:\n                    updateFutureTournamentMatch(4, matchWinnerId, false);\n                    break;\n                case 2:\n                    updateFutureTournamentMatch(5, matchWinnerId, true);\n                    break;\n                case 3:\n                    updateFutureTournamentMatch(5, matchWinnerId, false);\n                    break;\n                case 4:\n                    updateFutureTournamentMatch(6, matchWinnerId, true);\n                    break;\n                case 5:\n                    updateFutureTournamentMatch(6, matchWinnerId, false);\n                    break;\n                case 6:\n                    // If the last game is being entered, then the tournament is over, and we can add its end date.\n                    endTournament(props.matchEntering, homeWon, onError);\n                    break;\n            }\n        }\n\n        QuickHitAPI.addUpdateTournament(props.currentTournament, onSuccess, onError);\n    };\n\n    const updateFutureTournamentMatch = (\n        futureMatchIndex: number,\n        futurePlayerId: string,\n        winnerWillBeHome: boolean\n    ): void => {\n        // If the future match already exists, just add the winner's ID to it. Otherwise, make the new match, with the winner's ID.\n        if (props.currentTournament.matches[futureMatchIndex]) {\n            if (winnerWillBeHome) {\n                props.currentTournament.matches[futureMatchIndex].home_player_id = futurePlayerId;\n            } else {\n                props.currentTournament.matches[futureMatchIndex].away_player_id = futurePlayerId;\n            }\n        } else {\n            if (winnerWillBeHome) {\n                props.currentTournament.matches[futureMatchIndex] = {\n                    match_number: futureMatchIndex,\n                    home_player_id: futurePlayerId,\n                    away_player_id: \"\",\n                };\n            } else {\n                props.currentTournament.matches[futureMatchIndex] = {\n                    match_number: futureMatchIndex,\n                    home_player_id: \"\",\n                    away_player_id: futurePlayerId,\n                };\n            }\n        }\n    };\n\n    return (\n        <Modal closeIcon onClose={props.onClose} open={props.isOpen}>\n            <Modal.Header>Enter tournament game</Modal.Header>\n            <Modal.Content>\n                <Form onSubmit={updateMatchAndTournament}>\n                    <Form.Group widths=\"equal\">\n                        <Form.Input\n                            className={\"tournament-score-input\"}\n                            label={props.homePlayerEntering + \"'s score\"}\n                            type={\"number\"}\n                            min={0}\n                            value={homePlayerEnteringScore}\n                            onChange={(event, data): void => setHomePlayerEnteringScore(parseInt(data.value))}\n                            required\n                        />\n                        <Form.Input\n                            className={\"tournament-score-input\"}\n                            label={props.awayPlayerEntering + \"'s score\"}\n                            type={\"number\"}\n                            min={0}\n                            value={awayPlayerEnteringScore}\n                            onChange={(event, data): void => setAwayPlayerEnteringScore(parseInt(data.value))}\n                            required\n                        />\n                    </Form.Group>\n                    <Form.Button\n                        className={\"confirm-score-button\"}\n                        disabled={\n                            homePlayerEnteringScore === undefined ||\n                            awayPlayerEnteringScore === undefined ||\n                            confirmingMatchScore\n                        }\n                    >\n                        {`Confirm score  `}\n                        {confirmingMatchScore ? <Icon loading name={\"spinner\"} /> : <span />}\n                    </Form.Button>\n                </Form>\n            </Modal.Content>\n        </Modal>\n    );\n}\n\nexport default EnterTournamentGame;\n","import { useState } from \"react\";\nimport { Button, Dropdown, Header, Icon, Label, Message, Modal, Table } from \"semantic-ui-react\";\nimport { TTDataPropsTypeCombined } from \"../../containers/shared\";\nimport { DbPlayer, DbTournament, DbTournamentMatch, getTodaysDate } from \"../../types/database/models\";\nimport \"./Tournament.css\";\nimport { getPlayersMap } from \"../QHDataLoader/QHDataLoader\";\nimport NewTournament from \"./NewTournament/NewTournament\";\nimport EnterTournamentGame from \"./EnterTournamentGame/EnterTournamentGame\";\nimport { TournamentParticipantsType, TournamentType } from \"../../types/types\";\n\nfunction Tournament(props: TTDataPropsTypeCombined): JSX.Element {\n    const [newTournamentModalOpen, openNewTournamentModal] = useState<boolean>(false);\n    const [enterGameModalOpen, openEnterGameModal] = useState<boolean>(false);\n    const [recapModalOpen, openRecapModal] = useState<boolean>(false);\n    const [homePlayerEntering, setHomePlayerEntering] = useState<string>(\"\");\n    const [awayPlayerEntering, setAwayPlayerEntering] = useState<string>(\"\");\n    const [matchEntering, setMatchEntering] = useState<DbTournamentMatch | undefined>(undefined);\n    const [viewPastModalOpen, openViewPastModal] = useState<boolean>(false);\n    // Music by Karl Casey @ White Bat Audio.\n    const [pastTournamentsAudioSynth] = useState<HTMLAudioElement>(\n        new Audio(process.env.PUBLIC_URL + \"/past-tournaments-music-synth.mp3\")\n    );\n    // Music by Luxury Elite.\n    const [pastTournamentsAudioVapour] = useState<HTMLAudioElement>(\n        new Audio(process.env.PUBLIC_URL + \"/past-tournaments-music-vapour.mp3\")\n    );\n    // Music by HOME.\n    const [recapAudio] = useState<HTMLAudioElement>(new Audio(process.env.PUBLIC_URL + \"/recap-audio.mp3\"));\n    // Music by tuddmusic.\n    const [arcadeAudioSynth] = useState<HTMLAudioElement>(new Audio(process.env.PUBLIC_URL + \"/arcade-synth.mp3\"));\n    // Music by Kannibal.\n    const [arcadeAudioVapour] = useState<HTMLAudioElement>(new Audio(process.env.PUBLIC_URL + \"/arcade-vapour.mp3\"));\n    pastTournamentsAudioSynth.volume = 0.2;\n    pastTournamentsAudioVapour.volume = 0.2;\n    recapAudio.volume = 0.5;\n    arcadeAudioSynth.volume = 0.2;\n    arcadeAudioVapour.volume = 0.2;\n    pastTournamentsAudioVapour.loop = true;\n    pastTournamentsAudioSynth.loop = true;\n    recapAudio.loop = true;\n    arcadeAudioSynth.loop = true;\n    arcadeAudioVapour.loop = true;\n    const [secondPastModalOpen, openSecondPastModal] = useState<boolean>(false);\n    const [pastTournamentBeingViewed, setViewedPastTournament] = useState<DbTournament | undefined>(undefined);\n    const [synth, setSynth] = useState<boolean>(true);\n    const [pastTournamentView, setPastTournamentView] = useState<string>(\"table\");\n\n    // We have to sort the retrieved players and tournaments because using the Firebase REST API's query parameters does\n    // not guarantee order. Make sure to filter out players who have never played a game, too.\n    const sortedPlayers = props.players\n        .sort((p1, p2) => p2.elo - p1.elo)\n        .filter((player) =>\n            props.matches.some((match) => match.winning_player_id === player.id || match.losing_player_id === player.id)\n        );\n    const sortedTournaments = props.tournaments.sort((t1, t2) => t2.start_date.localeCompare(t1.start_date));\n    const playersMap = getPlayersMap(props.players);\n\n    // Determine what rank the player was in the supplied tournament.\n    const getPlayerRank = (tournament: DbTournament, playerId: string): number => {\n        if (tournament.type && tournament.type === TournamentType.AFL) {\n            if (tournament.matches[0].home_player_id === playerId) return 1;\n            else if (tournament.matches[0].away_player_id === playerId) return 4;\n            else if (tournament.matches[1].home_player_id === playerId) return 5;\n            else if (tournament.matches[1].away_player_id === playerId) return 8;\n            else if (tournament.matches[2].home_player_id === playerId) return 6;\n            else if (tournament.matches[2].away_player_id === playerId) return 7;\n            else if (tournament.matches[3].home_player_id === playerId) return 2;\n            else return 3;\n        } else {\n            if (tournament.matches[0].home_player_id === playerId) return 1;\n            else if (tournament.matches[0].away_player_id === playerId) return 8;\n            else if (tournament.matches[1].home_player_id === playerId) return 4;\n            else if (tournament.matches[1].away_player_id === playerId) return 5;\n            else if (tournament.matches[2].home_player_id === playerId) return 2;\n            else if (tournament.matches[2].away_player_id === playerId) return 7;\n            else if (tournament.matches[3].home_player_id === playerId) return 3;\n            else return 6;\n        }\n    };\n\n    const homeWon = (match: DbTournamentMatch): boolean | undefined => {\n        if (match && match.home_score !== undefined && match.away_score !== undefined) {\n            return match.home_score > match.away_score;\n        } else {\n            return undefined;\n        }\n    };\n\n    // Returns the VS button differently depending on the match state. If the match has its players determined, but the match\n    // has not yet been played, make the button clickable to enter the score. If the match has already been played, make the\n    // button display the score, and be unclickable. Lastly, if the players for the match are not yet defined, just display\n    // an unclickable VS.\n    const getMatchBtn = (match: DbTournamentMatch): JSX.Element => {\n        if (match && match.home_player_id && match.away_player_id) {\n            if (match.home_score === undefined) {\n                return (\n                    <span\n                        className={\"enter-game-score-vs\"}\n                        onClick={(): void => {\n                            openGameEntryModal(match);\n                        }}\n                    >\n                        VS\n                    </span>\n                );\n            } else {\n                return (\n                    <span className={\"enter-game-score-vs\"}>\n                        {match.home_score}-{match.away_score}\n                    </span>\n                );\n            }\n        } else {\n            return <span className={\"enter-game-score-vs\"}>VS</span>;\n        }\n    };\n\n    const getMatchItem = (\n        match: DbTournamentMatch,\n        playersMap: Map<string, DbPlayer>,\n        tournament: DbTournament,\n        homeTbdText?: string,\n        awayTbdText?: string\n    ): JSX.Element => {\n        return (\n            <div>\n                <span className={homeWon(match) === false ? \"match-loser home-player\" : \"home-player\"}>\n                    {match?.home_player_id ? (\n                        `(${getPlayerRank(tournament, match.home_player_id)}) ${\n                            playersMap.get(match.home_player_id)?.name\n                        }`\n                    ) : homeTbdText ? (\n                        <span className={\"custom-tbd\"}>{homeTbdText}</span>\n                    ) : (\n                        \"TBD\"\n                    )}\n                </span>\n                <span\n                    className={\n                        match && match.home_player_id && match.away_player_id && match.home_score === undefined\n                            ? \"clickable-vs\"\n                            : \"vs\"\n                    }\n                >\n                    {getMatchBtn(match)}\n                </span>\n                <span className={homeWon(match) === true ? \"match-loser\" : undefined}>\n                    {match?.away_player_id ? (\n                        `(${getPlayerRank(tournament, match.away_player_id)}) ${\n                            playersMap.get(match.away_player_id)?.name\n                        }`\n                    ) : awayTbdText ? (\n                        <span className={\"custom-tbd\"}>{awayTbdText}</span>\n                    ) : (\n                        \"TBD\"\n                    )}\n                </span>\n            </div>\n        );\n    };\n\n    const openGameEntryModal = (match: DbTournamentMatch): void => {\n        setMatchEntering(match);\n        setHomePlayerEntering(playersMap.get(match.home_player_id)?.name as string);\n        setAwayPlayerEntering(playersMap.get(match.away_player_id)?.name as string);\n        openEnterGameModal(true);\n    };\n\n    // Returns the icon and name of the winner of the given tournament.\n    const getWinner = (tournament: DbTournament): JSX.Element => {\n        let finalMatch;\n        if (tournament.type && tournament.type === TournamentType.DOUBLE) {\n            finalMatch = tournament.matches[13];\n        } else if (tournament.type && tournament.type === TournamentType.AFL) {\n            finalMatch = tournament.matches[8];\n        } else {\n            finalMatch = tournament.matches[6];\n        }\n\n        if (finalMatch && finalMatch.home_score !== undefined && finalMatch.away_score !== undefined) {\n            const homeWon = finalMatch.home_score > finalMatch.away_score;\n            return (\n                <span>\n                    <Icon\n                        name={playersMap.get(homeWon ? finalMatch.home_player_id : finalMatch.away_player_id)?.icon}\n                    />\n                    {playersMap.get(homeWon ? finalMatch.home_player_id : finalMatch.away_player_id)?.name}\n                </span>\n            );\n        } else {\n            return <span>Who will it be?</span>;\n        }\n    };\n\n    const getPastTournamentsTableRows = (tournaments: DbTournament[]): JSX.Element[] => {\n        const tableRows: JSX.Element[] = [];\n        tournaments.forEach((tournament) => {\n            tableRows.push(\n                <Table.Row key={tournament.id}>\n                    <Table.Cell selectable>\n                        <div\n                            className={\"past-tournament-expand\"}\n                            onClick={(): void => {\n                                setViewedPastTournament(tournament);\n                                openSecondPastModal(true);\n                            }}\n                        >\n                            {tournament.name} <Icon name={\"external\"} />\n                        </div>\n                    </Table.Cell>\n                    <Table.Cell>{tournament.participants ?? TournamentParticipantsType.STANDARD}</Table.Cell>\n                    <Table.Cell>{tournament.type ?? TournamentType.SINGLE}</Table.Cell>\n                    <Table.Cell>{tournament.start_date}</Table.Cell>\n                    <Table.Cell>{tournament.end_date}</Table.Cell>\n                    <Table.Cell>{getWinner(tournament)}</Table.Cell>\n                </Table.Row>\n            );\n        });\n        return tableRows;\n    };\n\n    const getHeaders = (tournament: DbTournament): JSX.Element[] => {\n        const headers: JSX.Element[] = [];\n\n        if (tournament.type && tournament.type === TournamentType.DOUBLE) {\n            headers.push(\n                <h3>Round 1</h3>,\n                <h3>Quarter-Finals</h3>,\n                <h3>Semi-Finals</h3>,\n                <h3>Finals</h3>,\n                <h3>\n                    Winner <Icon name=\"trophy\" />\n                </h3>\n            );\n        } else if (tournament.type && tournament.type === TournamentType.AFL) {\n            headers.push(\n                <h3>Finals Week 1</h3>,\n                <h3>Semi Finals</h3>,\n                <h3>Preliminary Finals</h3>,\n                <h3>Grand Final</h3>,\n                <h3>\n                    Winner <Icon name=\"trophy\" />\n                </h3>\n            );\n        } else {\n            headers.push(\n                <h3>Quarter-Finals</h3>,\n                <h3>Semi-Finals</h3>,\n                <h3>Final</h3>,\n                <h3>\n                    Winner <Icon name=\"trophy\" />\n                </h3>\n            );\n        }\n\n        return headers;\n    };\n\n    const getBrackets = (tournament: DbTournament): JSX.Element[] => {\n        const brackets: JSX.Element[] = [];\n\n        if (tournament.type && tournament.type === TournamentType.DOUBLE) {\n            brackets.push(\n                <ul className=\"bracket bracket-1\">\n                    <li className=\"match-item\" key={0}>\n                        <span className={\"watermark\"}>1</span>\n                        {getMatchItem(tournament.matches[0], playersMap, tournament)}\n                    </li>\n                    <li className=\"match-item\" key={1}>\n                        <span className={\"watermark\"}>2</span>\n                        {getMatchItem(tournament.matches[1], playersMap, tournament)}\n                    </li>\n                    <li className=\"match-item\" key={2}>\n                        <span className={\"watermark\"}>3</span>\n                        {getMatchItem(tournament.matches[2], playersMap, tournament)}\n                    </li>\n                    <li className=\"match-item\" key={3}>\n                        <span className={\"watermark\"}>4</span>\n                        {getMatchItem(tournament.matches[3], playersMap, tournament)}\n                    </li>\n                    <li className=\"match-item loser\" key={4}>\n                        <span className={\"watermark\"}>5</span>\n                        {getMatchItem(tournament.matches[4], playersMap, tournament, \"G1 Loser\", \"G2 Loser\")}\n                    </li>\n                    <li className=\"match-item loser\" key={5}>\n                        <span className={\"watermark\"}>6</span>\n                        {getMatchItem(tournament.matches[5], playersMap, tournament, \"G3 Loser\", \"G4 Loser\")}\n                    </li>\n                </ul>,\n                <ul className=\"bracket bracket-2\">\n                    <li className=\"match-item\" key={6}>\n                        <span className={\"watermark\"}>7</span>\n                        {getMatchItem(tournament.matches[6], playersMap, tournament, \"G1 Winner\", \"G2 Winner\")}\n                    </li>\n                    <li className=\"match-item\" key={7}>\n                        <span className={\"watermark\"}>8</span>\n                        {getMatchItem(tournament.matches[7], playersMap, tournament, \"G3 Winner\", \"G4 Winner\")}\n                    </li>\n                    <li className=\"match-item loser\" key={9}>\n                        <span className={\"watermark\"}>10</span>\n                        {getMatchItem(tournament.matches[9], playersMap, tournament, \"G8 Loser\", \"G5 Winner\")}\n                    </li>\n                    <li className=\"match-item loser\" key={8}>\n                        <span className={\"watermark\"}>9</span>\n                        {getMatchItem(tournament.matches[8], playersMap, tournament, \"G7 Loser\", \"G6 Winner\")}\n                    </li>\n                </ul>,\n                <ul className=\"bracket bracket-3\">\n                    <li className=\"match-item\" key={11}>\n                        <span className={\"watermark\"}>12</span>\n                        {getMatchItem(tournament.matches[11], playersMap, tournament, \"G7 Winner\", \"G8 Winner\")}\n                    </li>\n                    <li className=\"match-item loser\" key={10}>\n                        <span className={\"watermark\"}>11</span>\n                        {getMatchItem(tournament.matches[10], playersMap, tournament, \"G10 Winner\", \"G9 Winner\")}\n                    </li>\n                </ul>,\n                <ul className=\"bracket bracket-4\">\n                    <li className=\"match-item\" key={13}>\n                        <span className={\"watermark\"}>14</span>\n                        {getMatchItem(tournament.matches[13], playersMap, tournament, \"G12 Winner\", \"G13 Winner\")}\n                    </li>\n                    <li className=\"match-item loser\" key={12}>\n                        <span className={\"watermark\"}>13</span>\n                        {getMatchItem(tournament.matches[12], playersMap, tournament, \"G12 Loser\", \"G11 Winner\")}\n                    </li>\n                </ul>,\n                <ul className=\"bracket bracket-5\">\n                    <li className=\"match-item\">{getWinner(tournament)}</li>\n                </ul>\n            );\n        } else if (tournament.type && tournament.type === TournamentType.AFL) {\n            brackets.push(\n                <ul className=\"bracket bracket-1\">\n                    <li className=\"match-item\" key={0}>\n                        <span className={\"watermark\"}>QF1</span>\n                        {getMatchItem(tournament.matches[0], playersMap, tournament)}\n                    </li>\n                    <li className=\"match-item\" key={1}>\n                        <span className={\"watermark\"}>EF1</span>\n                        {getMatchItem(tournament.matches[1], playersMap, tournament)}\n                    </li>\n                    <li className=\"match-item\" key={2}>\n                        <span className={\"watermark\"}>EF2</span>\n                        {getMatchItem(tournament.matches[2], playersMap, tournament)}\n                    </li>\n                    <li className=\"match-item\" key={3}>\n                        <span className={\"watermark\"}>QF2</span>\n                        {getMatchItem(tournament.matches[3], playersMap, tournament)}\n                    </li>\n                </ul>,\n                <ul className=\"bracket bracket-2\">\n                    <li className=\"match-item\" key={4}>\n                        <span className={\"watermark\"}>SF1</span>\n                        {getMatchItem(tournament.matches[4], playersMap, tournament, \"QF1 Loser\", \"EF1 Winner\")}\n                    </li>\n                    <li className=\"match-item\" key={5}>\n                        <span className={\"watermark\"}>SF2</span>\n                        {getMatchItem(tournament.matches[5], playersMap, tournament, \"QF2 Loser\", \"EF2 Winner\")}\n                    </li>\n                </ul>,\n                <ul className=\"bracket bracket-3\">\n                    <li className=\"match-item\" key={6}>\n                        <span className={\"watermark\"}>PF1</span>\n                        {getMatchItem(tournament.matches[6], playersMap, tournament, \"QF1 Winner\", \"SF2 Winner\")}\n                    </li>\n                    <li className=\"match-item\" key={7}>\n                        <span className={\"watermark\"}>PF2</span>\n                        {getMatchItem(tournament.matches[7], playersMap, tournament, \"QF2 Winner\", \"SF1 Winner\")}\n                    </li>\n                </ul>,\n                <ul className=\"bracket bracket-4\">\n                    <li className=\"match-item\" key={8}>\n                        <span className={\"watermark\"}>GF</span>\n                        {getMatchItem(tournament.matches[8], playersMap, tournament, \"PF1 Winner\", \"PF2 Winner\")}\n                    </li>\n                </ul>,\n                <ul className=\"bracket bracket-5\">\n                    <li className=\"match-item\">{getWinner(tournament)}</li>\n                </ul>\n            );\n        } else {\n            brackets.push(\n                <ul className=\"bracket bracket-2\">\n                    <li className=\"match-item\" key={0}>\n                        {getMatchItem(tournament.matches[0], playersMap, tournament)}\n                    </li>\n                    <li className=\"match-item\" key={1}>\n                        {getMatchItem(tournament.matches[1], playersMap, tournament)}\n                    </li>\n                    <li className=\"match-item\" key={2}>\n                        {getMatchItem(tournament.matches[2], playersMap, tournament)}\n                    </li>\n                    <li className=\"match-item\" key={3}>\n                        {getMatchItem(tournament.matches[3], playersMap, tournament)}\n                    </li>\n                </ul>,\n                <ul className=\"bracket bracket-3\">\n                    <li className=\"match-item\" key={4}>\n                        {getMatchItem(tournament.matches[4], playersMap, tournament)}\n                    </li>\n                    <li className=\"match-item\" key={5}>\n                        {getMatchItem(tournament.matches[5], playersMap, tournament)}\n                    </li>\n                </ul>,\n                <ul className=\"bracket bracket-4\">\n                    <li className=\"match-item\" key={6}>\n                        {getMatchItem(tournament.matches[6], playersMap, tournament)}\n                    </li>\n                </ul>,\n                <ul className=\"bracket bracket-5\">\n                    <li className=\"match-item\">{getWinner(tournament)}</li>\n                </ul>\n            );\n        }\n\n        return brackets;\n    };\n\n    const renderTournament = (tournament: DbTournament): JSX.Element => {\n        return (\n            <div className=\"tournament-container\">\n                <div className=\"tournament-headers\">{getHeaders(tournament)}</div>\n                <div\n                    className={\n                        tournament.type && tournament.type !== TournamentType.SINGLE\n                            ? \"tournament-brackets watermarked\"\n                            : \"tournament-brackets single\"\n                    }\n                >\n                    {getBrackets(tournament)}\n                </div>\n            </div>\n        );\n    };\n\n    const onNewTournamentClose = (): void => {\n        openNewTournamentModal(false);\n        props.setForceRefresh(true);\n    };\n\n    const onEnterTournamentGameClose = (): void => openEnterGameModal(false);\n\n    const tournamentIsFinished = (tournament: DbTournament): boolean => {\n        if (tournament.type && tournament.type === TournamentType.DOUBLE) {\n            return tournament.matches[13] && tournament.matches[13].home_score !== undefined;\n        } else if (tournament.type && tournament.type === TournamentType.AFL) {\n            return tournament.matches[8] && tournament.matches[8].home_score !== undefined;\n        } else {\n            return tournament.matches[6] && tournament.matches[6].home_score !== undefined;\n        }\n    };\n\n    const getRecapMatchLabels = (match: DbTournamentMatch, winnerRank: number, loserRank: number): JSX.Element[] => {\n        const labels: JSX.Element[] = [];\n\n        if (match.home_score !== undefined && match.away_score !== undefined) {\n            if (match.home_score === 0 || match.away_score === 0) {\n                labels.push(\n                    <Label color={\"red\"}>\n                        <Icon name={\"tint\"} /> FATALITY\n                    </Label>\n                );\n            }\n            if (Math.abs(match.home_score - match.away_score) < 5) {\n                labels.push(\n                    <Label color={\"yellow\"}>\n                        <Icon name={\"bolt\"} /> THRILLER\n                    </Label>\n                );\n            }\n            if (winnerRank > loserRank) {\n                labels.push(\n                    <Label color={\"orange\"}>\n                        <Icon name={\"exclamation\"} /> UPSET\n                    </Label>\n                );\n            }\n            if (match.home_score > 21 || match.away_score > 21) {\n                labels.push(\n                    <Label color={\"grey\"}>\n                        <Icon name={\"hourglass\"} /> MARATHON\n                    </Label>\n                );\n            }\n        }\n\n        return labels;\n    };\n\n    const getMatchName = (match: DbTournamentMatch, tournamentType: TournamentType): string => {\n        switch (tournamentType) {\n            case TournamentType.SINGLE:\n                switch (match.match_number) {\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                        return \"Quarter Final\";\n                    case 4:\n                    case 5:\n                        return \"Semi Final\";\n                    case 6:\n                        return \"Final\";\n                }\n                break;\n            case TournamentType.DOUBLE:\n                return \"Game \" + (match.match_number + 1).toString();\n            case TournamentType.AFL:\n                if (match.match_number === 0) return \"Qualifying Final 1\";\n                if (match.match_number === 1) return \"Elimination Final 1\";\n                if (match.match_number === 2) return \"Elimination Final 2\";\n                if (match.match_number === 3) return \"Qualifying Final 2\";\n                if (match.match_number === 4) return \"Semi Final 1\";\n                if (match.match_number === 5) return \"Semi Final 2\";\n                if (match.match_number === 6) return \"Preliminary Final 1\";\n                if (match.match_number === 7) return \"Preliminary Final 2\";\n                if (match.match_number === 8) return \"Grand Final\";\n        }\n        return \"\";\n    };\n\n    const getRecapMatches = (): JSX.Element[] => {\n        const recapMatches: JSX.Element[] = [];\n\n        recapMatches.push(<p className={\"recap-match\"}>{sortedTournaments[0].name}</p>);\n\n        sortedTournaments[0].matches.forEach((match: DbTournamentMatch) => {\n            // The scores should always be defined, because we've finished the tournament if we're showing a recap.\n            if (match.home_score !== undefined && match.away_score !== undefined) {\n                const homeWon = match.home_score > match.away_score;\n                const winnerId = homeWon ? match.home_player_id : match.away_player_id;\n                const loserId = homeWon ? match.away_player_id : match.home_player_id;\n                const winnerName = playersMap.get(winnerId)?.name;\n                const loserName = playersMap.get(loserId)?.name;\n                const winnerScore = homeWon ? match.home_score : match.away_score;\n                const loserScore = homeWon ? match.away_score : match.home_score;\n                const winnerRank = getPlayerRank(sortedTournaments[0], winnerId);\n                const loserRank = getPlayerRank(sortedTournaments[0], loserId);\n\n                recapMatches.push(\n                    <p className={\"recap-match\"}>\n                        {getMatchName(match, sortedTournaments[0].type ?? TournamentType.SINGLE)}\n                        <br />({winnerRank}) {winnerName} defeated ({loserRank}) {loserName}, {winnerScore}-{loserScore}\n                        <br />\n                        {getRecapMatchLabels(match, winnerRank, loserRank)}\n                    </p>\n                );\n            }\n        });\n        recapMatches.push(<p className={\"recap-match\"}>Congratulations, {getWinner(sortedTournaments[0])}!</p>);\n        return recapMatches;\n    };\n\n    const playPastTableAudio = (): void => {\n        if (synth) {\n            arcadeAudioSynth.pause();\n            pastTournamentsAudioSynth.play();\n        } else {\n            arcadeAudioVapour.pause();\n            pastTournamentsAudioVapour.play();\n        }\n    };\n\n    const playPastArcadeAudio = (): void => {\n        if (synth) {\n            pastTournamentsAudioSynth.pause();\n            arcadeAudioSynth.play();\n        } else {\n            pastTournamentsAudioVapour.pause();\n            arcadeAudioVapour.play();\n        }\n    };\n\n    const getPastWinners = (tournaments: DbTournament[]): JSX.Element[] => {\n        const pastWinners: JSX.Element[] = [];\n\n        tournaments.forEach((tournament: DbTournament) => {\n            pastWinners.push(<p className={\"past-winner\"}>{getWinner(tournament)}</p>);\n        });\n\n        return pastWinners;\n    };\n\n    const getHighScoresTableRows = (): JSX.Element[] => {\n        const tableRows: JSX.Element[] = [];\n        const playerPointsWon: Map<string, number> = new Map<string, number>();\n\n        sortedTournaments.slice(1).forEach((tournament: DbTournament) => {\n            tournament.matches.forEach((match: DbTournamentMatch) => {\n                if (match.home_score !== undefined && match.away_score !== undefined) {\n                    if (playerPointsWon.has(match.home_player_id)) {\n                        playerPointsWon.set(\n                            match.home_player_id,\n                            (playerPointsWon.get(match.home_player_id) ?? 0) + match.home_score\n                        );\n                    } else {\n                        playerPointsWon.set(match.home_player_id, match.home_score);\n                    }\n                    if (playerPointsWon.has(match.away_player_id)) {\n                        playerPointsWon.set(\n                            match.away_player_id,\n                            (playerPointsWon.get(match.away_player_id) ?? 0) + match.away_score\n                        );\n                    } else {\n                        playerPointsWon.set(match.away_player_id, match.away_score);\n                    }\n                }\n            });\n        });\n\n        props.players\n            .sort(\n                (p1, p2) =>\n                    (p2.tournamentWins ?? 0) - (p1.tournamentWins ?? 0) ||\n                    (playerPointsWon.get(p2.id) ?? 0) - (playerPointsWon.get(p1.id) ?? 0)\n            )\n            .slice(0, synth ? 10 : 3)\n            .forEach((player: DbPlayer) => {\n                tableRows.push(\n                    <tr>\n                        <td>{player.name}</td>\n                        <td>{player.tournamentWins ?? 0}</td>\n                        <td>{playerPointsWon.get(player.id) ?? 0}</td>\n                    </tr>\n                );\n            });\n\n        return tableRows;\n    };\n\n    return (\n        <div>\n            {sortedTournaments.length > 0 && tournamentIsFinished(sortedTournaments[0]) ? (\n                <div>\n                    <div className={\"congrats-div\"}>Congratulations {getWinner(sortedTournaments[0])}!</div>\n                    <div className={\"new-tournament-div\"}>\n                        <Button\n                            onClick={(): void => {\n                                openRecapModal(true);\n                                recapAudio.play();\n                            }}\n                            id={\"recapButton\"}\n                        >\n                            View tournament recap\n                        </Button>\n                        <Button onClick={(): void => openNewTournamentModal(true)} className={\"new-tournament-button\"}>\n                            Start new tournament?\n                        </Button>\n                    </div>\n                    <Modal\n                        closeIcon\n                        onClose={(): void => {\n                            openRecapModal(false);\n                            recapAudio.pause();\n                            recapAudio.currentTime = 0;\n                        }}\n                        open={recapModalOpen}\n                        id={\"recapModal\"}\n                    >\n                        <Modal.Header>Tournament recap</Modal.Header>\n                        <Modal.Content>\n                            <div>{getRecapMatches()}</div>\n                        </Modal.Content>\n                    </Modal>\n                </div>\n            ) : (\n                <span />\n            )}\n            {sortedTournaments.length > 0 && sortedTournaments[0].matches.length > 0 ? (\n                <div>\n                    <div className={\"tournament-details\"}>\n                        <Header\n                            content={\n                                <span>\n                                    {sortedTournaments[0].name}\n                                    <Label color={\"orange\"}>\n                                        {(\n                                            sortedTournaments[0].participants ?? TournamentParticipantsType.STANDARD\n                                        ).toUpperCase()}\n                                    </Label>\n                                    <Label color={\"orange\"}>\n                                        {(sortedTournaments[0].type ?? TournamentType.SINGLE).toUpperCase()}\n                                    </Label>\n                                </span>\n                            }\n                            subheader={\"Start date: \" + sortedTournaments[0].start_date}\n                        />\n                    </div>\n                    {renderTournament(sortedTournaments[0])}\n                    <Message\n                        id={\"rulesMsg\"}\n                        icon={\"warning sign\"}\n                        header={\"Remember the tournament rules!\"}\n                        content={\n                            <div className={\"rules-content-wrapper\"}>\n                                <ul>\n                                    <li>Play to 21, and you must win by 2!</li>\n                                    <li>Swap sides when the total score adds up to 20!</li>\n                                </ul>\n                            </div>\n                        }\n                    />\n                    <Button\n                        onClick={(): void => {\n                            openViewPastModal(true);\n                            if (synth && pastTournamentView === \"table\") {\n                                pastTournamentsAudioSynth.play();\n                            } else if (synth) {\n                                arcadeAudioSynth.play();\n                            } else if (pastTournamentView === \"table\") {\n                                pastTournamentsAudioVapour.play();\n                            } else {\n                                arcadeAudioVapour.play();\n                            }\n                        }}\n                        id={synth ? \"pastTournamentsButtonSynth\" : \"pastTournamentsButtonVapour\"}\n                    >\n                        <Icon name={\"backward\"} />\n                        View past tournaments <Icon name={\"music\"} />\n                    </Button>\n                </div>\n            ) : (\n                <div className={\"new-tournament-div\"}>\n                    {!props.loading ? (\n                        <Button onClick={(): void => openNewTournamentModal(true)} className={\"new-tournament-button\"}>\n                            Start new tournament!\n                        </Button>\n                    ) : (\n                        <span />\n                    )}\n                </div>\n            )}\n            <NewTournament\n                onClose={onNewTournamentClose}\n                isOpen={newTournamentModalOpen}\n                sortedPlayers={sortedPlayers}\n            />\n            <EnterTournamentGame\n                onClose={onEnterTournamentGameClose}\n                isOpen={enterGameModalOpen}\n                refresh={(): void => props.setForceRefresh(true)}\n                matchEntering={matchEntering}\n                currentTournament={sortedTournaments[0]}\n                homePlayerEntering={homePlayerEntering}\n                awayPlayerEntering={awayPlayerEntering}\n                playersMap={playersMap}\n            />\n            <Modal\n                closeIcon\n                onClose={(): void => {\n                    openViewPastModal(false);\n                    pastTournamentsAudioSynth.pause();\n                    pastTournamentsAudioVapour.pause();\n                    arcadeAudioSynth.pause();\n                    arcadeAudioVapour.pause();\n                }}\n                open={viewPastModalOpen}\n                id={synth ? \"pastTournamentsModalSynth\" : \"pastTournamentsModalVapour\"}\n            >\n                <Modal.Header>\n                    <span>Past tournaments</span>\n                    {synth ? (\n                        <div id={\"pastModalButtons\"}>\n                            <Button\n                                active={pastTournamentView === \"table\"}\n                                onClick={(): void => {\n                                    setPastTournamentView(\"table\");\n                                    playPastTableAudio();\n                                }}\n                                color={\"orange\"}\n                            >\n                                Table\n                            </Button>\n                            <Button\n                                active={pastTournamentView === \"winners\"}\n                                onClick={(): void => {\n                                    setPastTournamentView(\"winners\");\n                                    playPastArcadeAudio();\n                                }}\n                                color={\"orange\"}\n                            >\n                                Winners\n                            </Button>\n                            <Button\n                                active={pastTournamentView === \"high-scores\"}\n                                onClick={(): void => {\n                                    setPastTournamentView(\"high-scores\");\n                                    playPastArcadeAudio();\n                                }}\n                                color={\"orange\"}\n                            >\n                                High Scores\n                            </Button>\n                        </div>\n                    ) : (\n                        <Dropdown\n                            id={\"pastModalDropdown\"}\n                            onChange={(e, { value }): void => {\n                                setPastTournamentView(value as string);\n                                if ((value as string) === \"table\") playPastTableAudio();\n                                else playPastArcadeAudio();\n                            }}\n                            options={[\n                                { text: \"Table\", value: \"table\" },\n                                { text: \"Winners\", value: \"winners\" },\n                                { text: \"High Scores\", value: \"high-scores\" },\n                            ]}\n                            value={pastTournamentView}\n                        />\n                    )}\n                </Modal.Header>\n                <Modal.Content>\n                    {pastTournamentView === \"table\" ? (\n                        <Table\n                            id={synth ? \"pastTournamentsTableSynth\" : \"pastTournamentsTableVapour\"}\n                            color={synth ? \"orange\" : \"pink\"}\n                            inverted\n                        >\n                            <Table.Header>\n                                <Table.Row>\n                                    <Table.HeaderCell>Tournament name</Table.HeaderCell>\n                                    <Table.HeaderCell>Tournament participants</Table.HeaderCell>\n                                    <Table.HeaderCell>Tournament type</Table.HeaderCell>\n                                    <Table.HeaderCell>Start date</Table.HeaderCell>\n                                    <Table.HeaderCell>End date</Table.HeaderCell>\n                                    <Table.HeaderCell>Winner</Table.HeaderCell>\n                                </Table.Row>\n                            </Table.Header>\n                            <Table.Body>{getPastTournamentsTableRows(sortedTournaments.slice(1))}</Table.Body>\n                        </Table>\n                    ) : (\n                        <span />\n                    )}\n                    {pastTournamentView === \"winners\" ? (\n                        <div id={synth ? \"pastWinnersSynth\" : \"pastWinnersVapour\"}>\n                            <div id={\"pastWinnersTitle\"}>10 MOST RECENT TOURNAMENT WINNERS</div>\n                            {getPastWinners(sortedTournaments.slice(1, 11))}\n                        </div>\n                    ) : (\n                        <span />\n                    )}\n                    {pastTournamentView === \"high-scores\" ? (\n                        <div id={synth ? \"highScoresSynth\" : \"highScoresVapour\"}>\n                            <div id={\"highScoresTitle\"}>TOURNAMENT HIGH SCORES TOP {synth ? 10 : 3}</div>\n                            <table id={\"highScoresTable\"}>\n                                <tr>\n                                    <th>{synth ? \"Player name\" : \"Name\"}</th>\n                                    <th>{synth ? \"Tournament wins\" : \"Tourn. Ws\"}</th>\n                                    <th>{synth ? \"Points won\" : \"Pts won\"}</th>\n                                </tr>\n                                {getHighScoresTableRows()}\n                            </table>\n                        </div>\n                    ) : (\n                        <span />\n                    )}\n                    <div>\n                        <Button\n                            id={synth ? \"vapourToggle\" : \"synthToggle\"}\n                            onClick={(): void => {\n                                if (synth && pastTournamentView === \"table\") {\n                                    pastTournamentsAudioSynth.pause();\n                                    pastTournamentsAudioVapour.play();\n                                } else if (synth) {\n                                    arcadeAudioSynth.pause();\n                                    arcadeAudioVapour.play();\n                                } else if (pastTournamentView === \"table\") {\n                                    pastTournamentsAudioVapour.pause();\n                                    pastTournamentsAudioSynth.play();\n                                } else {\n                                    arcadeAudioVapour.pause();\n                                    arcadeAudioSynth.play();\n                                }\n                                setSynth(!synth);\n                            }}\n                        >\n                            {synth ? \"Change to Vapour\" : \"Change to Synth\"}\n                        </Button>\n                    </div>\n                </Modal.Content>\n\n                <Modal\n                    closeIcon\n                    onClose={(): void => openSecondPastModal(false)}\n                    open={secondPastModalOpen}\n                    id={synth ? \"secondPastTournamentsModalSynth\" : \"secondPastTournamentsModalVapour\"}\n                >\n                    <Modal.Header>{pastTournamentBeingViewed?.name}</Modal.Header>\n                    <Modal.Content>\n                        {pastTournamentBeingViewed ? renderTournament(pastTournamentBeingViewed) : <span />}\n                    </Modal.Content>\n                </Modal>\n            </Modal>\n        </div>\n    );\n}\n\nexport const getISODate = (): string => {\n    const startDateWrongFormat = getTodaysDate();\n    return `${startDateWrongFormat.slice(6, 10)}-${startDateWrongFormat.slice(3, 5)}-${startDateWrongFormat.slice(\n        0,\n        2\n    )}`;\n};\n\nexport default Tournament;\n","import { connect } from \"react-redux\";\nimport Tournament from \"../../components/Tournament/Tournament\";\nimport { mapTTDataToProps, mapTTDispatchToProps } from \"../shared\";\n\nexport default connect(mapTTDataToProps, mapTTDispatchToProps)(Tournament);\n","import React from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./containers/Home/\";\nimport NotFound from \"./components/NotFound/NotFound\";\nimport Footer from \"./components/Footer/Footer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Ladder from \"./containers/Ladder\";\nimport { BASE_PATH, QuickHitPage } from \"./util/QuickHitPage\";\nimport Toast from \"./components/Toast/Toast\";\nimport RecentGames from \"./containers/RecentGames\";\nimport PlayerStatistics from \"./containers/PlayerStatistics\";\nimport QHDataLoader from \"./containers/QHDataLoader\";\nimport Tournament from \"./containers/Tournament/Tournament\";\n\nfunction App(): JSX.Element {\n    return (\n        <BrowserRouter>\n            <div className=\"app\">\n                <QHDataLoader />\n                <Navbar />\n                <div className={\"app-main-content\"}>\n                    <Switch>\n                        <Route exact path={`${BASE_PATH()}${QuickHitPage.HOME}`} component={Home} />\n                        <Route exact path={`${BASE_PATH()}${QuickHitPage.LADDER}`} component={Ladder} />\n                        <Route exact path={`${BASE_PATH()}${QuickHitPage.TOURNAMENT}`} component={Tournament} />\n                        <Route exact path={`${BASE_PATH()}${QuickHitPage.RECENT_GAMES}`} component={RecentGames} />\n                        <Route exact path={`${BASE_PATH()}${QuickHitPage.STATISTICS}`} component={PlayerStatistics} />\n                        <Route exact path={`${BASE_PATH()}${QuickHitPage.NOT_FOUND}`} component={NotFound} />\n                        <Route exact path={BASE_PATH()} component={Home} />\n                        <Redirect to={`${BASE_PATH()}${QuickHitPage.NOT_FOUND}`} />\n                    </Switch>\n                </div>\n                <Toast />\n                <Footer />\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nimport persistStore from \"redux-persist/es/persistStore\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/types/store\";\n\nTimeAgo.addDefaultLocale(en);\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate persistor={persistor} loading={null}>\n            <React.StrictMode>\n                <App />\n            </React.StrictMode>\n        </PersistGate>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA\n"],"sourceRoot":""}